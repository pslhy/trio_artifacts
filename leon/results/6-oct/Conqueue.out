[[33mWarning [0m] warning: there were 10 feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for emptyNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for zeroPrecedesLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for zeroPrecedesLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for zeroPrecedesSuf$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for zeroPrecedesSuf$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concreteUntil$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concreteUntil$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for strongSchedsProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for strongSchedsProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushUntilCarry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushUntilCarry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushLeftStream$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeftLazy$5[T](ys, xs, scr$8._2))' VC for pushLeftStream$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftStream$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for PushLeftLazyL@pushLeftLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for PushLeftLazyL@pushLeftLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for PushLeftLazyL@pushLeftLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeftStream$5[T](ys, w.trees, st@))' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeftLazyLemma$5[T](ys, w.trees, head ...)' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeft$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call schedMonotone$5[T](st@, a$207, rtail$4,  ...)' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixZeroLemma$5[T](q, head$120, rhead$ ...)' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushLeftAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeft$5[T](ys, w, st@))' VC for pushLeftAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call Pay$5[T](q$320, x$3$11._1._2, x$3$11._2))' VC for pushLeftAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for head$143 @?:?...
[[33mWarning [0m] Unexpected error from orb-cvc4 solver: Parse Error: Illegal argument detected
[[33mWarning [0m] std::vector<CVC4::DatatypeType> CVC4::ExprManager::mkMutualDatatypeTypes(const std::vector<CVC4::Datatype>&, const std::set<CVC4::Type>&)
[[33mWarning [0m] 
[[33mWarning [0m]   `unresolvedTypes' is a bad argument; expected resolver != nameResolutions.end() to hold
[[33mWarning [0m] cannot resolve type `Conc!110'; it's not among the datatypes being defined
[[33mWarning [0m] Unexpected error from z3 solver: line 13 column 19: invalid datatype declaration, unknown sort 'Conc!112'
[[33mWarning [0m]  => UNKNOWN
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for head$143 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for head$143 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeftLazyLemma$5[T](CC[T](head$124, y ...)' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pushLeftLazy$5[T](ys, xs, a$208._2))' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushLeftLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call schedMonotone$5[T](st1, st2, tail$28, pu ...)' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixDisequality$5[T](l, suf))' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixDisequality$5[T](rear$143, sufRear ...)' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for suffixCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteUntilIsSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteUntilIsSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilConcreteExten$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilConcreteExten$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for zeroPredSufConcreteUntilLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for zeroPredSufConcreteUntilLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteZeroPredLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteZeroPredLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixZeroLemma$5[T](tail$29, suf, suf2))' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for valid$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call thiss.fval-mem$3(uiState$2[T]))' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call thiss.fval-mem$3(st@))' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isCached$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isCached$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for abs$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lookup$5[T](l$366, i))' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lookup$5[T](r$216, i - l$366.size$10))' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call instAppendIndexAxiom$5[T](xs, i))' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call xs.toList$8.apply(i))' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for lookup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for instAppendIndexAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call appendIndex[T](l$367.toList$8, r$217.toL ...)' VC for instAppendIndexAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for instAppendIndexAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call update$5[T](l$368, i, y))' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call update$5[T](r$218, i - l$368.size$10, y))' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call instAppendUpdateAxiom$5[T](xs, i, y))' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call xs.toList$8.updated(i, y))' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for update$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for instAppendUpdateAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call appendUpdate[T](l$369.toList$8, r$219.to ...)' VC for instAppendUpdateAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for instAppendUpdateAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](r$220, ys))' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](rr$4, ys))' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](xs, l$371))' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](xs, ll$4))' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concatNonEmpty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for appendAssocInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for appendAssocInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for appendAssocInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for appendAssocInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for appendAssocInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concatNormalized$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](xs, ys))' VC for concatNormalized$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concatNormalized$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concatCorrectness$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](insert$5[T](l$375, i ...)' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insert$5[T](l$375, i, y))' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNonEmpty$5[T](l$375, insert$5[T](r ...)' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insert$5[T](r$224, i - l$375.size$10, y))' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAppendAxiomInst$5[T](xs, i, y))' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAtIndex$5[T](xs.toList$8, i, y))' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for insert$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for insertAtIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAtIndex$5[T](tail$30, i - BigInt(1 ...)' VC for insertAtIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for insertAtIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call appendInsertIndex$5[T](xs$198, l2, i - B ...)' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAtIndex$5[T]((l1 ++ l2), i, y))' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAtIndex$5[T](l1, i, y))' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call insertAtIndex$5[T](l2, i - l1.size, y))' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for appendInsertIndex$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for insertAppendAxiomInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call appendInsertIndex$5[T](l$383.toList$8, r ...)' VC for insertAppendAxiomInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for insertAppendAxiomInst$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call split$7[T](l$384, n))' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNormalized$5[T](lr$6, r$228))' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call split$7[T](r$228, n - l$384.size$10))' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call concatNormalized$5[T](l$384, rl$6))' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for split$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for splitCorrectness$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for instSplitAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for instSplitAxiom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for toList$8 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for toList$8 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isEmpty$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for level$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for level$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for balanced$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for balanced$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for size$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for size$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isLeaf$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isLeaf$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concInv$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concInv$6 @?:?...
[[34m  Info  [0m]  => VALID
  ┌──────────────────────┐
╔═╡ Verification Summary ╞══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ └──────────────────────┘                                                                                                                          ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.122 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.076 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.081 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.058 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.313 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.063 ║
║ Conqueue.Pay$5                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.140 ║
║ Conqueue.Pay$5                            postcondition                                                 ?:?  valid    U:orb-smt-z3          0.895 ║
║ Conqueue.Pay$5                            precond. (call schedMonotone$5[T](st@, a$207, rtail$4,  ...)  ?:?  valid    U:orb-smt-z3          0.454 ║
║ Conqueue.Pay$5                            precond. (call suffixZeroLemma$5[T](q, head$120, rhead$ ...)  ?:?  valid    U:orb-smt-z3          0.849 ║
║ Conqueue.PushLeftLazyL@pushLeftLazyPre$1  match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.088 ║
║ Conqueue.PushLeftLazyL@pushLeftLazyPre$1  match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.063 ║
║ Conqueue.PushLeftLazyL@pushLeftLazyPre$1  postcondition                                                 ?:?  valid    U:orb-smt-z3          0.306 ║
║ ConcTrees.abs$6                           postcondition                                                 ?:?  valid    U:orb-smt-z3          0.039 ║
║ ConcTrees.appendAssocInst$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.070 ║
║ ConcTrees.appendAssocInst$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.048 ║
║ ConcTrees.appendAssocInst$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.059 ║
║ ConcTrees.appendAssocInst$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.030 ║
║ ConcTrees.appendAssocInst$5               postcondition                                                 ?:?  valid    U:orb-smt-z3          2.647 ║
║ ConcTrees.appendInsertIndex$5             match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.037 ║
║ ConcTrees.appendInsertIndex$5             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.529 ║
║ ConcTrees.appendInsertIndex$5             precond. (call appendInsertIndex$5[T](xs$198, l2, i - B ...)  ?:?  valid    U:orb-smt-z3          0.069 ║
║ ConcTrees.appendInsertIndex$5             precond. (call insertAtIndex$5[T]((l1 ++ l2), i, y))          ?:?  valid    U:orb-smt-z3          0.388 ║
║ ConcTrees.appendInsertIndex$5             precond. (call insertAtIndex$5[T](l1, i, y))                  ?:?  valid    U:orb-smt-z3          0.050 ║
║ ConcTrees.appendInsertIndex$5             precond. (call insertAtIndex$5[T](l2, i - l1.size, y))        ?:?  valid    U:orb-smt-z3          0.046 ║
║ Conc.balanced$6                           match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.040 ║
║ Conc.balanced$6                           postcondition                                                 ?:?  valid    U:orb-smt-z3          0.060 ║
║ Conc.concInv$6                            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.048 ║
║ Conc.concInv$6                            postcondition                                                 ?:?  valid    U:orb-smt-z3          0.034 ║
║ Conqueue.concUntilCompose$5               tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.051 ║
║ Conqueue.concUntilCompose$5               tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.250 ║
║ Conqueue.concUntilConcreteExten$5         tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.072 ║
║ Conqueue.concUntilConcreteExten$5         tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.227 ║
║ Conqueue.concUntilExtenLemma$5            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.036 ║
║ Conqueue.concUntilExtenLemma$5            match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.070 ║
║ Conqueue.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.071 ║
║ Conqueue.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.058 ║
║ Conqueue.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.087 ║
║ Conqueue.concUntilExtenLemma$5            tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.278 ║
║ Conqueue.concUntilMonotone$5              tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.051 ║
║ Conqueue.concUntilMonotone$5              tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.197 ║
║ ConcTrees.concatCorrectness$5             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.049 ║
║ ConcTrees.concatNonEmpty$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.573 ║
║ ConcTrees.concatNonEmpty$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.553 ║
║ ConcTrees.concatNonEmpty$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.432 ║
║ ConcTrees.concatNonEmpty$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.402 ║
║ ConcTrees.concatNonEmpty$5                postcondition                                                 ?:?  valid    U:orb-smt-z3         14.055 ║
║ ConcTrees.concatNonEmpty$5                precond. (call concatNonEmpty$5[T](r$220, ys))                ?:?  valid    U:orb-smt-z3          0.589 ║
║ ConcTrees.concatNonEmpty$5                precond. (call concatNonEmpty$5[T](rr$4, ys))                 ?:?  valid    U:orb-smt-z3          0.679 ║
║ ConcTrees.concatNonEmpty$5                precond. (call concatNonEmpty$5[T](xs, l$371))                ?:?  valid    U:orb-smt-z3          0.600 ║
║ ConcTrees.concatNonEmpty$5                precond. (call concatNonEmpty$5[T](xs, ll$4))                 ?:?  valid    U:orb-smt-z3          0.725 ║
║ ConcTrees.concatNormalized$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.037 ║
║ ConcTrees.concatNormalized$5              postcondition                                                 ?:?  valid    U:orb-smt-z3          4.095 ║
║ ConcTrees.concatNormalized$5              precond. (call concatNonEmpty$5[T](xs, ys))                   ?:?  valid    U:orb-smt-z3          0.362 ║
║ Conqueue.concreteMonotone$5               tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.050 ║
║ Conqueue.concreteMonotone$5               tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.203 ║
║ Conqueue.concreteUntil$5                  match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.076 ║
║ Conqueue.concreteUntil$5                  postcondition                                                 ?:?  valid    U:orb-smt-orb-cvc4    0.100 ║
║ Conqueue.concreteUntilIsSuffix$5          tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.060 ║
║ Conqueue.concreteUntilIsSuffix$5          tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.198 ║
║ Conqueue.concreteZeroPredLemma$5          tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.054 ║
║ Conqueue.concreteZeroPredLemma$5          tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.204 ║
║ Conqueue.emptyNum$5                       postcondition                                                 ?:?  valid    U:orb-smt-z3          0.154 ║
║ Stream.fval-mem$3                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.033 ║
║ Stream.fval-mem$3                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.043 ║
║ Stream.fval-mem$3                         postcondition                                                 ?:?  valid    U:orb-smt-z3          0.221 ║
║ Stream.get$11                             match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.032 ║
║ Stream.get$11                             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.166 ║
║ Stream.get$11                             precond. (call thiss.fval-mem$3(st@))                         ?:?  valid    U:orb-smt-z3          0.031 ║
║ Stream.getV$6                             match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.029 ║
║ Stream.getV$6                             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.054 ║
║ Stream.getV$6                             precond. (call thiss.fval-mem$3(uiState$2[T]))                ?:?  valid    U:orb-smt-z3          0.033 ║
║ Conqueue.head$143                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.057 ║
║ Conqueue.head$143                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.036 ║
║ Conqueue.head$143                         postcondition                                                 ?:?  unknown  Pfolio                0.078 ║
║ ConcTrees.insert$5                        match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.051 ║
║ ConcTrees.insert$5                        postcondition                                                 ?:?  valid    U:orb-smt-z3         35.593 ║
║ ConcTrees.insert$5                        precond. (call concatNonEmpty$5[T](insert$5[T](l$375, i ...)  ?:?  valid    U:orb-smt-z3          7.491 ║
║ ConcTrees.insert$5                        precond. (call concatNonEmpty$5[T](l$375, insert$5[T](r ...)  ?:?  valid    U:orb-smt-z3          7.815 ║
║ ConcTrees.insert$5                        precond. (call insert$5[T](l$375, i, y))                      ?:?  valid    U:orb-smt-z3          0.566 ║
║ ConcTrees.insert$5                        precond. (call insert$5[T](r$224, i - l$375.size$10, y))      ?:?  valid    U:orb-smt-z3          0.624 ║
║ ConcTrees.insert$5                        precond. (call insertAppendAxiomInst$5[T](xs, i, y))          ?:?  valid    U:orb-smt-z3          0.082 ║
║ ConcTrees.insert$5                        precond. (call insertAtIndex$5[T](xs.toList$8, i, y))         ?:?  valid    U:orb-smt-z3         26.038 ║
║ ConcTrees.insertAppendAxiomInst$5         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.030 ║
║ ConcTrees.insertAppendAxiomInst$5         postcondition                                                 ?:?  valid    U:orb-smt-z3          0.946 ║
║ ConcTrees.insertAppendAxiomInst$5         precond. (call appendInsertIndex$5[T](l$383.toList$8, r ...)  ?:?  valid    U:orb-smt-z3          0.577 ║
║ ConcTrees.insertAtIndex$5                 match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.040 ║
║ ConcTrees.insertAtIndex$5                 postcondition                                                 ?:?  valid    U:orb-smt-z3          0.043 ║
║ ConcTrees.insertAtIndex$5                 precond. (call insertAtIndex$5[T](tail$30, i - BigInt(1 ...)  ?:?  valid    U:orb-smt-z3          0.061 ║
║ ConcTrees.instAppendIndexAxiom$5          match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.030 ║
║ ConcTrees.instAppendIndexAxiom$5          postcondition                                                 ?:?  valid    U:orb-smt-z3          0.759 ║
║ ConcTrees.instAppendIndexAxiom$5          precond. (call appendIndex[T](l$367.toList$8, r$217.toL ...)  ?:?  valid    U:orb-smt-z3          0.655 ║
║ ConcTrees.instAppendUpdateAxiom$5         match exhaustiveness                                          ?:?  valid    U:orb-smt-orb-cvc4    0.037 ║
║ ConcTrees.instAppendUpdateAxiom$5         postcondition                                                 ?:?  valid    U:orb-smt-z3          0.938 ║
║ ConcTrees.instAppendUpdateAxiom$5         precond. (call appendUpdate[T](l$369.toList$8, r$219.to ...)  ?:?  valid    U:orb-smt-z3          0.723 ║
║ ConcTrees.instSplitAxiom$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.053 ║
║ ConcTrees.instSplitAxiom$5                postcondition                                                 ?:?  valid    U:orb-smt-z3          1.171 ║
║ Stream.isCached$6                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.054 ║
║ Stream.isCached$6                         postcondition                                                 ?:?  valid    U:orb-smt-z3          0.040 ║
║ Conqueue.isConcrete$5                     match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.068 ║
║ Conqueue.isConcrete$5                     postcondition                                                 ?:?  valid    U:orb-smt-z3          0.077 ║
║ Conc.isEmpty$10                           postcondition                                                 ?:?  valid    U:orb-smt-z3          0.029 ║
║ Conc.isLeaf$6                             match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.048 ║
║ Conc.isLeaf$6                             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.044 ║
║ Conc.level$6                              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.043 ║
║ Conc.level$6                              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.179 ║
║ ConcTrees.lookup$5                        match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.243 ║
║ ConcTrees.lookup$5                        postcondition                                                 ?:?  valid    U:orb-smt-z3          1.526 ║
║ ConcTrees.lookup$5                        precond. (call instAppendIndexAxiom$5[T](xs, i))              ?:?  valid    U:orb-smt-z3          0.036 ║
║ ConcTrees.lookup$5                        precond. (call lookup$5[T](l$366, i))                         ?:?  valid    U:orb-smt-z3          0.558 ║
║ ConcTrees.lookup$5                        precond. (call lookup$5[T](r$216, i - l$366.size$10))         ?:?  valid    U:orb-smt-z3          0.563 ║
║ ConcTrees.lookup$5                        precond. (call xs.toList$8.apply(i))                          ?:?  valid    U:orb-smt-z3          0.661 ║
║ Conqueue.properSuffix$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.072 ║
║ Conqueue.properSuffix$5                   postcondition                                                 ?:?  valid    U:orb-smt-z3          0.237 ║
║ Conqueue.properSuffix$5                   precond. (call suffixDisequality$5[T](l, suf))                ?:?  valid    U:orb-smt-z3          0.220 ║
║ Conqueue.pushLeft$5                       match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.081 ║
║ Conqueue.pushLeft$5                       match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.091 ║
║ Conqueue.pushLeft$5                       match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.093 ║
║ Conqueue.pushLeft$5                       match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.066 ║
║ Conqueue.pushLeft$5                       postcondition                                                 ?:?  valid    U:orb-smt-orb-cvc4    1.825 ║
║ Conqueue.pushLeft$5                       precond. (call pushLeftLazyLemma$5[T](ys, w.trees, head ...)  ?:?  valid    U:orb-smt-z3          0.504 ║
║ Conqueue.pushLeft$5                       precond. (call pushLeftStream$5[T](ys, w.trees, st@))         ?:?  valid    U:orb-smt-z3          0.209 ║
║ Conqueue.pushLeftAndPay$5                 match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.034 ║
║ Conqueue.pushLeftAndPay$5                 postcondition                                                 ?:?  valid    U:orb-smt-orb-cvc4    1.577 ║
║ Conqueue.pushLeftAndPay$5                 precond. (call Pay$5[T](q$320, x$3$11._1._2, x$3$11._2))      ?:?  valid    U:orb-smt-z3          0.775 ║
║ Conqueue.pushLeftAndPay$5                 precond. (call pushLeft$5[T](ys, w, st@))                     ?:?  valid    U:orb-smt-z3          0.201 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.189 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.088 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.090 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.065 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.085 ║
║ Conqueue.pushLeftLazy$5                   match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.064 ║
║ Conqueue.pushLeftLazy$5                   postcondition                                                 ?:?  valid    U:orb-smt-orb-cvc4    1.055 ║
║ Conqueue.pushLeftLazyLemma$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.075 ║
║ Conqueue.pushLeftLazyLemma$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.089 ║
║ Conqueue.pushLeftLazyLemma$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.078 ║
║ Conqueue.pushLeftLazyLemma$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.074 ║
║ Conqueue.pushLeftLazyLemma$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.851 ║
║ Conqueue.pushLeftLazyLemma$5              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.966 ║
║ Conqueue.pushLeftLazyLemma$5              precond. (call pushLeftLazy$5[T](ys, xs, a$208._2))           ?:?  valid    U:orb-smt-z3          0.611 ║
║ Conqueue.pushLeftLazyLemma$5              precond. (call pushLeftLazyLemma$5[T](CC[T](head$124, y ...)  ?:?  valid    U:orb-smt-z3          0.284 ║
║ Conqueue.pushLeftStream$5                 match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.072 ║
║ Conqueue.pushLeftStream$5                 postcondition                                                 ?:?  valid    U:orb-smt-z3          0.562 ║
║ Conqueue.pushLeftStream$5                 precond. (call pushLeftLazy$5[T](ys, xs, scr$8._2))           ?:?  valid    U:orb-smt-z3          0.226 ║
║ Conqueue.pushUntilCarry$5                 match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.062 ║
║ Conqueue.pushUntilCarry$5                 postcondition                                                 ?:?  valid    U:orb-smt-z3          0.072 ║
║ Conqueue.schedMonotone$5                  match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.059 ║
║ Conqueue.schedMonotone$5                  match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.067 ║
║ Conqueue.schedMonotone$5                  postcondition                                                 ?:?  valid    U:orb-smt-z3          0.365 ║
║ Conqueue.schedMonotone$5                  precond. (call schedMonotone$5[T](st1, st2, tail$28, pu ...)  ?:?  valid    U:orb-smt-z3          0.364 ║
║ Conqueue.schedulesProperty$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.045 ║
║ Conqueue.schedulesProperty$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.037 ║
║ Conqueue.schedulesProperty$5              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.082 ║
║ Conc.size$10                              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.030 ║
║ Conc.size$10                              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.168 ║
║ ConcTrees.split$7                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.037 ║
║ ConcTrees.split$7                         match exhaustiveness                                          ?:?  valid    U:orb-smt-orb-cvc4    0.047 ║
║ ConcTrees.split$7                         postcondition                                                 ?:?  valid    U:orb-smt-z3         16.847 ║
║ ConcTrees.split$7                         precond. (call concatNormalized$5[T](l$384, rl$6))            ?:?  valid    U:orb-smt-z3          4.436 ║
║ ConcTrees.split$7                         precond. (call concatNormalized$5[T](lr$6, r$228))            ?:?  valid    U:orb-smt-z3          4.400 ║
║ ConcTrees.split$7                         precond. (call split$7[T](l$384, n))                          ?:?  valid    U:orb-smt-z3          0.496 ║
║ ConcTrees.split$7                         precond. (call split$7[T](r$228, n - l$384.size$10))          ?:?  valid    U:orb-smt-z3          0.466 ║
║ ConcTrees.splitCorrectness$5              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.041 ║
║ Conqueue.strongSchedsProp$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.040 ║
║ Conqueue.strongSchedsProp$5               postcondition                                                 ?:?  valid    U:orb-smt-z3          0.082 ║
║ Conqueue.suffix$5                         match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.069 ║
║ Conqueue.suffix$5                         postcondition                                                 ?:?  valid    U:orb-smt-z3          0.062 ║
║ Conqueue.suffixCompose$5                  tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.069 ║
║ Conqueue.suffixCompose$5                  tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.328 ║
║ Conqueue.suffixDisequality$5              match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.065 ║
║ Conqueue.suffixDisequality$5              postcondition                                                 ?:?  valid    U:orb-smt-z3          0.291 ║
║ Conqueue.suffixDisequality$5              precond. (call suffixDisequality$5[T](rear$143, sufRear ...)  ?:?  valid    U:orb-smt-z3          0.272 ║
║ Conqueue.suffixTrans$5                    match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.056 ║
║ Conqueue.suffixTrans$5                    tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.057 ║
║ Conqueue.suffixTrans$5                    tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.076 ║
║ Conqueue.suffixTrans$5                    tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.261 ║
║ Conqueue.suffixZeroLemma$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.066 ║
║ Conqueue.suffixZeroLemma$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.080 ║
║ Conqueue.suffixZeroLemma$5                postcondition                                                 ?:?  valid    U:orb-smt-z3          0.390 ║
║ Conqueue.suffixZeroLemma$5                precond. (call suffixZeroLemma$5[T](tail$29, suf, suf2))      ?:?  valid    U:orb-smt-z3          0.304 ║
║ Conc.toList$8                             match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.028 ║
║ Conc.toList$8                             postcondition                                                 ?:?  valid    U:orb-smt-z3          0.765 ║
║ ConcTrees.update$5                        match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.250 ║
║ ConcTrees.update$5                        postcondition                                                 ?:?  valid    U:orb-smt-z3          5.340 ║
║ ConcTrees.update$5                        precond. (call instAppendUpdateAxiom$5[T](xs, i, y))          ?:?  valid    U:orb-smt-z3          0.049 ║
║ ConcTrees.update$5                        precond. (call update$5[T](l$368, i, y))                      ?:?  valid    U:orb-smt-z3          0.563 ║
║ ConcTrees.update$5                        precond. (call update$5[T](r$218, i - l$368.size$10, y))      ?:?  valid    U:orb-smt-z3          0.603 ║
║ ConcTrees.update$5                        precond. (call xs.toList$8.updated(i, y))                     ?:?  valid    U:orb-smt-z3          3.017 ║
║ Conqueue.valid$9                          postcondition                                                 ?:?  valid    U:orb-smt-z3          0.061 ║
║ Conqueue.zeroPrecedesLazy$5               match exhaustiveness                                          ?:?  valid    U:orb-smt-z3          0.096 ║
║ Conqueue.zeroPrecedesLazy$5               postcondition                                                 ?:?  valid    U:orb-smt-z3          0.136 ║
║ Conqueue.zeroPrecedesSuf$5                match exhaustiveness                                          ?:?  valid    U:orb-smt-orb-cvc4    0.081 ║
║ Conqueue.zeroPrecedesSuf$5                postcondition                                                 ?:?  valid    U:orb-smt-z3          0.093 ║
║ Conqueue.zeroPredSufConcreteUntilLemma$5  tact (match exhaustiveness)                                   ?:?  valid    U:orb-smt-z3          0.071 ║
║ Conqueue.zeroPredSufConcreteUntilLemma$5  tact (postcondition)                                          ?:?  valid    U:orb-smt-z3          0.207 ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 195    valid: 194    invalid: 0      unknown 1                                                                                     176.263 ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] - considering function pushLeftLazy-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.017s
[[34m  Info  [0m] Function: pushLeftLazy-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.095s
[[34m  Info  [0m] Function: pushLeftLazy-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.084s
[[34m  Info  [0m] Function: pushLeftLazy-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.112s
[[34m  Info  [0m] Function: pushLeftLazy-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + -27 <= 0
[[34m  Info  [0m] checked VC inst... in 0.103s
[[34m  Info  [0m] Function: pushLeftLazy-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + -31 <= 0
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftLazy-steps-->1 * res$289._2 + -30 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] - Found inductive invariant: pushLeftLazy-steps --> steps + BigInt(-30) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function get-steps...
[[34m  Info  [0m] - considering function fval-mem-steps...
[[34m  Info  [0m] - considering function update-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(0 * xs.level + 1 * res$287._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: update-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(-1 * xs.level + 1 * res$287._2) + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: update-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 11
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(0 * xs.level + 1 * res$287._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.018s
[[34m  Info  [0m] Function: update-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(0 * xs.level + 1 * res$287._2) + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] Function: update-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 25 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(-29 * xs.level + 2 * res$287._2) + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] update-steps-->(-12 * xs.level + 1 * res$287._2) + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] - Found inductive invariant: update-steps --> (BigInt(-12) * xs.level + steps) + BigInt(-4) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function concatNonEmpty-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 14
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.054s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-1 * abs(xs.level - ys.level) + 8 * res$285._2) + -119 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 17 + 17
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.062s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-1 * abs(xs.level - ys.level) + 8 * res$285._2) + -79 <= 0
[[34m  Info  [0m] checked VC inst... in 0.065s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 22 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.083s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-1 * abs(xs.level - ys.level) + 8 * res$285._2) + -79 <= 0
[[34m  Info  [0m] checked VC inst... in 0.07s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.09s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-1 * abs(xs.level - ys.level) + 8 * res$285._2) + -79 <= 0
[[34m  Info  [0m] checked VC inst... in 0.113s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 22 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.144s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-1 * abs(xs.level - ys.level) + 8 * res$285._2) + -79 <= 0
[[34m  Info  [0m] checked VC inst... in 0.141s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 25 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.162s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.098s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-21 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.198s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 29
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.163s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.089s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-21 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.478s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 37 + 29
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-30 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.399s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 46 + 66
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.207s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.141s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-21 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.624s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 27 + 29
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-30 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.714s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 47 + 56
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.413s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(0 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.229s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-12 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.278s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 32 + 22
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-767 * abs(xs.level - ys.level) + 32 * res$285._2) + -320 <= 0
[[34m  Info  [0m] checked VC inst... in 1.435s
[[34m  Info  [0m] Function: concatNonEmpty-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 21 + 54
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-30 * abs(xs.level - ys.level) + 1 * res$285._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.415s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNonEmpty-steps-->(-29 * abs(xs.level - ys.level) + 1 * res$285._2) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.509s
[[34m  Info  [0m] - Found inductive invariant: concatNonEmpty-steps --> (BigInt(-29) * abs(xs.level - ys.level) + steps) + BigInt(-8) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function concatNormalized-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 23
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.033s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 17
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(0 * abs(xs.level - ys.level) + 1 * res$283._2) + -18 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: concatNormalized-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 26 + 26
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(-40 * abs(xs.level - ys.level) + 1 * res$283._2) + -18 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] concatNormalized-steps-->(-29 * abs(xs.level - ys.level) + 1 * res$283._2) + -17 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] - Found inductive invariant: concatNormalized-steps --> (BigInt(-29) * abs(xs.level - ys.level) + steps) + BigInt(-17) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function pushLeftStream-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.029s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -21 <= 0
[[34m  Info  [0m] checked VC inst... in 0.047s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.063s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.279s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -21 <= 0
[[34m  Info  [0m] checked VC inst... in 0.046s
[[34m  Info  [0m] Function: pushLeftStream-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -51 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftStream-steps-->1 * x$2$23._2 + -50 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] - Found inductive invariant: pushLeftStream-steps --> steps + BigInt(-50) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function split-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.019s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-1 * xs.level + 2 * res$291._2) + -4 * res$291._1._2.level) + -4 * res$291._1._1.level) + -14 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((1 * xs.level + 2 * res$291._2) + -4 * res$291._1._2.level) + -4 * res$291._1._1.level) + -18 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 17 + 25
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-1 * xs.level + 1 * res$291._2) + -1 * res$291._1._2.level) + -1 * res$291._1._1.level) + -14 <= 0
[[34m  Info  [0m] checked VC inst... in 0.018s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 42
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.068s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.04s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 25
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-6 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.056s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 28 + 40
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.11s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.052s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((0 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.07s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 17 + 25
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-7 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.063s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 26 + 42
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-41 * xs.level + 1 * res$291._2) + 0 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.139s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 52 + 68
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-58 * xs.level + 1 * res$291._2) + -353 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.247s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 54 + 120
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-149 * xs.level + 1 * res$291._2) + -117 * res$291._1._2.level) + 0 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.431s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 56 + 174
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-63 * xs.level + 1 * res$291._2) + -30 * res$291._1._2.level) + -34 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.301s
[[34m  Info  [0m] Function: split-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 48 + 230
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-68 * xs.level + 1 * res$291._2) + -30 * res$291._1._2.level) + -32 * res$291._1._1.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.19s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] split-steps-->(((-67 * xs.level + 1 * res$291._2) + -29 * res$291._1._2.level) + -29 * res$291._1._1.level) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.16s
[[34m  Info  [0m] - Found inductive invariant: split-steps --> (((BigInt(-67) * xs.level + steps) + BigInt(-29) * res._2.level) + BigInt(-29) * res._1.level) + BigInt(-8) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function Pay-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -17 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -17 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.04s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.028s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -17 <= 0
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -52 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -51 <= 0
[[34m  Info  [0m] checked VC inst... in 0.044s
[[34m  Info  [0m] Function: Pay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 21
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-steps-->1 * res$295._2 + -52 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] - Found inductive invariant: Pay-steps --> steps + BigInt(-52) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function lookup-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(0 * xs.level + 1 * res$293._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: lookup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(-1 * xs.level + 1 * res$293._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: lookup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 11
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(0 * xs.level + 1 * res$293._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: lookup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(0 * xs.level + 1 * res$293._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] Function: lookup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 26 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(-14 * xs.level + 1 * res$293._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lookup-steps-->(-11 * xs.level + 1 * res$293._2) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] - Found inductive invariant: lookup-steps --> (BigInt(-11) * xs.level + steps) + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function emptyNum-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] emptyNum-steps-->1 * x$1$34._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] Function: emptyNum-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] emptyNum-steps-->1 * x$1$34._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] emptyNum-steps-->1 * x$1$34._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: emptyNum-steps --> steps + BigInt(-5) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function pushLeft-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeft-steps-->1 * res$290._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: pushLeft-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeft-steps-->1 * res$290._2 + -64 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeft-steps-->1 * res$290._2 + -62 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: pushLeft-steps --> steps + BigInt(-62) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function pushLeftAndPay-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftAndPay-steps-->1 * res$297._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: pushLeftAndPay-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftAndPay-steps-->1 * res$297._2 + -126 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pushLeftAndPay-steps-->1 * res$297._2 + -124 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: pushLeftAndPay-steps --> steps + BigInt(-124) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function insert-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -1 * xs.level) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 11
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -1 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 19
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.056s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.026s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 32 + 20
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.121s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.062s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + 0 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.078s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 20
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -30 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.109s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 43 + 62
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -51 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.185s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 58 + 105
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -78 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.289s
[[34m  Info  [0m] Function: insert-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 51 + 163
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -80 * xs.level) + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.135s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] insert-steps-->(1 * res$294._2 + -79 * xs.level) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.139s
[[34m  Info  [0m] - Found inductive invariant: insert-steps --> (steps + BigInt(-79) * xs.level) + BigInt(-8) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[31m Error  [0m] - Unable to prove or disprove invariant, the invariant is probably true
Resource Verification Results: 
. ┌─────────┐
╔═╡ Summary ╞═══════════════════════════════════════════════════════════════════════════════════╗
║ └─────────┘                                                                                   ║
║ Pay             steps <= 52                                                            1.186  ║
║ concatNonEmpty  steps <= 29 * abs(xs.level - ys.level) + 8                             29.281 ║
║ concatNormaliz… steps <= 29 * abs(xs.level - ys.level) + 17                            4.246  ║
║ emptyNum        steps <= 5                                                             0.163  ║
║ insert          steps <= 79 * xs.level + 8                                             24.535 ║
║ lookup          steps <= 11 * xs.level + 3                                             2.139  ║
║ pushLeft        steps <= 62                                                            0.572  ║
║ pushLeftAndPay  steps <= 124                                                           1.291  ║
║ pushLeftLazy    steps <= 30                                                            2.509  ║
║ pushLeftStream  steps <= 50                                                            1.591  ║
║ split           steps <= ((67 * xs.level + 29 * res.level) + 29 * res._2.level) + 8    20.659 ║
║ update          steps <= 12 * xs.level + 4                                             3.841  ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 12    inferred: 12    unknown: 0     time: 92.013                                      ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Stats dumped to file: Conqueue-stats.txt
