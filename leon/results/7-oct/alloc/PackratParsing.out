[[33mWarning [0m] warning: there were two feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pMul-mem$3(i, st@))' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pMul-mem$3(i, st@))' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pAdd-mem$3(a$181, mulRes$1._2))' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pAdd-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pPrim-mem$3(i, st@))' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pPrim-mem$3(i, st@))' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pMul-mem$3(a$188, primRes$1._2))' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pMul-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pPrim-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pAdd-mem$3(a$185, st@))' VC for pPrim-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pPrim-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pPrim-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for depsEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(i - BigInt(1), st@))' VC for depsEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for allEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(i - BigInt(1), st@))' VC for allEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call evalMono-VCTact(i - BigInt(1), st1, st2)))' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call allEval$5(i, st1)))' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call allEval$5(i, st2)))' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(i, st1))' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(i, st2))' VC for evalMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(x, y - BigInt(1), st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call allEval$5(y, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call allEval$5(x, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(y, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(x, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for resEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsLem$5(j, i - BigInt(1), st@))' VC for resEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for resEval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invokePrim$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pPrim-mem$3(i, st@))' VC for invokePrim$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call evalMono$5(i - BigInt(1), st@, res._2))' VC for invokePrim$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invokeMul$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invokePrim$5(i, st@))' VC for invokeMul$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pMul-mem$3(i, scr._2))' VC for invokeMul$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call evalMono$5(i - BigInt(1), st@, res._2))' VC for invokeMul$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for invokeMul$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invokeMul$5(i, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call pAdd-mem$3(i, scr._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call evalMono$5(i - BigInt(1), st@, res._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(i, res._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(n, st@))' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call parse$5(n - BigInt(1), st@))' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(n, scr._2))' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call allEval$5(n, x$2._2))' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for parse$5 @?:?...
[[34m  Info  [0m]  => VALID
  ????????????????????????
??? Verification Summary ????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? ????????????????????????                                                                                                              ?
? PackratParsing.allEval$5     postcondition                                                    ?:?  valid  U:orb-smt-z3          0.047 ?
? PackratParsing.allEval$5     precond. (call allEval$5(i - BigInt(1), st@))                    ?:?  valid  U:orb-smt-z3          0.038 ?
? PackratParsing.depsEval$5    postcondition                                                    ?:?  valid  U:orb-smt-z3          0.034 ?
? PackratParsing.depsEval$5    precond. (call allEval$5(i - BigInt(1), st@))                    ?:?  valid  U:orb-smt-z3          0.029 ?
? PackratParsing.depsLem$5     precond. (call allEval$5(x, st@))                                ?:?  valid  U:orb-smt-z3          0.047 ?
? PackratParsing.depsLem$5     precond. (call allEval$5(y, st@))                                ?:?  valid  U:orb-smt-z3          0.032 ?
? PackratParsing.depsLem$5     tact (postcondition)                                             ?:?  valid  U:orb-smt-z3          0.091 ?
? PackratParsing.depsLem$5     tact (precond. (call allEval$5(x, st@)))                         ?:?  valid  U:orb-smt-z3          0.040 ?
? PackratParsing.depsLem$5     tact (precond. (call allEval$5(y, st@)))                         ?:?  valid  U:orb-smt-z3          0.048 ?
? PackratParsing.depsLem$5     tact (precond. (call depsLem-VCTact(x, y - BigInt(1), st@)))     ?:?  valid  U:orb-smt-z3          0.038 ?
? PackratParsing.evalMono$5    precond. (call allEval$5(i, st1))                                ?:?  valid  U:orb-smt-z3          0.045 ?
? PackratParsing.evalMono$5    precond. (call allEval$5(i, st2))                                ?:?  valid  U:orb-smt-z3          0.050 ?
? PackratParsing.evalMono$5    tact (postcondition)                                             ?:?  valid  U:orb-smt-z3          0.088 ?
? PackratParsing.evalMono$5    tact (precond. (call allEval$5(i, st1)))                         ?:?  valid  U:orb-smt-z3          0.037 ?
? PackratParsing.evalMono$5    tact (precond. (call allEval$5(i, st2)))                         ?:?  valid  U:orb-smt-z3          0.039 ?
? PackratParsing.evalMono$5    tact (precond. (call evalMono-VCTact(i - BigInt(1), st1, st2)))  ?:?  valid  U:orb-smt-z3          0.030 ?
? PackratParsing.invoke$5      match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.034 ?
? PackratParsing.invoke$5      postcondition                                                    ?:?  valid  U:orb-smt-z3          0.342 ?
? PackratParsing.invoke$5      precond. (call allEval$5(i, res._2))                             ?:?  valid  U:orb-smt-z3          0.302 ?
? PackratParsing.invoke$5      precond. (call evalMono$5(i - BigInt(1), st@, res._2))           ?:?  valid  U:orb-smt-z3          0.067 ?
? PackratParsing.invoke$5      precond. (call invokeMul$5(i, st@))                              ?:?  valid  U:orb-smt-z3          0.038 ?
? PackratParsing.invoke$5      precond. (call pAdd-mem$3(i, scr._2))                            ?:?  valid  U:orb-smt-z3          0.340 ?
? PackratParsing.invokeMul$5   match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.046 ?
? PackratParsing.invokeMul$5   postcondition                                                    ?:?  valid  U:orb-smt-z3          0.284 ?
? PackratParsing.invokeMul$5   precond. (call evalMono$5(i - BigInt(1), st@, res._2))           ?:?  valid  U:orb-smt-z3          0.080 ?
? PackratParsing.invokeMul$5   precond. (call invokePrim$5(i, st@))                             ?:?  valid  U:orb-smt-z3          0.047 ?
? PackratParsing.invokeMul$5   precond. (call pMul-mem$3(i, scr._2))                            ?:?  valid  U:orb-smt-z3          0.236 ?
? PackratParsing.invokePrim$5  postcondition                                                    ?:?  valid  U:orb-smt-z3          0.195 ?
? PackratParsing.invokePrim$5  precond. (call evalMono$5(i - BigInt(1), st@, res._2))           ?:?  valid  U:orb-smt-z3          0.082 ?
? PackratParsing.invokePrim$5  precond. (call pPrim-mem$3(i, st@))                              ?:?  valid  U:orb-smt-z3          0.037 ?
? PackratParsing.pAdd-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.084 ?
? PackratParsing.pAdd-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.073 ?
? PackratParsing.pAdd-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.076 ?
? PackratParsing.pAdd-mem$3    postcondition                                                    ?:?  valid  U:orb-smt-orb-cvc4    5.803 ?
? PackratParsing.pAdd-mem$3    precond. (call pAdd-mem$3(a$181, mulRes$1._2))                   ?:?  valid  U:orb-smt-orb-cvc4    1.845 ?
? PackratParsing.pAdd-mem$3    precond. (call pMul-mem$3(i, st@))                               ?:?  valid  U:orb-smt-z3          0.250 ?
? PackratParsing.pAdd-mem$3    precond. (call pMul-mem$3(i, st@))                               ?:?  valid  U:orb-smt-z3          0.371 ?
? PackratParsing.pMul-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.062 ?
? PackratParsing.pMul-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.077 ?
? PackratParsing.pMul-mem$3    match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.067 ?
? PackratParsing.pMul-mem$3    postcondition                                                    ?:?  valid  U:orb-smt-orb-cvc4    0.788 ?
? PackratParsing.pMul-mem$3    precond. (call pMul-mem$3(a$188, primRes$1._2))                  ?:?  valid  U:orb-smt-orb-cvc4    0.488 ?
? PackratParsing.pMul-mem$3    precond. (call pPrim-mem$3(i, st@))                              ?:?  valid  U:orb-smt-z3          0.145 ?
? PackratParsing.pMul-mem$3    precond. (call pPrim-mem$3(i, st@))                              ?:?  valid  U:orb-smt-z3          0.045 ?
? PackratParsing.pPrim-mem$3   match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.056 ?
? PackratParsing.pPrim-mem$3   match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.089 ?
? PackratParsing.pPrim-mem$3   postcondition                                                    ?:?  valid  U:orb-smt-z3          0.247 ?
? PackratParsing.pPrim-mem$3   precond. (call pAdd-mem$3(a$185, st@))                           ?:?  valid  U:orb-smt-z3          0.243 ?
? PackratParsing.parse$5       match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.052 ?
? PackratParsing.parse$5       postcondition                                                    ?:?  valid  U:orb-smt-z3          0.478 ?
? PackratParsing.parse$5       precond. (call allEval$5(n, x$2._2))                             ?:?  valid  U:orb-smt-orb-cvc4    0.088 ?
? PackratParsing.parse$5       precond. (call invoke$5(n, scr._2))                              ?:?  valid  U:orb-smt-z3          0.271 ?
? PackratParsing.parse$5       precond. (call invoke$5(n, st@))                                 ?:?  valid  U:orb-smt-z3          0.058 ?
? PackratParsing.parse$5       precond. (call parse$5(n - BigInt(1), st@))                      ?:?  valid  U:orb-smt-z3          0.032 ?
? PackratParsing.resEval$5     match exhaustiveness                                             ?:?  valid  U:orb-smt-z3          0.029 ?
? PackratParsing.resEval$5     postcondition                                                    ?:?  valid  U:orb-smt-z3          0.058 ?
? PackratParsing.resEval$5     precond. (call depsLem$5(j, i - BigInt(1), st@))                 ?:?  valid  U:orb-smt-z3          0.032 ?
?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? total: 57     valid: 57     invalid: 0      unknown 0                                                                          14.770 ?
?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] - considering function pAdd-mem-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.028s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.223s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 10
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Creating VC for pMul-mem-alloc
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.054s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.017s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.291s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 27 + 24
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Creating VC for pPrim-mem-alloc
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.139s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 40 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.136s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.025s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] # of atomic predicates: 40 + 41
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.267s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.05s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.194s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.05s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] # of atomic predicates: 46 + 43
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.358s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.064s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.224s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.115s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] # of atomic predicates: 48 + 43
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.394s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.061s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.282s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.118s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] # of atomic predicates: 50 + 43
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.417s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.086s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.035s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.292s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.24s
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] # of atomic predicates: 33 + 43
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + 0 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 1.063s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.082s
[[34m  Info  [0m] Function: pMul-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] Function: pPrim-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 42 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 1.718s
[[34m  Info  [0m] checked VC inst... in 0.24s
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -1 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -3 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.561s
[[34m  Info  [0m] Function: pAdd-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] checked VC inst... in 0.245s
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] # of atomic predicates: 36 + 43
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] pAdd-mem-alloc-->1 * res$219._2 + -2 <= 0
[[34m  Info  [0m] pMul-mem-alloc-->1 * res$223._2 + -2 <= 0
[[34m  Info  [0m] pPrim-mem-alloc-->1 * res$221._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 1.725s
[[34m  Info  [0m] checked VC inst... in 0.261s
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] - Found inductive invariant: pAdd-mem-alloc --> alloc + BigInt(-2) <= BigInt(0)
[[34m  Info  [0m] - Found inductive invariant: pMul-mem-alloc --> alloc + BigInt(-2) <= BigInt(0)
[[34m  Info  [0m] - Found inductive invariant: pPrim-mem-alloc --> alloc + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function pMul-mem-alloc...
[[34m  Info  [0m] - considering function pPrim-mem-alloc...
[[34m  Info  [0m] - considering function invokePrim-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokePrim-alloc-->1 * res$220._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: invokePrim-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokePrim-alloc-->1 * res$220._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokePrim-alloc-->1 * res$220._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: invokePrim-alloc --> alloc + BigInt(-4) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function invokeMul-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokeMul-alloc-->1 * res$222._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: invokeMul-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokeMul-alloc-->1 * res$222._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: invokeMul-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 8
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokeMul-alloc-->1 * res$222._2 + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invokeMul-alloc-->1 * res$222._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: invokeMul-alloc --> alloc + BigInt(-7) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function invoke-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$224._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: invoke-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$224._2 + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: invoke-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 8
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$224._2 + -11 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$224._2 + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: invoke-alloc --> alloc + BigInt(-10) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function parse-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + 0 * n) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + 0 * n) + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 11
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + 0 * n) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.066s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(2 * x$2$20._2 + 0 * n) + -21 <= 0
[[34m  Info  [0m] checked VC inst... in 0.133s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(2 * x$2$20._2 + -22 * n) + -21 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + -7 * n) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.122s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 28
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + -11 * n) + -11 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + -7 * n) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.378s
[[34m  Info  [0m] Function: parse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 41
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + -12 * n) + -11 <= 0
[[34m  Info  [0m] checked VC inst... in 0.026s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] parse-alloc-->(1 * x$2$20._2 + -10 * n) + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] - Found inductive invariant: parse-alloc --> (alloc + BigInt(-10) * n) + BigInt(-10) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ???????????
??? Summary ????????????????????????????????????????????????
? ???????????                                              ?
? invoke          alloc <= 10             0.605            ?
? invokeMul       alloc <= 7              0.515            ?
? invokePrim      alloc <= 4              0.370            ?
? pAdd            alloc <= 2              28.519           ?
? pMul            alloc <= 2              0.000            ?
? pPrim           alloc <= 3              0.000            ?
? parse           alloc <= 10 * n + 10    3.165            ?
????????????????????????????????????????????????????????????
? total: 7     inferred: 7     unknown: 0     time: 33.174 ?
????????????????????????????????????????????????????????????
[[34m  Info  [0m] Stats dumped to file: PackratParsing-stats.txt
