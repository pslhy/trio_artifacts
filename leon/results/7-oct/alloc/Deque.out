[[33mWarning [0m] warning: there were three feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for takeLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for takeLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for takeLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for revAppend$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call revAppend$5[T](a$220._1, SCons[T](x, Val ...)' VC for revAppend$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for revAppend$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for revAppend$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for drop$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](n - BigInt(1), a$221._1, a$221 ...)' VC for drop$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for drop$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for drop$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for take$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call take$9[T](n - BigInt(1), a$222._1, a$222 ...)' VC for take$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for take$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for take$9 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call revAppend$5[T](f, a, st@))' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](BigInt(2), f, nr$17._2))' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call take$9[T](BigInt(2), f, nf$17._2))' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call revAppend$5[T](a$225._1, a, a$225._2))' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for rotateRev$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](i, f, st@))' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call rotateRev$5[T](r, a$227._1, SNil[T](), a ...)' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](BigInt(2), f, nr$19._2))' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for rotateDrop$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for TakeLazyL@takeLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for TakeLazyL@takeLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for RotateRevL@rotateRevPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](BigInt(2), f, nr$17._2))' VC for RotateRevL@rotateRevPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call take$9[T](BigInt(2), f, nf$17._2))' VC for RotateRevL@rotateRevPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call revAppend$5[T](a$225._1, a, a$225._2))' VC for RotateRevL@rotateRevPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for RotateRevL@rotateRevPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for RotateDropL@rotateDropPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call drop$9[T](BigInt(2), f, nr$19._2))' VC for RotateDropL@rotateDropPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for RotateDropL@rotateDropPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstUneval$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call rotateDrop$5[T](r, i, f, st@))' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call takeLazy$5[T](i, f, nr$20._2))' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call rotateDrop$5[T](f, j, r, st@))' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call takeLazy$5[T](j, r, nf$21._2))' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'division by zero' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'division by zero' VC for createQueue$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for funeEqual$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call funeMonotone$5[T](tar, htar, st@, out$1))' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call funeMonotone$5[T](other, hother, st@, ou ...)' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](q.sf, q.f, q.r, q.sr, st@))' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](a$230._1, q.f, q.r, q.sr, a$2 ...)' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](q.sr, q.r, q.f, nsf$6._1, nsf ...)' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](a$231._1, q.r, q.f, nsf$6._1, ...)' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for forceTwice$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for empty$8 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for head$15 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for head$15 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for cons$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](q.sf, q.f, q.r, q.sr, st@))' VC for cons$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call force$5[T](q.sr, q.r, q.f, nsf$7._1, nsf ...)' VC for cons$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call createQueue$5[T](SCons[T](x, Val[T](q.f) ...)' VC for cons$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for tail$20 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call tailSub$5[T](q, st@))' VC for tail$20 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call forceTwice$5[T](q, st@))' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call createQueue$5[T](a$232._1, q.lenf - BigI ...)' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for tailSub$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for reverse$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for snoc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call cons$5[T](x, reverse$7[T](q, st@), st@))' VC for snoc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call reverse$7[T](q, st@))' VC for snoc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call reverse$7[T](a$233._1, a$233._2))' VC for snoc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call funeCompose-VCTact[T](c match { ...))' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for funeCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for funeMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call funeCompose$5[T](l1, st1, st2))' VC for funeMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call funeCompose$5[T](l2, st1, st2))' VC for funeMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for size$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for size$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for size$10 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for get-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for get-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isEmpty$13 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for valid$6 @?:?...
[[34m  Info  [0m]  => VALID
  ????????????????????????
??? Verification Summary ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? ????????????????????????                                                                                                                         ?
? RealTimeDeque.RotateDropL@rotateDropPre$1  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.095 ?
? RealTimeDeque.RotateDropL@rotateDropPre$1  postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    2.870 ?
? RealTimeDeque.RotateDropL@rotateDropPre$1  precond. (call drop$9[T](BigInt(2), f, nr$19._2))             ?:?  valid  U:orb-smt-orb-cvc4    1.200 ?
? RealTimeDeque.RotateRevL@rotateRevPre$1    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.093 ?
? RealTimeDeque.RotateRevL@rotateRevPre$1    postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    4.274 ?
? RealTimeDeque.RotateRevL@rotateRevPre$1    precond. (call drop$9[T](BigInt(2), f, nr$17._2))             ?:?  valid  U:orb-smt-orb-cvc4    0.820 ?
? RealTimeDeque.RotateRevL@rotateRevPre$1    precond. (call revAppend$5[T](a$225._1, a, a$225._2))         ?:?  valid  U:orb-smt-orb-cvc4    1.821 ?
? RealTimeDeque.RotateRevL@rotateRevPre$1    precond. (call take$9[T](BigInt(2), f, nf$17._2))             ?:?  valid  U:orb-smt-z3          0.556 ?
? RealTimeDeque.TakeLazyL@takeLazyPre$1      match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.085 ?
? RealTimeDeque.TakeLazyL@takeLazyPre$1      postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    1.195 ?
? RealTimeDeque.cons$5                       postcondition                                                 ?:?  valid  U:orb-smt-z3          2.425 ?
? RealTimeDeque.cons$5                       precond. (call createQueue$5[T](SCons[T](x, Val[T](q.f) ...)  ?:?  valid  U:orb-smt-z3          2.169 ?
? RealTimeDeque.cons$5                       precond. (call force$5[T](q.sf, q.f, q.r, q.sr, st@))         ?:?  valid  U:orb-smt-z3          0.375 ?
? RealTimeDeque.cons$5                       precond. (call force$5[T](q.sr, q.r, q.f, nsf$7._1, nsf ...)  ?:?  valid  U:orb-smt-z3          1.044 ?
? RealTimeDeque.createQueue$5                division by zero                                              ?:?  valid  U:orb-smt-z3          0.122 ?
? RealTimeDeque.createQueue$5                division by zero                                              ?:?  valid  U:orb-smt-z3          0.093 ?
? RealTimeDeque.createQueue$5                postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    3.483 ?
? RealTimeDeque.createQueue$5                precond. (call rotateDrop$5[T](f, j, r, st@))                 ?:?  valid  U:orb-smt-z3          1.058 ?
? RealTimeDeque.createQueue$5                precond. (call rotateDrop$5[T](r, i, f, st@))                 ?:?  valid  U:orb-smt-z3          0.995 ?
? RealTimeDeque.createQueue$5                precond. (call takeLazy$5[T](i, f, nr$20._2))                 ?:?  valid  U:orb-smt-z3          1.285 ?
? RealTimeDeque.createQueue$5                precond. (call takeLazy$5[T](j, r, nf$21._2))                 ?:?  valid  U:orb-smt-z3          1.950 ?
? RealTimeDeque.drop$9                       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.076 ?
? RealTimeDeque.drop$9                       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.077 ?
? RealTimeDeque.drop$9                       postcondition                                                 ?:?  valid  U:orb-smt-z3          0.586 ?
? RealTimeDeque.drop$9                       precond. (call drop$9[T](n - BigInt(1), a$221._1, a$221 ...)  ?:?  valid  U:orb-smt-z3          0.893 ?
? RealTimeDeque.empty$8                      postcondition                                                 ?:?  valid  U:orb-smt-z3          0.450 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.104 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.039 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.051 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.112 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.046 ?
? RealTimeDeque.firstUneval$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.105 ?
? RealTimeDeque.firstUneval$5                postcondition                                                 ?:?  valid  U:orb-smt-z3          1.008 ?
? RealTimeDeque.force$5                      match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.077 ?
? RealTimeDeque.force$5                      match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.080 ?
? RealTimeDeque.force$5                      postcondition                                                 ?:?  valid  U:orb-smt-z3          1.718 ?
? RealTimeDeque.force$5                      precond. (call funeMonotone$5[T](other, hother, st@, ou ...)  ?:?  valid  U:orb-smt-z3          0.913 ?
? RealTimeDeque.force$5                      precond. (call funeMonotone$5[T](tar, htar, st@, out$1))      ?:?  valid  U:orb-smt-z3          0.792 ?
? RealTimeDeque.forceTwice$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.126 ?
? RealTimeDeque.forceTwice$5                 postcondition                                                 ?:?  valid  U:orb-smt-z3          2.232 ?
? RealTimeDeque.forceTwice$5                 precond. (call force$5[T](a$230._1, q.f, q.r, q.sr, a$2 ...)  ?:?  valid  U:orb-smt-z3          1.102 ?
? RealTimeDeque.forceTwice$5                 precond. (call force$5[T](a$231._1, q.r, q.f, nsf$6._1, ...)  ?:?  valid  U:orb-smt-z3          2.000 ?
? RealTimeDeque.forceTwice$5                 precond. (call force$5[T](q.sf, q.f, q.r, q.sr, st@))         ?:?  valid  U:orb-smt-z3          2.289 ?
? RealTimeDeque.forceTwice$5                 precond. (call force$5[T](q.sr, q.r, q.f, nsf$6._1, nsf ...)  ?:?  valid  U:orb-smt-z3          1.557 ?
? RealTimeDeque.funeCompose$5                tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.057 ?
? RealTimeDeque.funeCompose$5                tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.033 ?
? RealTimeDeque.funeCompose$5                tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.030 ?
? RealTimeDeque.funeCompose$5                tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.057 ?
? RealTimeDeque.funeCompose$5                tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.050 ?
? RealTimeDeque.funeCompose$5                tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          1.034 ?
? RealTimeDeque.funeCompose$5                tact (precond. (call funeCompose-VCTact[T](c match { ...))    ?:?  valid  U:orb-smt-z3          0.034 ?
? RealTimeDeque.funeEqual$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.074 ?
? RealTimeDeque.funeMonotone$5               postcondition                                                 ?:?  valid  U:orb-smt-z3          0.932 ?
? RealTimeDeque.funeMonotone$5               precond. (call funeCompose$5[T](l1, st1, st2))                ?:?  valid  U:orb-smt-z3          0.087 ?
? RealTimeDeque.funeMonotone$5               precond. (call funeCompose$5[T](l2, st1, st2))                ?:?  valid  U:orb-smt-z3          0.094 ?
? ValOrFun.get-mem$3                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.030 ?
? ValOrFun.get-mem$3                         postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.575 ?
? RealTimeDeque.head$15                      match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.411 ?
? RealTimeDeque.head$15                      postcondition                                                 ?:?  valid  U:orb-smt-z3          0.410 ?
? RealTimeDeque.isConcrete$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.044 ?
? RealTimeDeque.isConcrete$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.039 ?
? RealTimeDeque.isConcrete$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.042 ?
? RealTimeDeque.isConcrete$5                 postcondition                                                 ?:?  valid  U:orb-smt-z3          0.283 ?
? Queue.isEmpty$13                           postcondition                                                 ?:?  valid  U:orb-smt-z3          0.033 ?
? RealTimeDeque.revAppend$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.077 ?
? RealTimeDeque.revAppend$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.085 ?
? RealTimeDeque.revAppend$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          1.513 ?
? RealTimeDeque.revAppend$5                  precond. (call revAppend$5[T](a$220._1, SCons[T](x, Val ...)  ?:?  valid  U:orb-smt-orb-cvc4    1.468 ?
? RealTimeDeque.reverse$7                    postcondition                                                 ?:?  valid  U:orb-smt-z3          0.393 ?
? RealTimeDeque.rotateDrop$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.109 ?
? RealTimeDeque.rotateDrop$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.077 ?
? RealTimeDeque.rotateDrop$5                 postcondition                                                 ?:?  valid  U:orb-smt-z3          1.237 ?
? RealTimeDeque.rotateDrop$5                 precond. (call drop$9[T](BigInt(2), f, nr$19._2))             ?:?  valid  U:orb-smt-z3          0.657 ?
? RealTimeDeque.rotateDrop$5                 precond. (call drop$9[T](i, f, st@))                          ?:?  valid  U:orb-smt-z3          0.085 ?
? RealTimeDeque.rotateDrop$5                 precond. (call rotateRev$5[T](r, a$227._1, SNil[T](), a ...)  ?:?  valid  U:orb-smt-z3          0.489 ?
? RealTimeDeque.rotateRev$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.098 ?
? RealTimeDeque.rotateRev$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.078 ?
? RealTimeDeque.rotateRev$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          1.341 ?
? RealTimeDeque.rotateRev$5                  precond. (call drop$9[T](BigInt(2), f, nr$17._2))             ?:?  valid  U:orb-smt-orb-cvc4    0.769 ?
? RealTimeDeque.rotateRev$5                  precond. (call revAppend$5[T](a$225._1, a, a$225._2))         ?:?  valid  U:orb-smt-orb-cvc4    2.429 ?
? RealTimeDeque.rotateRev$5                  precond. (call revAppend$5[T](f, a, st@))                     ?:?  valid  U:orb-smt-z3          0.090 ?
? RealTimeDeque.rotateRev$5                  precond. (call take$9[T](BigInt(2), f, nf$17._2))             ?:?  valid  U:orb-smt-z3          0.629 ?
? Stream.size$10                             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.031 ?
? Stream.size$10                             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.053 ?
? Stream.size$10                             postcondition                                                 ?:?  valid  U:orb-smt-z3          0.300 ?
? RealTimeDeque.snoc$5                       postcondition                                                 ?:?  valid  U:orb-smt-z3          1.964 ?
? RealTimeDeque.snoc$5                       precond. (call cons$5[T](x, reverse$7[T](q, st@), st@))       ?:?  valid  U:orb-smt-z3          0.680 ?
? RealTimeDeque.snoc$5                       precond. (call reverse$7[T](a$233._1, a$233._2))              ?:?  valid  U:orb-smt-z3          1.535 ?
? RealTimeDeque.snoc$5                       precond. (call reverse$7[T](q, st@))                          ?:?  valid  U:orb-smt-z3          0.080 ?
? RealTimeDeque.tail$20                      postcondition                                                 ?:?  valid  U:orb-smt-z3          1.403 ?
? RealTimeDeque.tail$20                      precond. (call tailSub$5[T](q, st@))                          ?:?  valid  U:orb-smt-z3          0.096 ?
? RealTimeDeque.tailSub$5                    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.026 ?
? RealTimeDeque.tailSub$5                    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.109 ?
? RealTimeDeque.tailSub$5                    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.088 ?
? RealTimeDeque.tailSub$5                    postcondition                                                 ?:?  valid  U:orb-smt-z3          2.322 ?
? RealTimeDeque.tailSub$5                    precond. (call createQueue$5[T](a$232._1, q.lenf - BigI ...)  ?:?  valid  U:orb-smt-z3          2.613 ?
? RealTimeDeque.tailSub$5                    precond. (call forceTwice$5[T](q, st@))                       ?:?  valid  U:orb-smt-z3          1.533 ?
? RealTimeDeque.take$9                       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.084 ?
? RealTimeDeque.take$9                       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.079 ?
? RealTimeDeque.take$9                       postcondition                                                 ?:?  valid  U:orb-smt-z3          0.627 ?
? RealTimeDeque.take$9                       precond. (call take$9[T](n - BigInt(1), a$222._1, a$222 ...)  ?:?  valid  U:orb-smt-orb-cvc4    1.106 ?
? RealTimeDeque.takeLazy$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.121 ?
? RealTimeDeque.takeLazy$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.251 ?
? RealTimeDeque.takeLazy$5                   postcondition                                                 ?:?  valid  U:orb-smt-z3          0.631 ?
? Queue.valid$6                              postcondition                                                 ?:?  valid  U:orb-smt-z3          0.099 ?
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? total: 105    valid: 105    invalid: 0      unknown 0                                                                                     76.245 ?
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] - considering function empty-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] empty-alloc-->1 * res$268._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] Function: empty-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] empty-alloc-->1 * res$268._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] empty-alloc-->1 * res$268._2 + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: empty-alloc --> alloc + BigInt(-2) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function reverse-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] reverse-alloc-->1 * x$5$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] Function: reverse-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] reverse-alloc-->1 * x$5$7._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] reverse-alloc-->1 * x$5$7._2 + -1 <= 0
[[34m  Info  [0m] checked VC inst... in 0.0s
[[34m  Info  [0m] - Found inductive invariant: reverse-alloc --> alloc + BigInt(-1) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function takeLazy-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] takeLazy-alloc-->1 * res$269._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: takeLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] takeLazy-alloc-->1 * res$269._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.028s
[[34m  Info  [0m] Function: takeLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] takeLazy-alloc-->1 * res$269._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] Function: takeLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] takeLazy-alloc-->1 * res$269._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] takeLazy-alloc-->1 * res$269._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] - Found inductive invariant: takeLazy-alloc --> alloc + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function revAppend-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + 0 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.022s
[[34m  Info  [0m] Function: revAppend-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + 0 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.218s
[[34m  Info  [0m] Function: revAppend-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + -5 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.533s
[[34m  Info  [0m] Function: revAppend-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 19 + 15
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + 0 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.149s
[[34m  Info  [0m] Function: revAppend-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + -5 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + -2 * l1.size) + 99 <= 0
[[34m  Info  [0m] checked VC inst... in 0.13s
[[34m  Info  [0m] Function: revAppend-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 15
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + -5 * l1.size) + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] revAppend-alloc-->(1 * res$276._2 + -2 * l1.size) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] - Found inductive invariant: revAppend-alloc --> alloc + BigInt(-2) * l1.size <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function drop-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(0 * n + 1 * res$274._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: drop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(0 * n + 1 * res$274._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(99 * n + 1 * res$274._2) + 99 <= 0
[[34m  Info  [0m] checked VC inst... in 0.088s
[[34m  Info  [0m] Function: drop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(0 * n + 1 * res$274._2) + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(99 * n + 1 * res$274._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.245s
[[34m  Info  [0m] Function: drop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 10
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(-3 * n + 1 * res$274._2) + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] drop-alloc-->(0 * n + 1 * res$274._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] - Found inductive invariant: drop-alloc --> alloc <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function take-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(0 * n + 1 * res$267._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] Function: take-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(0 * n + 1 * res$267._2) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.022s
[[34m  Info  [0m] Function: take-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(0 * n + 1 * res$267._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.092s
[[34m  Info  [0m] Function: take-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(0 * n + 1 * res$267._2) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.173s
[[34m  Info  [0m] Function: take-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 10
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(-6 * n + 1 * res$267._2) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.018s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] take-alloc-->(-2 * n + 1 * res$267._2) + -1 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] - Found inductive invariant: take-alloc --> (BigInt(-2) * n + alloc) + BigInt(-1) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function rotateRev-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.037s
[[34m  Info  [0m] Function: rotateRev-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.053s
[[34m  Info  [0m] Function: rotateRev-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 19 + 19
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 13.655s
[[34m  Info  [0m] Function: rotateRev-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->2 * res$266._2 + -25 <= 0
[[34m  Info  [0m] checked VC inst... in 0.155s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 37.081s
[[34m  Info  [0m] Function: rotateRev-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 21 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + -13 <= 0
[[34m  Info  [0m] checked VC inst... in 0.293s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateRev-alloc-->1 * res$266._2 + -12 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] - Found inductive invariant: rotateRev-alloc --> alloc + BigInt(-12) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function rotateDrop-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.083s
[[34m  Info  [0m] Function: rotateDrop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.037s
[[34m  Info  [0m] Function: rotateDrop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 22 + 19
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -15 <= 0
[[34m  Info  [0m] checked VC inst... in 0.056s
[[34m  Info  [0m] Function: rotateDrop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 19 + 41
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 5.747s
[[34m  Info  [0m] Function: rotateDrop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 21 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 15.033s
[[34m  Info  [0m] VC solving failed!...retrying with a bigger model...
[[34m  Info  [0m] # of atomic predicates: 2 + 22
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -15 <= 0
[[34m  Info  [0m] checked VC inst... in 0.041s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 4.61s
[[34m  Info  [0m] Function: rotateDrop-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 25 + 23
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -15 <= 0
[[34m  Info  [0m] checked VC inst... in 0.119s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] rotateDrop-alloc-->1 * res$261._2 + -14 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] - Found inductive invariant: rotateDrop-alloc --> alloc + BigInt(-14) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function get-mem-alloc...
[[34m  Info  [0m] - considering function force-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] Function: force-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: force-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: force-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.026s
[[34m  Info  [0m] Function: force-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 11
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + -14 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: force-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 23
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-alloc-->1 * res$263._2 + -15 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] - Found inductive invariant: force-alloc --> alloc + BigInt(-15) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function createQueue-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] createQueue-alloc-->1 * res$273._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.062s
[[34m  Info  [0m] Function: createQueue-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] createQueue-alloc-->1 * res$273._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.052s
[[34m  Info  [0m] Function: createQueue-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 28 + 21
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] createQueue-alloc-->1 * res$273._2 + -19 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] createQueue-alloc-->1 * res$273._2 + -18 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] - Found inductive invariant: createQueue-alloc --> alloc + BigInt(-18) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function cons-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] cons-alloc-->1 * res$270._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.017s
[[34m  Info  [0m] Function: cons-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 17 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] cons-alloc-->1 * res$270._2 + -52 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] cons-alloc-->1 * res$270._2 + -50 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: cons-alloc --> alloc + BigInt(-50) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function snoc-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] snoc-alloc-->1 * res$271._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: snoc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] snoc-alloc-->1 * res$271._2 + -54 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] snoc-alloc-->1 * res$271._2 + -52 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: snoc-alloc --> alloc + BigInt(-52) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function head-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] Function: head-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: head-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.039s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + 99 <= 0
[[34m  Info  [0m] checked VC inst... in 0.501s
[[34m  Info  [0m] Function: head-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.055s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] head-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] - Found inductive invariant: head-alloc --> alloc <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function forceTwice-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] forceTwice-alloc-->1 * x$2$21._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: forceTwice-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] forceTwice-alloc-->1 * x$2$21._2 + -62 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] forceTwice-alloc-->1 * x$2$21._2 + -60 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: forceTwice-alloc --> alloc + BigInt(-60) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function tailSub-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tailSub-alloc-->1 * res$264._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.028s
[[34m  Info  [0m] Function: tailSub-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tailSub-alloc-->1 * res$264._2 + -80 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tailSub-alloc-->1 * res$264._2 + -78 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] - Found inductive invariant: tailSub-alloc --> alloc + BigInt(-78) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function tail-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tail-alloc-->1 * res$265._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: tail-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tail-alloc-->1 * res$265._2 + -80 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] tail-alloc-->1 * res$265._2 + -78 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: tail-alloc --> alloc + BigInt(-78) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ???????????
??? Summary ?????????????????????????????????????????????????
? ???????????                                               ?
? cons            alloc <= 50                 2.706         ?
? createQueue     alloc <= 18                 2.599         ?
? drop            alloc <= 0 * n + 0          1.579         ?
? empty           alloc <= 2                  1.158         ?
? force           alloc <= 15                 1.336         ?
? forceTwice      alloc <= 60                 3.011         ?
? head            alloc <= 0                  2.099         ?
? revAppend       alloc <= 2 * l1.size + 0    3.797         ?
? reverse         alloc <= 1                  0.480         ?
? rotateDrop      alloc <= 14                 28.105        ?
? rotateRev       alloc <= 12                 55.285        ?
? snoc            alloc <= 52                 1.963         ?
? tail            alloc <= 78                 1.457         ?
? tailSub         alloc <= 78                 2.759         ?
? take            alloc <= 2 * n + 1          1.381         ?
? takeLazy        alloc <= 3                  0.831         ?
?????????????????????????????????????????????????????????????
? total: 16    inferred: 16    unknown: 0     time: 110.546 ?
?????????????????????????????????????????????????????????????
[[34m  Info  [0m] Stats dumped to file: Deque-stats.txt
