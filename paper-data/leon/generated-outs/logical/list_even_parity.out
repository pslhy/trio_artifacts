[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] ======================= Synthesizing 'list_even_parity' =======================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  â†“list_even_parity(xs) && true
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(xs))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  â†“list_even_parity(xs) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(xs))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  â†“list_even_parity(xs) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(xs))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  (â†“list_even_parity(Nil) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Nil))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  (â†“list_even_parity(Nil) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Nil))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  T âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_even_parity$0(tail$17)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                 Î  (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                                                 Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                                     case F =>
[[34m  Info  [0m]                                                       out == F
[[34m  Info  [0m]                                                     case T =>
[[34m  Info  [0m]                                                       out == T
[[34m  Info  [0m]                                                   }
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /24,0/
[[34m  Info  [0m] [Introduce calls list_even_parity$0(tail$17)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_even_parity$0(tail$17)] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                                     (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                                                   Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                                       case F =>
[[34m  Info  [0m]                                                         out == F
[[34m  Info  [0m]                                                       case T =>
[[34m  Info  [0m]                                                         out == T
[[34m  Info  [0m]                                                     }
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                            (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                (â†“list_even_parity(Cons(F, tail$17)) && è°¶Cons(F, tail$17) && â†“list_even_parity(tail$17) && è°¶F) && true
[[34m  Info  [0m]                              Ï† iseven(len(only_trues(Cons(F, tail$17)))) match {
[[34m  Info  [0m]                                  case F =>
[[34m  Info  [0m]                                    out == F
[[34m  Info  [0m]                                  case T =>
[[34m  Info  [0m]                                    out == T
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                (â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T) && true
[[34m  Info  [0m]                              Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                  case F =>
[[34m  Info  [0m]                                    out == F
[[34m  Info  [0m]                                  case T =>
[[34m  Info  [0m]                                    out == T
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (â†“list_even_parity(Cons(F, tail$17)) && è°¶Cons(F, tail$17) && â†“list_even_parity(tail$17) && è°¶F) && true
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(F, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  rec$7 âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T) && true
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                            (â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$7'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                            (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'rec$7'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$7'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (rec$7 == F) && ((â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17) && è°¶F && inactive(rec$7)) && true)
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'rec$7'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (rec$7 == T) && ((â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17) && è°¶T && inactive(rec$7)) && true)
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (rec$7 == F) && ((â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17) && è°¶F && inactive(rec$7)) && true)
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  head$12 âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (rec$7 == T) && ((â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17) && è°¶T && inactive(rec$7)) && true)
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                            (rec$7 == T) && ((â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17) && è°¶T && inactive(rec$7)) && true)
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (â†“list_even_parity(Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_even_parity(tail$17)) && true
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(head$12, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$7: Boolean = list_even_parity(Nil)
[[34m  Info  [0m]                                (â†“list_even_parity(Cons(head$12, Nil)) && è°¶Cons(head$12, Nil) && â†“list_even_parity(Nil) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† iseven(len(only_trues(Cons(head$12, Nil)))) match {
[[34m  Info  [0m]                                  case F =>
[[34m  Info  [0m]                                    out == F
[[34m  Info  [0m]                                  case T =>
[[34m  Info  [0m]                                    out == T
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$17, tail$21, head$12
[[34m  Info  [0m]                              Î  val rec$7: Boolean = list_even_parity(Cons(head$17, tail$21))
[[34m  Info  [0m]                                (â†“list_even_parity(Cons(head$12, Cons(head$17, tail$21))) && è°¶Cons(head$12, Cons(head$17, tail$21)) && â†“list_even_parity(Cons(head$17, tail$21)) && è°¶Cons(head$17, tail$21)) && true
[[34m  Info  [0m]                              Ï† iseven(len(only_trues(Cons(head$12, Cons(head$17, tail$21))))) match {
[[34m  Info  [0m]                                  case F =>
[[34m  Info  [0m]                                    out == F
[[34m  Info  [0m]                                  case T =>
[[34m  Info  [0m]                                    out == T
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /22,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(Nil)
[[34m  Info  [0m]                                  (â†“list_even_parity(Cons(head$12, Nil)) && è°¶Cons(head$12, Nil) && â†“list_even_parity(Nil) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(head$12, Nil)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(Nil)
[[34m  Info  [0m]                            (â†“list_even_parity(Cons(head$12, Nil)) && è°¶Cons(head$12, Nil) && â†“list_even_parity(Nil) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(head$12, Nil)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$7'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                            (â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T) && true
[[34m  Info  [0m]                          Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                              case F =>
[[34m  Info  [0m]                                out == F
[[34m  Info  [0m]                              case T =>
[[34m  Info  [0m]                                out == T
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$7'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$7'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (rec$7 == F) && ((â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T && è°¶F && inactive(rec$7)) && true)
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$7'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                              (rec$7 == T) && ((â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T && è°¶T && inactive(rec$7)) && true)
[[34m  Info  [0m]                            Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                case F =>
[[34m  Info  [0m]                                  out == F
[[34m  Info  [0m]                                case T =>
[[34m  Info  [0m]                                  out == T
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (rec$7 == F) && ((â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T && è°¶F && inactive(rec$7)) && true)
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  T âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$7: Boolean = list_even_parity(tail$17)
[[34m  Info  [0m]                                  (rec$7 == T) && ((â†“list_even_parity(Cons(T, tail$17)) && è°¶Cons(T, tail$17) && â†“list_even_parity(tail$17) && è°¶T && è°¶T && inactive(rec$7)) && true)
[[34m  Info  [0m]                                Ï† iseven(len(only_trues(Cons(T, tail$17)))) match {
[[34m  Info  [0m]                                    case F =>
[[34m  Info  [0m]                                      out == F
[[34m  Info  [0m]                                    case T =>
[[34m  Info  [0m]                                      out == T
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  F âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] Finished in 46368ms
[[34m  Info  [0m] Solution requires validation
[[34m  Info  [0m]  - Now considering 'postcondition' VC for list_even_parity @19:58...
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Now considering 'precond. (call iseven(len(only_trues(xs))))' VC for list_even_parity @45:5...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call len(only_trues(xs)))' VC for list_even_parity @45:12...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call only_trues(xs))' VC for list_even_parity @45:16...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_even_parity @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_even_parity @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_even_parity @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_even_parity @45:5...
[[34m  Info  [0m]  => VALID
[[33mWarning [0m] Solution may be invalid:
[[34m  Info  [0m] =============================== list_even_parity ===============================
[[34m  Info  [0m] def list_even_parity(xs : BoolList): Boolean =  {
[[34m  Info  [0m]   xs match {
[[34m  Info  [0m]     case Nil =>
[[34m  Info  [0m]       T
[[34m  Info  [0m]     case Cons(head, tail) =>
[[34m  Info  [0m]       val rec: Boolean = list_even_parity(tail)
[[34m  Info  [0m]       head match {
[[34m  Info  [0m]         case F =>
[[34m  Info  [0m]           rec
[[34m  Info  [0m]         case T =>
[[34m  Info  [0m]           rec match {
[[34m  Info  [0m]             case F =>
[[34m  Info  [0m]               T
[[34m  Info  [0m]             case T =>
[[34m  Info  [0m]               F
[[34m  Info  [0m]           }
[[34m  Info  [0m]       }
[[34m  Info  [0m]   }
[[34m  Info  [0m] } ensuring {
[[34m  Info  [0m]   (out : Boolean) => iseven(len(only_trues(xs))) match {
[[34m  Info  [0m]     case F =>
[[34m  Info  [0m]       out == F
[[34m  Info  [0m]     case T =>
[[34m  Info  [0m]       out == T
[[34m  Info  [0m]   }
[[34m  Info  [0m] }
[[34m  Info  [0m] 