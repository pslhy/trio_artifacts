[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] ======================= Synthesizing 'tree_count_nodes' =======================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± t
[[34m  Info  [0m]                                Î  â†“tree_count_nodes(t) && true
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                      out == S(S(Z))
[[34m  Info  [0m]                                    case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                      out == S(S(Z))
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /27,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± t
[[34m  Info  [0m]                          Î  â†“tree_count_nodes(t) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                out == S(Z)
[[34m  Info  [0m]                              case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /27,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 't'    ] âŸ¦ Î± t
[[34m  Info  [0m]                          Î  â†“tree_count_nodes(t) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                out == S(Z)
[[34m  Info  [0m]                              case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /27,0/
[[34m  Info  [0m] [ADT Split on 't'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  (â†“tree_count_nodes(Leaf) && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Leaf match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                  out == S(Z)
[[34m  Info  [0m]                                case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                  out == S(S(Z))
[[34m  Info  [0m]                                case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                  out == S(S(Z))
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± left$19, n$7, right$19
[[34m  Info  [0m]                            Î  (â†“tree_count_nodes(Node(left$19, n$7, right$19)) && è°¶Node(left$19, n$7, right$19)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$7, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                  out == S(Z)
[[34m  Info  [0m]                                case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                  out == S(S(Z))
[[34m  Info  [0m]                                case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                  out == S(S(Z))
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /26,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  (â†“tree_count_nodes(Leaf) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Leaf match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                out == S(Z)
[[34m  Info  [0m]                              case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                out == S(S(Z))
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Z âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls tree_count_nodes$0(left$19), tree_count_nodes$0(right$19)] âŸ¦ Î± left$19, n$7, right$19
[[34m  Info  [0m]                                                                               Î  (â†“tree_count_nodes(Node(left$19, n$7, right$19)) && è°¶Node(left$19, n$7, right$19)) && true
[[34m  Info  [0m]                                                                               Ï† Node(left$19, n$7, right$19) match {
[[34m  Info  [0m]                                                                                   case Leaf =>
[[34m  Info  [0m]                                                                                     out == Z
[[34m  Info  [0m]                                                                                   case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                                                                     out == S(Z)
[[34m  Info  [0m]                                                                                   case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                                                                     out == S(S(Z))
[[34m  Info  [0m]                                                                                   case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                                                                     out == S(S(Z))
[[34m  Info  [0m]                                                                                   case _ =>
[[34m  Info  [0m]                                                                                     true
[[34m  Info  [0m]                                                                                 }
[[34m  Info  [0m]                                                                               x out
[[34m  Info  [0m]                                                                             âŸ§ /26,0/
[[34m  Info  [0m] [Introduce calls tree_count_nodes$0(left$19), tree_count_nodes$0(right$19)] Decomposed into:
[[34m  Info  [0m] [Introduce calls tree_count_nodes$0(left$19), tree_count_nodes$0(right$19)] - âŸ¦ Î± left$19, n$7, right$19
[[34m  Info  [0m]                                                                                 Î  val rec$7: Nat = tree_count_nodes(left$19)
[[34m  Info  [0m]                                                                                   val rec$8: Nat = tree_count_nodes(right$19)
[[34m  Info  [0m]                                                                                   (â†“tree_count_nodes(Node(left$19, n$7, right$19)) && è°¶Node(left$19, n$7, right$19) && â†“tree_count_nodes(left$19) && â†“tree_count_nodes(right$19)) && true
[[34m  Info  [0m]                                                                                 Ï† Node(left$19, n$7, right$19) match {
[[34m  Info  [0m]                                                                                     case Leaf =>
[[34m  Info  [0m]                                                                                       out == Z
[[34m  Info  [0m]                                                                                     case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                                                                       out == S(Z)
[[34m  Info  [0m]                                                                                     case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                                                                       out == S(S(Z))
[[34m  Info  [0m]                                                                                     case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                                                                       out == S(S(Z))
[[34m  Info  [0m]                                                                                     case _ =>
[[34m  Info  [0m]                                                                                       true
[[34m  Info  [0m]                                                                                   }
[[34m  Info  [0m]                                                                                 x out
[[34m  Info  [0m]                                                                               âŸ§ /26,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$7, right$19
[[34m  Info  [0m]                                Î  val rec$7: Nat = tree_count_nodes(left$19)
[[34m  Info  [0m]                                  val rec$8: Nat = tree_count_nodes(right$19)
[[34m  Info  [0m]                                  (â†“tree_count_nodes(Node(left$19, n$7, right$19)) && è°¶Node(left$19, n$7, right$19) && â†“tree_count_nodes(left$19) && â†“tree_count_nodes(right$19)) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$7, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]                                      out == S(S(Z))
[[34m  Info  [0m]                                    case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]                                      out == S(S(Z))
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /26,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  nat_add(S(rec$8), rec$7) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] Finished in 7628ms
[[34m  Info  [0m] =============================== tree_count_nodes ===============================
[[34m  Info  [0m] def tree_count_nodes(t : NatTree): Nat =  {
[[34m  Info  [0m]   t match {
[[34m  Info  [0m]     case Leaf =>
[[34m  Info  [0m]       Z
[[34m  Info  [0m]     case Node(left, n, right) =>
[[34m  Info  [0m]       nat_add(S(tree_count_nodes(right)), tree_count_nodes(left))
[[34m  Info  [0m]   }
[[34m  Info  [0m] } ensuring {
[[34m  Info  [0m]   (out : Nat) => t match {
[[34m  Info  [0m]     case Leaf =>
[[34m  Info  [0m]       out == Z
[[34m  Info  [0m]     case Node(Leaf, x, Leaf) =>
[[34m  Info  [0m]       out == S(Z)
[[34m  Info  [0m]     case Node(Node(Leaf, a, Leaf), x, Leaf) =>
[[34m  Info  [0m]       out == S(S(Z))
[[34m  Info  [0m]     case Node(Leaf, x, Node(Leaf, b, Leaf)) =>
[[34m  Info  [0m]       out == S(S(Z))
[[34m  Info  [0m]     case _ =>
[[34m  Info  [0m]       true
[[34m  Info  [0m]   }
[[34m  Info  [0m] }
[[34m  Info  [0m] 