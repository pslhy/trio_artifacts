[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] =========================== Synthesizing 'list_sum' ===========================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  â†“list_sum(xs) && true
[[34m  Info  [0m]                                Ï† xs match {
[[34m  Info  [0m]                                    case Nil =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Cons(h, t) =>
[[34m  Info  [0m]                                      t match {
[[34m  Info  [0m]                                        case Nil =>
[[34m  Info  [0m]                                          out == h
[[34m  Info  [0m]                                        case Cons(h2, t2) =>
[[34m  Info  [0m]                                          t2 match {
[[34m  Info  [0m]                                            case Nil =>
[[34m  Info  [0m]                                              out == nat_add(h, h2)
[[34m  Info  [0m]                                            case Cons(h3, t3) =>
[[34m  Info  [0m]                                              true
[[34m  Info  [0m]                                          }
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 2 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  list_fold((a0 : Nat, a1 : Nat) => nat_add(a0, a1), Z, xs) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] Finished in 11151ms
[[34m  Info  [0m] Solution requires validation
[[34m  Info  [0m]  - Now considering 'postcondition' VC for list_sum @27:45...
[[33mWarning [0m]  => TIMEOUT
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_sum @29:4...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_sum @32:8...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for list_sum @35:12...
[[34m  Info  [0m]  => VALID
[[33mWarning [0m] Solution may be invalid:
[[34m  Info  [0m] =================================== list_sum ===================================
[[34m  Info  [0m] def list_sum(xs : NatList): Nat =  {
[[34m  Info  [0m]   list_fold((a0 : Nat, a1 : Nat) => nat_add(a0, a1), Z, xs)
[[34m  Info  [0m] } ensuring {
[[34m  Info  [0m]   (out : Nat) => xs match {
[[34m  Info  [0m]     case Nil =>
[[34m  Info  [0m]       out == Z
[[34m  Info  [0m]     case Cons(h, t) =>
[[34m  Info  [0m]       t match {
[[34m  Info  [0m]         case Nil =>
[[34m  Info  [0m]           out == h
[[34m  Info  [0m]         case Cons(h2, t2) =>
[[34m  Info  [0m]           t2 match {
[[34m  Info  [0m]             case Nil =>
[[34m  Info  [0m]               out == nat_add(h, h2)
[[34m  Info  [0m]             case Cons(h3, t3) =>
[[34m  Info  [0m]               true
[[34m  Info  [0m]           }
[[34m  Info  [0m]       }
[[34m  Info  [0m]   }
[[34m  Info  [0m] }
[[34m  Info  [0m] 