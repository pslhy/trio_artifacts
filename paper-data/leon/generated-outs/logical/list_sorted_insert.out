[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] ====================== Synthesizing 'list_sorted_insert' ======================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs, n
[[34m  Info  [0m]                                Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs, n
[[34m  Info  [0m]                            Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs, n
[[34m  Info  [0m]                            Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /24,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± xs, n
[[34m  Info  [0m]                             Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /24,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± xs, n
[[34m  Info  [0m]                               Î  !list_sorted(xs) && (â†“list_sorted_insert(xs, n) && true)
[[34m  Info  [0m]                               Ï† content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs, n
[[34m  Info  [0m]                                Î  !list_sorted(xs) && (â†“list_sorted_insert(xs, n) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, xs) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, xs) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(n, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(n, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs, n
[[34m  Info  [0m]                                Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(xs$0, nat$2)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                                       Î  (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                                                       Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /14,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(xs$0, nat$2)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(xs$0, nat$2)] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                                         Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                                           (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                                                         Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                                         x out
[[34m  Info  [0m]                                                       âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$17, n$0)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                        Î  (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                                                        Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                        x out
[[34m  Info  [0m]                                                      âŸ§ /19,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$17, n$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$17, n$0)] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                                                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14, xs
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(xs, S(nat$14)) && è°¶S(nat$14)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$14), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_sorted_insert(xs, n) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                 !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true)
[[34m  Info  [0m]                               Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$2), xs) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                   (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /19,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                     !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true)
[[34m  Info  [0m]                                                   Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$12, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$16, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, S(nat$16))
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(S(nat$16))) && è°¶S(S(nat$16)) && â†“list_sorted_insert(xs, S(nat$16)) && è°¶S(nat$16)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(S(nat$16)), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$12, tail$17)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$2), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$37: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$37: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Cons(head$37, tail$37) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41, tail$40, head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41, tail$40), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Cons(head$41, tail$40)), n) && è°¶Cons(head$12, Cons(head$41, tail$40)) && â†“list_sorted_insert(Cons(head$41, tail$40), n) && è°¶Cons(head$41, tail$40)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$41, tail$40))) || list_sorted(out)) && content(Cons(n, Cons(head$12, Cons(head$41, tail$40)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$42: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$41: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Cons(head$42, tail$41) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$33, n$0)] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                                                        Î  (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33)) && true
[[34m  Info  [0m]                                                        Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                                        x out
[[34m  Info  [0m]                                                      âŸ§ /19,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$33, n$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$33, n$0)] - âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                                                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                                            (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                                                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  (â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                            Î  (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  (â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± xs
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                 !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true)
[[34m  Info  [0m]                               Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                 (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                               Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /19,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                     (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                                                   Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /7,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                       !list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true)
[[34m  Info  [0m]                                                     Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, Cons(S(nat$94), tail$17)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± xs
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$1309: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$1756: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Cons(head$1309, tail$1756) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$407, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, S(nat$407))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(S(nat$407))) && è°¶S(S(nat$407)) && â†“list_sorted_insert(xs, S(nat$407)) && è°¶Nil && inactive(rec$15) && è°¶S(nat$407)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(S(nat$407)), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$12, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$696, tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$696), tail$17), n) && è°¶Cons(S(nat$696), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶S(nat$696)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$696), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$696), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$697, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$697))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$697)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$697)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$697)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$697), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$1869, tail$3445, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1869, tail$3445), nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1869, tail$3445), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$1869, tail$3445), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$1869, tail$3445)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$1869, tail$3445)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$1869, tail$3445))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$700, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, S(nat$700))
[[34m  Info  [0m]                              (â†“list_sorted_insert(xs, S(S(nat$700))) && è°¶S(S(nat$700)) && â†“list_sorted_insert(xs, S(nat$700)) && è°¶S(nat$700)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$700)), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$832, tail$33, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$832), tail$33), n) && è°¶Cons(S(nat$832), tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶S(nat$832)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$832), tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$833, head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, S(nat$833))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), S(nat$833)) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, S(nat$833)) && è°¶S(nat$833)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$833), Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$225, Z$0)] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                                                         Î  (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225)) && true
[[34m  Info  [0m]                                                         Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                                         x out
[[34m  Info  [0m]                                                       âŸ§ /9,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$225, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$225, Z$0)] - âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                                                           Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$836, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(S(nat$836)), tail$17), n) && è°¶Cons(S(S(nat$836)), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(S(nat$836)) && è°¶S(nat$836)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$836)), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$836)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$94), tail$17)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$1872: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$3448: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Cons(head$1872, tail$3448) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$2333, tail$3453, head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$2333, tail$3453), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$2333, tail$3453)), n) && è°¶Cons(head$12, Cons(head$2333, tail$3453)) && â†“list_sorted_insert(Cons(head$2333, tail$3453), n) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$2333, tail$3453)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$2333, tail$3453))) || list_sorted(out)) && content(Cons(n, Cons(head$12, Cons(head$2333, tail$3453)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$2), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2524: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$4100: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Cons(head$2524, tail$4100) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$32, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$2528, tail$4103, head$32, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$2528, tail$4103), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$32, Cons(head$2528, tail$4103)), n) && è°¶Cons(head$32, Cons(head$2528, tail$4103)) && â†“list_sorted_insert(Cons(head$2528, tail$4103), n) && è°¶Cons(head$2528, tail$4103)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Cons(head$2528, tail$4103)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2529: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$4104: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Cons(head$2529, tail$4104) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$2676, tail$4250, nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$2676, tail$4250), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Cons(head$2676, tail$4250)), n) && è°¶Cons(S(nat$94), Cons(head$2676, tail$4250)) && â†“list_sorted_insert(Cons(head$2676, tail$4250), n) && è°¶S(nat$94) && è°¶Cons(head$2676, tail$4250)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Cons(head$2676, tail$4250))) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Cons(head$2676, tail$4250)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2677: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$4251: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Cons(head$2677, tail$4251) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$1342, tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$1342), tail$17), n) && è°¶Cons(S(nat$1342), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$1342)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$1342), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$1343, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$1343))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$1343)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$1343)) && è°¶S(nat$1343)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$1343), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± xs
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                 (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                               Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† !list_sorted(xs) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(xs)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(xs)] - âŸ¦ Î± xs
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                 (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                               Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /12,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                               (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /9,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$2691, tail$4760, head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$2691, tail$4760), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Cons(head$2691, tail$4760)), n) && è°¶Cons(head$12, Cons(head$2691, tail$4760)) && â†“list_sorted_insert(Cons(head$2691, tail$4760), n) && è°¶Cons(head$2691, tail$4760)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Cons(head$2691, tail$4760)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2692: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$4761: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Cons(head$2692, tail$4761) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Nil) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Nil)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† !list_sorted(Nil) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Nil)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Nil)] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                  !list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, Cons(S(Z), tail$17)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /8,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$2685, tail$4755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$2685, tail$4755), Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$2685, tail$4755)) && ((â†“list_sorted_insert(Cons(head$2685, tail$4755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$2685, tail$4755), Z) && è°¶Z && è°¶Cons(head$2685, tail$4755)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Cons(head$2685, tail$4755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± xs
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                             !list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               !list_sorted(xs) && ((rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               !list_sorted(xs) && (rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2686: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$4756: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Cons(head$2686, tail$4756) && inactive(rec$15)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  !list_sorted(xs) && ((rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            !list_sorted(xs) && ((rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$1353, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, S(nat$1353))
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(S(nat$1353))) && è°¶S(S(nat$1353)) && â†“list_sorted_insert(xs, S(nat$1353)) && è°¶Nil && inactive(rec$15) && è°¶S(nat$1353)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(S(nat$1353)), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                   !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                                                 Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                                   Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /7,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                       (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                     Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                  (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                                                Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                                  Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                    !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                                                  Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                  x out
[[34m  Info  [0m]                                                âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$36, S$0(nat$2)), list_sorted_insert$0(tail$36, nat$2)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                                                                       (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36)) && true
[[34m  Info  [0m]                                                                                                     Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                     x out
[[34m  Info  [0m]                                                                                                   âŸ§ /10,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$36, S$0(nat$2)), list_sorted_insert$0(tail$36, nat$2)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$36, S$0(nat$2)), list_sorted_insert$0(tail$36, nat$2)] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                                                                         val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                                                                         val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                                                                         (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                                                                                                       Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                       x out
[[34m  Info  [0m]                                                                                                     âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$2846, tail$4914, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$2846, tail$4914), nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Cons(head$2846, tail$4914)) && ((â†“list_sorted_insert(Cons(head$2846, tail$4914), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2846, tail$4914), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$2846, tail$4914)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$2), Cons(head$2846, tail$4914))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2156, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$2156))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$2156)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$2156)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$2156)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$2156), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$2161, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$2161), tail$17), Z) && è°¶Cons(S(nat$2161), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$2161)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$2161), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$2161), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(xs) || list_sorted(out)) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2552, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, S(nat$2552))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$33), S(nat$2552)) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, S(nat$2552)) && è°¶Z && è°¶S(nat$2552)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2552), Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$2570, tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$2570), tail$33), Z) && è°¶Cons(S(nat$2570), tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶S(nat$2570)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$2570), tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$227'] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± tail$225
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± nat$2572, tail$225
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$2572), tail$225), Z) && è°¶Z && è°¶Cons(S(nat$2572), tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶S(nat$2572)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$2572), tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$225
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$225
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2574, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$2574))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$2574)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$2574)) && è°¶S(Z) && è°¶Z && è°¶S(nat$2574)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$2574), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), tail$17)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$3096, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3096), Nil), n) && è°¶Cons(S(nat$3096), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$3096)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$3096), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$3096), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3097, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$3097))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$3097)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$3097)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$3097)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$3097), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$1642, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(S(nat$1642), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$1642), Nil), n) && è°¶Cons(S(nat$1642), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$1642)) && true)
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$1642), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$1643, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$1643))
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$1643)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$1643)) && è°¶Nil && è°¶S(nat$1643)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$1643), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, tail$17), nat$95), list_sorted_insert$0(tail$17, nat$95)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                                                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                                                                                     (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95)) && true
[[34m  Info  [0m]                                                                                                                   Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                   x out
[[34m  Info  [0m]                                                                                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, tail$17), nat$95), list_sorted_insert$0(tail$17, nat$95)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, tail$17), nat$95), list_sorted_insert$0(tail$17, nat$95)] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                                                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                                                                                       val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                                                                                       val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                                                                                       (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                                                                                                                     Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                     x out
[[34m  Info  [0m]                                                                                                                   âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$5493, tail$7292, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$5493, tail$7292), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5493, tail$7292)), n) && è°¶Cons(Z, Cons(head$5493, tail$7292)) && â†“list_sorted_insert(Cons(head$5493, tail$7292), n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$5493, tail$7292)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Cons(head$5493, tail$7292))) || list_sorted(out)) && content(Cons(n, Cons(Z, Cons(head$5493, tail$7292)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$3102, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3102), Nil), n) && è°¶Cons(S(nat$3102), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$3102)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$3102), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$3102), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3103, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$3103))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$3103)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$3103)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$3103)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$3103), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$5498, tail$7940, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$5498, tail$7940), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$5498, tail$7940)), Z) && è°¶Cons(head$12, Cons(head$5498, tail$7940)) && â†“list_sorted_insert(Cons(head$5498, tail$7940), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$5498, tail$7940)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$5498, tail$7940))) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Cons(head$5498, tail$7940)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$1654, tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$1654), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$1654), tail$17), n) && è°¶Cons(S(nat$1654), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶S(nat$1654)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$1654), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$1655, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$1655))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$1655)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$1655)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$1655)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$1655), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$5966, tail$8975
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$5966, tail$8975), Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$5966, tail$8975), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$5966, tail$8975), Z) && è°¶Z && è°¶Cons(head$5966, tail$8975)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$5966, tail$8975))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± xs
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± xs
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$5967: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$8976: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Cons(head$5967, tail$8976) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$3258, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(xs, S(nat$3258))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(S(nat$3258))) && è°¶S(S(nat$3258)) && â†“list_sorted_insert(xs, S(nat$3258)) && è°¶Nil && inactive(rec$15) && è°¶S(nat$3258)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$3258)), xs)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$98) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$5972: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$8980: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Cons(head$5972, tail$8980) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$98) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3640, head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$3640))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, Nil), S(nat$3640)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$3640)) && è°¶Nil && è°¶S(nat$3640)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$3640), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$32, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$32, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$5978: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$9140: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Cons(head$5978, tail$9140) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$3644, tail$33, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3644), tail$33), n) && è°¶Cons(S(nat$3644), tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶S(nat$3644)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3644), tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3645, head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, S(nat$3645))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), S(nat$3645)) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, S(nat$3645)) && è°¶Nil && inactive(rec$98) && è°¶S(nat$3645)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$3645), Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$225'] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$227
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$227, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$290'] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                            Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$290'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$290'] - âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                              Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$290'] - âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                              Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                rec$290.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$6125: Nat = rec$290.head
[[34m  Info  [0m]                                  val tail$9286: NatList = rec$290.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Cons(head$6125, tail$9286) && inactive(rec$290)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                  (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$6271, tail$9431, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$6271, tail$9431), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Cons(head$6271, tail$9431)), n) && è°¶Cons(S(Z), Cons(head$6271, tail$9431)) && â†“list_sorted_insert(Cons(head$6271, tail$9431), n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$6271, tail$9431)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$6271, tail$9431))) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Cons(head$6271, tail$9431)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6272: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$9432: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$6272, tail$9432) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$3648, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(S(nat$3648)), Nil), n) && è°¶Cons(S(S(nat$3648)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(S(nat$3648)) && è°¶Nil && è°¶S(nat$3648)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$3648)), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$3648)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3649, nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$3649))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), S(nat$3649)) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, S(nat$3649)) && è°¶S(nat$94) && è°¶Nil && è°¶S(nat$3649)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(S(nat$3649), Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$94), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$4150, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$4150)), tail$17), n) && è°¶Cons(S(S(nat$4150)), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(S(nat$4150)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$4150)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$4150)), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$4150)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4151, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$4151))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$4151)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$4151)) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶S(nat$4151)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$4151), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$691'] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± nat$4657, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(S(nat$4657)), Nil), n) && è°¶Cons(S(S(nat$4657)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(S(nat$4657)) && è°¶S(nat$4657)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(S(nat$4657)), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$4657)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4658, nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$4658))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$691), Nil), S(nat$4658)) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, S(nat$4658)) && è°¶Nil && è°¶S(nat$691) && è°¶S(nat$4658)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(S(nat$4658), Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$691), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true)
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(head$12, Nil)) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$2875: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$4921: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Cons(head$2875, tail$4921) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$3669, tail$4954, head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$3669, tail$4954), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Cons(head$3669, tail$4954))) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$3669, tail$4954)), n) && è°¶Cons(head$12, Cons(head$3669, tail$4954)) && â†“list_sorted_insert(Cons(head$3669, tail$4954), n) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$3669, tail$4954)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(head$12, Cons(head$3669, tail$4954)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5157, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$5157))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$5157)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$5157)) && è°¶Z && è°¶S(nat$5157)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$5157), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5175, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$5175), tail$17), Z) && è°¶Cons(S(nat$5175), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶S(nat$5175)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$5175), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                   (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                     !list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true)
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$36, rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(xs, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$6669, tail$10465, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$6669, tail$10465), nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$6669, tail$10465), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$6669, tail$10465), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$6669, tail$10465)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$6669, tail$10465))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$32, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6672: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$10468: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Cons(head$6672, tail$10468) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± head$32, tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), n) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$32, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$6820, tail$10473, head$32, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$6820, tail$10473), n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Cons(head$6820, tail$10473)), n) && è°¶Cons(head$32, Cons(head$6820, tail$10473)) && â†“list_sorted_insert(Cons(head$6820, tail$10473), n) && è°¶Nil && inactive(rec$98) && è°¶Cons(head$6820, tail$10473)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Cons(head$6820, tail$10473)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6971: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$11191: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Cons(head$6971, tail$11191) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$6977, tail$11196, nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$6977, tail$11196), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Cons(head$6977, tail$11196)), n) && è°¶Cons(S(nat$94), Cons(head$6977, tail$11196)) && â†“list_sorted_insert(Cons(head$6977, tail$11196), n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$6977, tail$11196)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Cons(head$6977, tail$11196))) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Cons(head$6977, tail$11196)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6980: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$12269: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Cons(head$6980, tail$12269) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                               (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$17)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$17))] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                               (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6985: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$12273: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Cons(head$6985, tail$12273) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5220, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$5220))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$5220)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$5220)) && è°¶Nil && è°¶S(nat$5220)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$5220), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$12, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$6990, tail$12432, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$6990, tail$12432), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Cons(head$6990, tail$12432)), Z) && è°¶Cons(head$12, Cons(head$6990, tail$12432)) && â†“list_sorted_insert(Cons(head$6990, tail$12432), Z) && è°¶Z && è°¶Cons(head$6990, tail$12432)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$6990, tail$12432)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(head$12, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$6991: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$12433: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Cons(head$6991, tail$12433) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5224, tail$17, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$5224), tail$17), n) && è°¶Cons(S(nat$5224), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶S(nat$5224)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5224), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /12,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5225, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$5225))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$5225)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$5225)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$5225)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$5225), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                       Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                         (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                       Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                       x out
[[34m  Info  [0m]                                     âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                         Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                           (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                         Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                         x out
[[34m  Info  [0m]                                       âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                   val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                   val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                   (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                     val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                     val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                     !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true)
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$12, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                       Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                         (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                       Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                       x out
[[34m  Info  [0m]                                     âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                         Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                           (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                         Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                         x out
[[34m  Info  [0m]                                       âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                       Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                         (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                       Ï† !list_sorted(Cons(Z, Nil)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                       x out
[[34m  Info  [0m]                                     âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                         Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                           (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                         Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                         x out
[[34m  Info  [0m]                                       âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± head$12
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± head$12
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$8355: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$16090: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Cons(head$8355, tail$16090) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$8503, tail$16095, head$12, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$8503, tail$16095), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$8503, tail$16095)), n) && è°¶Cons(head$12, Cons(head$8503, tail$16095)) && â†“list_sorted_insert(Cons(head$8503, tail$16095), n) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$8503, tail$16095)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Cons(head$8503, tail$16095)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                                   Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                       (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                     Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$1755, S$0(Z$0)), list_sorted_insert$0(tail$1755, Z$0)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                                                                       (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755)) && true
[[34m  Info  [0m]                                                                                                     Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                     x out
[[34m  Info  [0m]                                                                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$1755, S$0(Z$0)), list_sorted_insert$0(tail$1755, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$1755, S$0(Z$0)), list_sorted_insert$0(tail$1755, Z$0)] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                                                                         val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                                                                         val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                                                                         (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                                                                                                       Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                       x out
[[34m  Info  [0m]                                                                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$7145, tail$12586
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$7145, tail$12586), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Cons(head$7145, tail$12586)) && ((â†“list_sorted_insert(Cons(head$7145, tail$12586), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$7145, tail$12586), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$7145, tail$12586)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Cons(head$7145, tail$12586))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            !list_sorted(xs) && ((rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$10309, tail$17322
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$10309, tail$17322), Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$10309, tail$17322)) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$10309, tail$17322), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$10309, tail$17322), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$10309, tail$17322)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Cons(head$10309, tail$17322))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$8916, head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), S(nat$8916))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$8916)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$8916))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(S(nat$8916))) && è°¶S(S(nat$8916)) && â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$8916)) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$8916))) && â†“list_sorted_insert(tail$36, S(nat$8916)) && è°¶S(nat$8916)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(S(nat$8916)), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$7156, tail$12597
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$7156, tail$12597), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Cons(head$7156, tail$12597)) && ((â†“list_sorted_insert(Cons(head$7156, tail$12597), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$7156, tail$12597), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$7156, tail$12597)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Cons(head$7156, tail$12597))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$5429
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$5429))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$5429))) && è°¶S(S(nat$5429)) && â†“list_sorted_insert(Nil, S(nat$5429)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$5429)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$5429)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(xs) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$10318, tail$17331
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$10318, tail$17331), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && (!list_sorted(Cons(head$10318, tail$17331)) && ((â†“list_sorted_insert(Cons(head$10318, tail$17331), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$10318, tail$17331), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$10318, tail$17331)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(Z), Cons(head$10318, tail$17331))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                 Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                                 Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                                Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                                  Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                                    (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                  Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                  x out
[[34m  Info  [0m]                                                âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$10346, tail$19198, head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$10346, tail$19198)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$10346, tail$19198), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$10346, tail$19198), nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Cons(head$10346, tail$19198)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Cons(head$10346, tail$19198)), nat$2) && è°¶Cons(head$36, Cons(head$10346, tail$19198)) && â†“list_sorted_insert(Cons(head$10346, tail$19198), S(nat$2)) && â†“list_sorted_insert(Cons(head$10346, tail$19198), nat$2) && è°¶Cons(head$10346, tail$19198)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Cons(head$10346, tail$19198))) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Cons(head$10346, tail$19198)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10347: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$19199: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$10347, tail$19199) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$10348: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$19200: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$10348, tail$19200) && inactive(rec$254)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$10349: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$19201: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$10349, tail$19201) && inactive(rec$255)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9293
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9293))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$9293)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$9293)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9293)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$9293), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9301
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9301), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9308
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9308))
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$9308)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$9308)) && è°¶Nil && è°¶Z && è°¶S(nat$9308)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$9308), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9320
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(S(nat$9320), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9320), Nil), Z) && è°¶Cons(S(nat$9320), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶S(nat$9320)) && true)
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$9320), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$9323, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$9323)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), S(nat$9323))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$9323))
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, tail$17), S(S(nat$9323))) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$9323))) && è°¶S(S(nat$9323)) && â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$9323)) && â†“list_sorted_insert(tail$17, S(nat$9323)) && è°¶S(nat$9323)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(S(nat$9323)), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9488
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9488))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$9488)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$9488)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9488)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$9488), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5205, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$5205))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$5205)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$5205)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$5205)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$5205), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9493
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9493))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$9493)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$9493)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9493)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$9493), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9501
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9501), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$10586, tail$20080
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$10586, tail$20080), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10586, tail$20080)), Z) && è°¶Cons(Z, Cons(head$10586, tail$20080)) && â†“list_sorted_insert(Cons(head$10586, tail$20080), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10586, tail$20080)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Cons(head$10586, tail$20080))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10586, tail$20080)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9509
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9509), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5216, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$5216), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$5216), tail$17), Z) && è°¶Cons(S(nat$5216), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$5216)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$5216), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9518, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$9518))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$9518)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$9518)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9518)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$9518), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$9527, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9527), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$9527), tail$17), Z) && è°¶Cons(S(nat$9527), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9527)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$9527), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$2166)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                                           Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                                             (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166)) && true)
[[34m  Info  [0m]                                                           Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /3,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$2166)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$2166)] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                                             Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                                               (rec$15 == Nil) && {
[[34m  Info  [0m]                                                                 val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                                                 (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4099, S$0(nat$2)), list_sorted_insert$0(tail$4099, nat$2)] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                                                                                         Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                                                                                           (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099)) && true
[[34m  Info  [0m]                                                                                                         Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                         x out
[[34m  Info  [0m]                                                                                                       âŸ§ /10,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4099, S$0(nat$2)), list_sorted_insert$0(tail$4099, nat$2)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4099, S$0(nat$2)), list_sorted_insert$0(tail$4099, nat$2)] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                                                                                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                                                                                             val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                                                                                             val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                                                                                             (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                                                                                                           Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                           x out
[[34m  Info  [0m]                                                                                                         âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8979, n$0)] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                                                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                                            (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979)) && true
[[34m  Info  [0m]                                                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /8,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8979, n$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8979, n$0)] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                                                            Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                                              val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                                              (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                                                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                                            x out
[[34m  Info  [0m]                                                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$10607, tail$20744
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$10607, tail$20744), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$10607, tail$20744)), Z) && è°¶Cons(Z, Cons(head$10607, tail$20744)) && â†“list_sorted_insert(Cons(head$10607, tail$20744), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10607, tail$20744)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10607, tail$20744)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10608: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$20745: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Cons(head$10608, tail$20745) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9578, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, S(nat$9578))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), S(nat$9578)) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, S(nat$9578)) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶S(nat$9578)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$9578), Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$10613, tail$20904
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$10613, tail$20904), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$10613, tail$20904)), Z) && è°¶Cons(Z, Cons(head$10613, tail$20904)) && â†“list_sorted_insert(Cons(head$10613, tail$20904), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10613, tail$20904)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10613, tail$20904)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10614: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$20905: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Cons(head$10614, tail$20905) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$9621, tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9621), tail$33), Z) && è°¶Cons(S(nat$9621), tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶S(nat$9621)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9621), tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9626, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, S(nat$9626))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), S(nat$9626)) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, S(nat$9626)) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶S(nat$9626)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$9626), Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$9631, tail$33
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9631), tail$33), Z) && è°¶Cons(S(nat$9631), tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶S(nat$9631)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9631), tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$33
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$33
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$225'] âŸ¦ Î± tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$10619, tail$21064
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$10619, tail$21064), Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Cons(head$10619, tail$21064)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$10619, tail$21064)) && â†“list_sorted_insert(Cons(head$10619, tail$21064), Z) && è°¶Z && è°¶Cons(head$10619, tail$21064)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10619, tail$21064)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$290'] âŸ¦ Î± tail$225
[[34m  Info  [0m]                            Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$290'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$290'] - âŸ¦ Î± tail$225
[[34m  Info  [0m]                              Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$290'] - âŸ¦ Î± tail$225
[[34m  Info  [0m]                              Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                rec$290.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$10620: Nat = rec$290.head
[[34m  Info  [0m]                                  val tail$21065: NatList = rec$290.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z && è°¶Cons(head$10620, tail$21065) && inactive(rec$290)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$225
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                  (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$225
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$227'] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± tail$225
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290) && è°¶Z) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± nat$9639, tail$225
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9639), tail$225), Z) && è°¶Z && è°¶Cons(S(nat$9639), tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290) && è°¶S(nat$9639)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9639), tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$225
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                                  (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$225
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9642
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9642))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$9642)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$9642)) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶S(nat$9642)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$9642), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9646, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$9646))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$9646)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$9646)) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$9646)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$9646), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9649
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$9649))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$9649)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$9649)) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶S(nat$9649)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$9649), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$10172, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$10172))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$10172)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$10172)) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$10172)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$10172), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$10177, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$10177)), tail$17), Z) && è°¶Cons(S(S(nat$10177)), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(S(nat$10177)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$10177)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$10177)), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$10177)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$10683, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(S(nat$10683)), tail$17), n) && è°¶Cons(S(S(nat$10683)), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(S(nat$10683)) && è°¶S(nat$10683)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(S(nat$10683)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$10684, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$10684))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$10684)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$10684)) && è°¶S(nat$94) && è°¶S(nat$10684)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$10684), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$10840
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$10840))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$10840)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$10840)) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶S(nat$10840)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$10840), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, Nil$0), nat$692), list_sorted_insert$0(Nil$0, nat$692)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                                                                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                                                                                                   (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692)) && true
[[34m  Info  [0m]                                                                                                                 Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                 x out
[[34m  Info  [0m]                                                                                                               âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, Nil$0), nat$692), list_sorted_insert$0(Nil$0, nat$692)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$12, Nil$0), nat$692), list_sorted_insert$0(Nil$0, nat$692)] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                                                                                                   Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                                                                                                     val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                                                                                                     val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                                                                                                     (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                                                                                                                   Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                   x out
[[34m  Info  [0m]                                                                                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5852, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$5852), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$5852), Nil), n) && è°¶Cons(S(nat$5852), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$5852)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$5852), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5853, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$5853))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$5853)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$5853)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$5853)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$5853), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             !list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(Z, Nil)) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10832: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$21759: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z && è°¶Cons(head$10832, tail$21759) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                             !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               !list_sorted(Cons(head$12, Nil)) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10888: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$21771: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Cons(head$10888, tail$21771) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$11367, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(S(nat$11367), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$11367), Nil), n) && è°¶Cons(S(nat$11367), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$11367)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$11367), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$11368, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$11368))
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$11368)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$11368)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$11368)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$11368), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$11652, tail$21774, nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$11652, tail$21774), S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Cons(head$11652, tail$21774)), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$11652, tail$21774), nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Cons(head$11652, tail$21774)), S(nat$95)) && è°¶Cons(head$12, Cons(head$11652, tail$21774)) && â†“list_sorted_insert(Cons(head$11652, tail$21774), S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Cons(head$11652, tail$21774)), nat$95) && â†“list_sorted_insert(Cons(head$11652, tail$21774), nat$95) && è°¶Cons(head$11652, tail$21774)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$11652, tail$21774))) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Cons(head$11652, tail$21774)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$11653: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$21775: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Cons(head$11653, tail$21775) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$11654: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$21776: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Cons(head$11654, tail$21776) && inactive(rec$291)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$11655: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$21777: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Cons(head$11655, tail$21777) && inactive(rec$292)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$7167, tail$12630, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$7167, tail$12630), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$7167, tail$12630))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$7167, tail$12630)), n) && è°¶Cons(Z, Cons(head$7167, tail$12630)) && â†“list_sorted_insert(Cons(head$7167, tail$12630), n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$7167, tail$12630)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Cons(head$7167, tail$12630)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$5864, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$5864), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$5864), Nil), n) && è°¶Cons(S(nat$5864), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$5864)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$5864), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5865, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$5865))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$5865)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$5865)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$5865)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$5865), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$7200, tail$14375, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$7200, tail$14375), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Cons(head$7200, tail$14375))) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$7200, tail$14375)), Z) && è°¶Cons(head$12, Cons(head$7200, tail$14375)) && â†“list_sorted_insert(Cons(head$7200, tail$14375), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$7200, tail$14375)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(head$12, Cons(head$7200, tail$14375)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12528, tail$22297, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$12528, tail$22297), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$12528, tail$22297))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$12528, tail$22297)), n) && è°¶Cons(Z, Cons(head$12528, tail$22297)) && â†“list_sorted_insert(Cons(head$12528, tail$22297), n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$12528, tail$22297)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Cons(head$12528, tail$22297)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$11377, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$11377), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$11377), Nil), n) && è°¶Cons(S(nat$11377), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$11377)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$11377), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$11378, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$11378))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$11378)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$11378)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$11378)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$11378), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12559, tail$24040, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$12559, tail$24040), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(head$12, Cons(head$12559, tail$24040))) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$12559, tail$24040)), Z) && è°¶Cons(head$12, Cons(head$12559, tail$24040)) && â†“list_sorted_insert(Cons(head$12559, tail$24040), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$12559, tail$24040)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(head$12, Cons(head$12559, tail$24040)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                       val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                       val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                       (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                         val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                         val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                         !list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true)
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$1308, rec$764) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     !list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true)
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$36, rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4914, S$0(nat$2)), list_sorted_insert$0(tail$4914, nat$2)] âŸ¦ Î± head$2846, tail$4914, nat$2
[[34m  Info  [0m]                                                                                                         Î  val rec$15: NatList = list_sorted_insert(Cons(head$2846, tail$4914), nat$2)
[[34m  Info  [0m]                                                                                                           (rec$15 == Nil) && (!list_sorted(Cons(head$2846, tail$4914)) && ((â†“list_sorted_insert(Cons(head$2846, tail$4914), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2846, tail$4914), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$2846, tail$4914)) && true))
[[34m  Info  [0m]                                                                                                         Ï† content(Cons(S(nat$2), Cons(head$2846, tail$4914))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                         x out
[[34m  Info  [0m]                                                                                                       âŸ§ /10,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4914, S$0(nat$2)), list_sorted_insert$0(tail$4914, nat$2)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$4914, S$0(nat$2)), list_sorted_insert$0(tail$4914, nat$2)] - âŸ¦ Î± head$2846, tail$4914, nat$2
[[34m  Info  [0m]                                                                                                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$2846, tail$4914), nat$2)
[[34m  Info  [0m]                                                                                                             (rec$15 == Nil) && (!list_sorted(Cons(head$2846, tail$4914)) && {
[[34m  Info  [0m]                                                                                                               val rec$1223: NatList = list_sorted_insert(tail$4914, S(nat$2))
[[34m  Info  [0m]                                                                                                               val rec$1224: NatList = list_sorted_insert(tail$4914, nat$2)
[[34m  Info  [0m]                                                                                                               (â†“list_sorted_insert(Cons(head$2846, tail$4914), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2846, tail$4914), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$2846, tail$4914) && â†“list_sorted_insert(tail$4914, S(nat$2)) && â†“list_sorted_insert(tail$4914, nat$2)) && true
[[34m  Info  [0m]                                                                                                             })
[[34m  Info  [0m]                                                                                                           Ï† content(Cons(S(nat$2), Cons(head$2846, tail$4914))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                           x out
[[34m  Info  [0m]                                                                                                         âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2846, tail$4914, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2846, tail$4914), nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$2846, tail$4914)) && {
[[34m  Info  [0m]                                    val rec$1223: NatList = list_sorted_insert(tail$4914, S(nat$2))
[[34m  Info  [0m]                                    val rec$1224: NatList = list_sorted_insert(tail$4914, nat$2)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Cons(head$2846, tail$4914), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2846, tail$4914), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$2846, tail$4914) && â†“list_sorted_insert(tail$4914, S(nat$2)) && â†“list_sorted_insert(tail$4914, nat$2)) && true
[[34m  Info  [0m]                                  })
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$2846, tail$4914))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2846, tail$4914, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2846, tail$4914), nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$2846, tail$4914)) && {
[[34m  Info  [0m]                              val rec$1223: NatList = list_sorted_insert(tail$4914, S(nat$2))
[[34m  Info  [0m]                              val rec$1224: NatList = list_sorted_insert(tail$4914, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$2846, tail$4914), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2846, tail$4914), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$2846, tail$4914) && â†“list_sorted_insert(tail$4914, S(nat$2)) && â†“list_sorted_insert(tail$4914, nat$2)) && true
[[34m  Info  [0m]                            })
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$2846, tail$4914))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$13744, tail$25785
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$13744, tail$25785), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$13744, tail$25785), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$13744, tail$25785), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$13744, tail$25785)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$13744, tail$25785))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(xs, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(xs, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(xs, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), xs)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$13749, tail$25790
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$13749, tail$25790), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$13749, tail$25790), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$13749, tail$25790), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$13749, tail$25790)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$13749, tail$25790))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$12554
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$12554))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$12554))) && è°¶S(S(nat$12554)) && â†“list_sorted_insert(Nil, S(nat$12554)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$12554)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$12554)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$13876, tail$25916, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$13876, tail$25916), n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$13876, tail$25916)), n) && è°¶Cons(Z, Cons(head$13876, tail$25916)) && â†“list_sorted_insert(Cons(head$13876, tail$25916), n) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Cons(head$13876, tail$25916)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$13876, tail$25916)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$12937, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$12937), Nil), n) && è°¶Cons(S(nat$12937), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶S(nat$12937)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$12937), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$12938, head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$12938))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), S(nat$12938)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$12938)) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶S(nat$12938)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$12938), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$14483, tail$26765, head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$14483, tail$26765), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Cons(head$14483, tail$26765)), Z) && è°¶Cons(head$32, Cons(head$14483, tail$26765)) && â†“list_sorted_insert(Cons(head$14483, tail$26765), Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Cons(head$14483, tail$26765)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$14483, tail$26765)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), n) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, n) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$14636, tail$27485, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$14636, tail$27485), n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$14636, tail$27485)), n) && è°¶Cons(Z, Cons(head$14636, tail$27485)) && â†“list_sorted_insert(Cons(head$14636, tail$27485), n) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Cons(head$14636, tail$27485)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$14636, tail$27485)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$12943, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$12943), Nil), n) && è°¶Cons(S(nat$12943), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶S(nat$12943)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$12943), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$32, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), n) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$12944, head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$12944))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), S(nat$12944)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$12944)) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶S(nat$12944)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$12944), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± head$32, tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, tail$33), Z) && è°¶Cons(head$32, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$14641, tail$28205, head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$14641, tail$28205), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Cons(head$14641, tail$28205)), Z) && è°¶Cons(head$32, Cons(head$14641, tail$28205)) && â†“list_sorted_insert(Cons(head$14641, tail$28205), Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Cons(head$14641, tail$28205)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$14641, tail$28205)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$225'] âŸ¦ Î± head$227, tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, tail$225), Z) && è°¶Z && è°¶Cons(head$227, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$227
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$14971, tail$28755, head$227
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$14971, tail$28755), Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, Cons(head$14971, tail$28755)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$14971, tail$28755)) && â†“list_sorted_insert(Cons(head$14971, tail$28755), Z) && è°¶Nil && inactive(rec$290) && è°¶Cons(head$14971, tail$28755)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$14971, tail$28755)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$227
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$15122: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$29473: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Cons(head$15122, tail$29473) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$15128, tail$29478, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$15128, tail$29478), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Cons(head$15128, tail$29478)), n) && è°¶Cons(S(Z), Cons(head$15128, tail$29478)) && â†“list_sorted_insert(Cons(head$15128, tail$29478), n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Cons(head$15128, tail$29478)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$15128, tail$29478))) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Cons(head$15128, tail$29478)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$15131: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$30142: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Cons(head$15131, tail$30142) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$12949, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$12949)), Nil), n) && è°¶Cons(S(S(nat$12949)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(S(nat$12949)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$12949)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$12949)), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$12949)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$12950, nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$12950))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), S(nat$12950)) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, S(nat$12950)) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$12950)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(S(nat$12950), Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$15142, tail$30151, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$15142, tail$30151), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Cons(head$15142, tail$30151)), n) && è°¶Cons(S(Z), Cons(head$15142, tail$30151)) && â†“list_sorted_insert(Cons(head$15142, tail$30151), n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$15142, tail$30151)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$15142, tail$30151))) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Cons(head$15142, tail$30151)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$13458, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$13458)), Nil), n) && è°¶Cons(S(S(nat$13458)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(S(nat$13458)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$13458)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$13458)), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$13458)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$13459, nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$13459))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), S(nat$13459)) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, S(nat$13459)) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$13459)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(S(nat$13459), Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$15147, tail$30817, nat$94
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$15147, tail$30817), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Cons(head$15147, tail$30817)), Z) && è°¶Cons(S(nat$94), Cons(head$15147, tail$30817)) && â†“list_sorted_insert(Cons(head$15147, tail$30817), Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$15147, tail$30817)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$94), Cons(head$15147, tail$30817))) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Cons(head$15147, tail$30817)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$15150, tail$31890, nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$15150, tail$31890), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Cons(head$15150, tail$31890)), n) && è°¶Cons(S(nat$94), Cons(head$15150, tail$31890)) && â†“list_sorted_insert(Cons(head$15150, tail$31890), n) && è°¶S(nat$94) && è°¶Cons(head$15150, tail$31890)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Cons(head$15150, tail$31890)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$15151: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$31891: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Cons(head$15151, tail$31891) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$15155: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$32048: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Cons(head$15155, tail$32048) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$691'] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± nat$13967, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$13967)), Nil), n) && è°¶Cons(S(S(nat$13967)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(S(nat$13967)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$13967)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(S(nat$13967)), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(S(nat$13967)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$13968, nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$13968))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), S(nat$13968)) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, S(nat$13968)) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶S(nat$13968)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(S(nat$13968), Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9301), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9301), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9501), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9501), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12272, n$0)] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                                                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /8,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12272, n$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12272, n$0)] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                                                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                                               val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$16776, tail$32071
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$16776, tail$32071), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$16776, tail$32071)), Z) && è°¶Cons(Z, Cons(head$16776, tail$32071)) && â†“list_sorted_insert(Cons(head$16776, tail$32071), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16776, tail$32071)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16776, tail$32071)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$16777: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$32072: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Cons(head$16777, tail$32072) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14528, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$14528))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$14528)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$14528)) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$14528)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$14528), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$16782, tail$32231
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$16782, tail$32231), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$16782, tail$32231)), Z) && è°¶Cons(Z, Cons(head$16782, tail$32231)) && â†“list_sorted_insert(Cons(head$16782, tail$32231), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16782, tail$32231)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16782, tail$32231)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$16783: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$32232: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Cons(head$16783, tail$32232) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$14571, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$14571), tail$17), Z) && è°¶Cons(S(nat$14571), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$14571)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$14571), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14576, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$14576))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$14576)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$14576)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$14576)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$14576), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$14581, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$14581), tail$17), Z) && è°¶Cons(S(nat$14581), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$14581)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$14581), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                   (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                     (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                   (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                     (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                   (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                     (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$3639'] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$3639'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$3639'] - âŸ¦ Î± n
[[34m  Info  [0m]                               Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$3639'] - âŸ¦ Î± nat$14590, n
[[34m  Info  [0m]                               Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(S(nat$14590)), Nil), n) && è°¶Cons(S(S(nat$14590)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(S(nat$14590)) && è°¶S(nat$14590)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(S(S(nat$14590)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3639
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$3639), Nil), Z) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$3639) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14591, nat$3639
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$14591))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$3639), Nil), S(nat$14591)) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, S(nat$14591)) && è°¶Nil && è°¶S(nat$3639) && è°¶S(nat$14591)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$14591), Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$3639
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$3639), Nil), Z) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$3639) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$3639), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9139, Z$0)] âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                                                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                                            (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139)) && true
[[34m  Info  [0m]                                                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /6,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9139, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9139, Z$0)] - âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                                                            Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                                              val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                                              (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z)) && true
[[34m  Info  [0m]                                                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                                            x out
[[34m  Info  [0m]                                                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                  val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                            val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9285, Z$0)] âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                                                          Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                                            (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285)) && true
[[34m  Info  [0m]                                                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /6,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9285, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$9285, Z$0)] - âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                                                            Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                                              val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                                              (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z)) && true
[[34m  Info  [0m]                                                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                                            x out
[[34m  Info  [0m]                                                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                  val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                            val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$5920, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(S(nat$5920)), Nil)) && ((â†“list_sorted_insert(Cons(S(S(nat$5920)), Nil), n) && è°¶Cons(S(S(nat$5920)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(S(nat$5920)) && è°¶Nil && è°¶S(nat$5920)) && true)
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(S(nat$5920)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5921, nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$5921))
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), S(nat$5921)) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, S(nat$5921)) && è°¶S(nat$94) && è°¶Nil && è°¶S(nat$5921)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$5921), Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$6791, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(S(nat$6791)), tail$17)) && ((â†“list_sorted_insert(Cons(S(S(nat$6791)), tail$17), n) && è°¶Cons(S(S(nat$6791)), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(S(nat$6791)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$6791)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(S(nat$6791)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$6792, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$6792))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$6792)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$6792)) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶S(nat$6792)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$6792), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$691'] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± nat$8078, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                !list_sorted(Cons(S(S(nat$8078)), Nil)) && ((â†“list_sorted_insert(Cons(S(S(nat$8078)), Nil), n) && è°¶Cons(S(S(nat$8078)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(S(nat$8078)) && è°¶S(nat$8078)) && true)
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(S(nat$8078)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$8079, nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$8079))
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), S(nat$8079)) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, S(nat$8079)) && è°¶Nil && è°¶S(nat$691) && è°¶S(nat$8079)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$8079), Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                                   val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                                   val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                   (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                                     val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                                     val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                     !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true)
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(head$12, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$18373, tail$38060, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$18373, tail$38060), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$18373, tail$38060)), n) && è°¶Cons(Z, Cons(head$18373, tail$38060)) && â†“list_sorted_insert(Cons(head$18373, tail$38060), n) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Cons(head$18373, tail$38060)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$18373, tail$38060)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$15996, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$15996), Nil), n) && è°¶Cons(S(nat$15996), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$15996)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$15996), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$15997, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$15997))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$15997)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$15997)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$15997)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$15997), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$18998, tail$38927, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$18998, tail$38927), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$18998, tail$38927)), Z) && è°¶Cons(head$12, Cons(head$18998, tail$38927)) && â†“list_sorted_insert(Cons(head$18998, tail$38927), Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Cons(head$18998, tail$38927)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$18998, tail$38927)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), n) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /12,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$19151, tail$39647, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$19151, tail$39647), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$19151, tail$39647)), n) && è°¶Cons(Z, Cons(head$19151, tail$39647)) && â†“list_sorted_insert(Cons(head$19151, tail$39647), n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$19151, tail$39647)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$19151, tail$39647)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$16002, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$16002), Nil), n) && è°¶Cons(S(nat$16002), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$16002)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$16002), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$12, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), n) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16003, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$16003))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$16003)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$16003)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$16003)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$16003), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), Z) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$19156, tail$40367, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$19156, tail$40367), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$19156, tail$40367)), Z) && è°¶Cons(head$12, Cons(head$19156, tail$40367)) && â†“list_sorted_insert(Cons(head$19156, tail$40367), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$19156, tail$40367)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$19156, tail$40367)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$8915), tail$36)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                                       val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                       val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                       (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(S(nat$8915), tail$36)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                                         val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                         val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                         !list_sorted(Cons(S(nat$8915), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true)
[[34m  Info  [0m]                                                       Ï† content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$8915), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$2), rec$15) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† !list_sorted(Nil) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Nil)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                (rec$15 == Nil) && {
[[34m  Info  [0m]                                  val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† !list_sorted(Nil) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Nil)] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Nil)] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                    !list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                    !list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                              !list_sorted(Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true)
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$19313: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$41091: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639) && è°¶Cons(head$19313, tail$41091) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$3639, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$3639), Nil), n) && è°¶Cons(S(nat$3639), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$3639) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$3639), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true)
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(nat$94), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(nat$94), Nil)) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10325: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$17338: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Cons(head$10325, tail$17338) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$94), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$94), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(S$0(nat$94), tail$17), nat$837), list_sorted_insert$0(tail$17, nat$837)] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                                                                                                         Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                                                                                                           (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837)) && true
[[34m  Info  [0m]                                                                                                                         Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                         x out
[[34m  Info  [0m]                                                                                                                       âŸ§ /4,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(S$0(nat$94), tail$17), nat$837), list_sorted_insert$0(tail$17, nat$837)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(S$0(nat$94), tail$17), nat$837), list_sorted_insert$0(tail$17, nat$837)] - âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                                                                                                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                                                                                                             val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                                                                                                                             val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                                                                                                                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                                                                                                                           Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                           x out
[[34m  Info  [0m]                                                                                                                         âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                  val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                                  val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                            val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                            val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                              Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$17)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$17))] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$10336, tail$17375, nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$10336, tail$17375), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Cons(head$10336, tail$17375))) && ((â†“list_sorted_insert(Cons(S(nat$94), Cons(head$10336, tail$17375)), n) && è°¶Cons(S(nat$94), Cons(head$10336, tail$17375)) && â†“list_sorted_insert(Cons(head$10336, tail$17375), n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$10336, tail$17375)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(n, Cons(S(nat$94), Cons(head$10336, tail$17375)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691)) && true)
[[34m  Info  [0m]                           Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(nat$691), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               !list_sorted(Cons(S(nat$691), Nil)) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$10343: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$19195: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Cons(head$10343, tail$19195) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$691), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$691), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), n) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                              val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                              val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                              val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                              val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                               val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                               val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                                 val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                                 val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                               val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                               val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$12, Nil)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, Nil))] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                                 val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                                 val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            !list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                   val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                   val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                     val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                     val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                   val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                   val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                   (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                     val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                     val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                     (rec$291 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                   val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                   val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                   (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$12, tail$17)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$12, tail$17))] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                     val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                                     val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                     (rec$292 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && (!list_sorted(Cons(head$12, tail$17)) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9509), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9509), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$5219'] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$5219'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$5219'] - âŸ¦ Î± n
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$5219'] - âŸ¦ Î± nat$17339, n
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(S(nat$17339)), Nil), n) && è°¶Cons(S(S(nat$17339)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(S(nat$17339)) && è°¶S(nat$17339)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(S(S(nat$17339)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$5219
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$5219), Nil), Z) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$5219) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$17340, nat$5219
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$17340))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$5219), Nil), S(nat$17340)) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, S(nat$17340)) && è°¶Nil && è°¶S(nat$5219) && è°¶S(nat$17340)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$17340), Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$5219
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$5219), Nil), Z) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$5219) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$5219), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12432, Z$0)] âŸ¦ Î± head$6990, tail$12432, head$12
[[34m  Info  [0m]                                                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$6990, tail$12432), Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(head$12, Cons(head$6990, tail$12432)), Z) && è°¶Cons(head$12, Cons(head$6990, tail$12432)) && â†“list_sorted_insert(Cons(head$6990, tail$12432), Z) && è°¶Z && è°¶Cons(head$6990, tail$12432)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$6990, tail$12432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /6,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12432, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$12432, Z$0)] - âŸ¦ Î± head$6990, tail$12432, head$12
[[34m  Info  [0m]                                                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$6990, tail$12432), Z)
[[34m  Info  [0m]                                                               val rec$4662: NatList = list_sorted_insert(tail$12432, Z)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(head$12, Cons(head$6990, tail$12432)), Z) && è°¶Cons(head$12, Cons(head$6990, tail$12432)) && â†“list_sorted_insert(Cons(head$6990, tail$12432), Z) && è°¶Z && è°¶Cons(head$6990, tail$12432) && â†“list_sorted_insert(tail$12432, Z)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$6990, tail$12432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6990, tail$12432, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6990, tail$12432), Z)
[[34m  Info  [0m]                                  val rec$4662: NatList = list_sorted_insert(tail$12432, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Cons(head$6990, tail$12432)), Z) && è°¶Cons(head$12, Cons(head$6990, tail$12432)) && â†“list_sorted_insert(Cons(head$6990, tail$12432), Z) && è°¶Z && è°¶Cons(head$6990, tail$12432) && â†“list_sorted_insert(tail$12432, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$6990, tail$12432)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6990, tail$12432, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6990, tail$12432), Z)
[[34m  Info  [0m]                            val rec$4662: NatList = list_sorted_insert(tail$12432, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Cons(head$6990, tail$12432)), Z) && è°¶Cons(head$12, Cons(head$6990, tail$12432)) && â†“list_sorted_insert(Cons(head$6990, tail$12432), Z) && è°¶Z && è°¶Cons(head$6990, tail$12432) && â†“list_sorted_insert(tail$12432, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Cons(head$6990, tail$12432)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$1308'] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$1308'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$1308'] - âŸ¦ Î± tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$1755), Z) && è°¶Z && è°¶Cons(Z, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$1308'] - âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$17496), tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$1755), Z) && è°¶Z && è°¶Cons(Z, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$764) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$36), Z) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$18813), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$36), Z) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                 Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                                 Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(S(nat$94), Nil)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), Nil))] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                                 Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] âŸ¦ Î± n
[[34m  Info  [0m]                                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                          Ï† !list_sorted(Cons(S(Z), Nil)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                          x out
[[34m  Info  [0m]                                        âŸ§ /3,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), Nil))] - âŸ¦ Î± n
[[34m  Info  [0m]                                            Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                            Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$691
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] âŸ¦ Î± nat$691
[[34m  Info  [0m]                                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                                Ï† !list_sorted(Cons(S(nat$691), Nil)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$691), Nil))] - âŸ¦ Î± nat$691
[[34m  Info  [0m]                                                  Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                    (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                                  Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                  x out
[[34m  Info  [0m]                                                âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$691
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$691
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9301), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9301
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$9301), Nil)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9301
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9301), Nil))] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(S(nat$9301), Nil)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9301), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9301), Nil))] - âŸ¦ Î± nat$9301
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9301), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9301), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9301), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$9324), tail$17)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9324), tail$17))] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                       val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                                       val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                       (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(S(nat$9324), tail$17)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9324), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9324), tail$17))] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                                       Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                                         val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                                         val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                                         !list_sorted(Cons(S(nat$9324), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true)
[[34m  Info  [0m]                                                       Ï† content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$9324), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$95), rec$291) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9501), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9501
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$9501), Nil)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9501
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9501), Nil))] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(S(nat$9501), Nil)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9501), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9501), Nil))] - âŸ¦ Î± nat$9501
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9501), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9501), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9501), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$23353: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$48932: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219) && è°¶Cons(head$23353, tail$48932) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$5219, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$5219), Nil), n) && è°¶Cons(S(nat$5219), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(nat$5219) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$5219), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$1755'] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$1755'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$1755'] - âŸ¦ Î± head$1308
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$1755'] - âŸ¦ Î± head$23357, tail$48935, head$1308
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Cons(head$23357, tail$48935)), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(Cons(head$23357, tail$48935), S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(Cons(head$23357, tail$48935), Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, Cons(head$23357, tail$48935)), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Cons(head$23357, tail$48935)), Z) && è°¶Z && è°¶Cons(head$1308, Cons(head$23357, tail$48935)) && â†“list_sorted_insert(Cons(head$23357, tail$48935), S(Z)) && â†“list_sorted_insert(Cons(head$23357, tail$48935), Z) && è°¶Cons(head$23357, tail$48935)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, Cons(head$23357, tail$48935))) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, Cons(head$23357, tail$48935)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                             val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                             val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                               val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                               val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                               val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                               val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$23358: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$48936: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Cons(head$23358, tail$48936) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$764'] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$764'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$764'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$764'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                rec$764.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$23359: Nat = rec$764.head
[[34m  Info  [0m]                                  val tail$48937: NatList = rec$764.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Cons(head$23359, tail$48937) && inactive(rec$764)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$765'] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$765'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$765'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$765'] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                rec$765.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$23360: Nat = rec$765.head
[[34m  Info  [0m]                                  val tail$48938: NatList = rec$765.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Cons(head$23360, tail$48938) && inactive(rec$765)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7111, S$0(Z$0)), list_sorted_insert$0(tail$7111, Z$0)] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                                                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                                                                                       (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111)) && true)
[[34m  Info  [0m]                                                                                                     Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                     x out
[[34m  Info  [0m]                                                                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7111, S$0(Z$0)), list_sorted_insert$0(tail$7111, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7111, S$0(Z$0)), list_sorted_insert$0(tail$7111, Z$0)] - âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                                                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                                                                                         (rec$15 == Nil) && {
[[34m  Info  [0m]                                                                                                           val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                                                                                           val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                                                                                           (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                                                                                                         }
[[34m  Info  [0m]                                                                                                       Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                       x out
[[34m  Info  [0m]                                                                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                    val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                              val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, Nil), nat$2) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$21499, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$21499), Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$21499), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$21499), Nil), nat$2) && è°¶Cons(S(nat$21499), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶S(nat$21499)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$21499), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$21499), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, Nil), nat$2) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$21500, head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), S(nat$21500))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(S(nat$21500)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, S(nat$21500))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(S(nat$21500))) && è°¶S(S(nat$21500)) && â†“list_sorted_insert(Cons(head$36, Nil), S(nat$21500)) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(S(nat$21500))) && â†“list_sorted_insert(Nil, S(nat$21500)) && è°¶Nil && è°¶S(nat$21500)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(S(nat$21500)), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$23938, tail$51145, head$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$23938, tail$51145)), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$23938, tail$51145), S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$23938, tail$51145), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Cons(head$23938, tail$51145)), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Cons(head$23938, tail$51145)), Z) && è°¶Cons(head$36, Cons(head$23938, tail$51145)) && â†“list_sorted_insert(Cons(head$23938, tail$51145), S(Z)) && â†“list_sorted_insert(Cons(head$23938, tail$51145), Z) && è°¶Z && è°¶Cons(head$23938, tail$51145)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Cons(head$23938, tail$51145))) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Cons(head$23938, tail$51145)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$23939: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$51146: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Cons(head$23939, tail$51146) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$23940: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$51147: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Cons(head$23940, tail$51147) && inactive(rec$254)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$23941: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$51148: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Cons(head$23941, tail$51148) && inactive(rec$255)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$21664, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$21664), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$21664), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$21664), tail$36), nat$2) && è°¶Cons(S(nat$21664), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶S(nat$21664)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$21664), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$21664), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$21665, head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), S(nat$21665))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$21665)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$21665))
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(S(nat$21665))) && è°¶S(S(nat$21665)) && â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$21665)) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$21665))) && â†“list_sorted_insert(tail$36, S(nat$21665)) && è°¶Nil && inactive(rec$15) && è°¶S(nat$21665)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(S(nat$21665)), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$22136, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$22136), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$22136), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$22136), tail$36), nat$2) && è°¶Cons(S(nat$22136), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶S(nat$22136)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$22136), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$22136), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$22137, head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), S(nat$22137))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$22137)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$22137))
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(S(nat$22137))) && è°¶S(S(nat$22137)) && â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$22137)) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$22137))) && â†“list_sorted_insert(tail$36, S(nat$22137)) && è°¶Nil && inactive(rec$254) && è°¶S(nat$22137)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(S(nat$22137)), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$22461, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$22461), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$22461), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$22461), tail$36), nat$2) && è°¶Cons(S(nat$22461), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶S(nat$22461)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$22461), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$22461), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$22462, head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), S(nat$22462))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$22462)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$22462))
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(S(nat$22462))) && è°¶S(S(nat$22462)) && â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$22462)) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$22462))) && â†“list_sorted_insert(tail$36, S(nat$22462)) && è°¶Nil && inactive(rec$255) && è°¶S(nat$22462)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(S(nat$22462)), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7116, S$0(Z$0)), list_sorted_insert$0(tail$7116, Z$0)] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                                                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                                                                                       (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116)) && true)
[[34m  Info  [0m]                                                                                                     Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                     x out
[[34m  Info  [0m]                                                                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7116, S$0(Z$0)), list_sorted_insert$0(tail$7116, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$7116, S$0(Z$0)), list_sorted_insert$0(tail$7116, Z$0)] - âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                                                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                                                                                         (rec$15 == Nil) && {
[[34m  Info  [0m]                                                                                                           val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                                                                                           val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                                                                                           (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                                                                                                         }
[[34m  Info  [0m]                                                                                                       Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                       x out
[[34m  Info  [0m]                                                                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                    val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                              val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$5429)] âŸ¦ Î± nat$5429
[[34m  Info  [0m]                                                           Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$5429))
[[34m  Info  [0m]                                                             (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$5429))) && è°¶S(S(nat$5429)) && â†“list_sorted_insert(Nil, S(nat$5429)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$5429)) && true)
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(S(S(nat$5429)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /3,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$5429)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$5429)] - âŸ¦ Î± nat$5429
[[34m  Info  [0m]                                                             Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$5429))
[[34m  Info  [0m]                                                               (rec$15 == Nil) && {
[[34m  Info  [0m]                                                                 val rec$6263: NatList = list_sorted_insert(Nil, nat$5429)
[[34m  Info  [0m]                                                                 (â†“list_sorted_insert(Nil, S(S(nat$5429))) && è°¶S(S(nat$5429)) && â†“list_sorted_insert(Nil, S(nat$5429)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$5429) && â†“list_sorted_insert(Nil, nat$5429)) && true
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(S(S(nat$5429)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$5429
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$5429))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$6263: NatList = list_sorted_insert(Nil, nat$5429)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Nil, S(S(nat$5429))) && è°¶S(S(nat$5429)) && â†“list_sorted_insert(Nil, S(nat$5429)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$5429) && â†“list_sorted_insert(Nil, nat$5429)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(S(nat$5429)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$5429
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$5429))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$6263: NatList = list_sorted_insert(Nil, nat$5429)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(nat$5429))) && è°¶S(S(nat$5429)) && â†“list_sorted_insert(Nil, S(nat$5429)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$5429) && â†“list_sorted_insert(Nil, nat$5429)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(S(nat$5429)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9320
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$9320), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9320), Nil), Z) && è°¶Cons(S(nat$9320), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶S(nat$9320)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$9320), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9320
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(nat$9320), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9320), Nil), Z) && è°¶Cons(S(nat$9320), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶S(nat$9320)) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$9320), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), S(Z)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$22786, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$22786), tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$22786), tail$17), S(Z)) && è°¶Cons(S(nat$22786), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$22786), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶S(nat$22786)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$22786), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$22786), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), S(Z)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(Z, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$19432, Z$0)] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432)) && true)
[[34m  Info  [0m]                                                           Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$19432, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$19432, Z$0)] - âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                                               (rec$16 == Nil) && {
[[34m  Info  [0m]                                                                 val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                                                 (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && {
[[34m  Info  [0m]                                    val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && {
[[34m  Info  [0m]                              val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$17496), tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$17496), tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$8915'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$8915'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$8915'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                                 val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                 val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(Z), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$8915'] - âŸ¦ Î± nat$24173, tail$36, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(S(S(nat$24173)), tail$36), nat$2)
[[34m  Info  [0m]                                 val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                 val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(S(nat$24173)), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(S(nat$24173)), tail$36), nat$2) && è°¶Cons(S(S(nat$24173)), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(S(nat$24173)) && è°¶S(nat$24173)) && true
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(S(nat$24173)), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(S(nat$24173)), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /0,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$24174, nat$8915, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$24174))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$24174)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$24174))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(S(nat$24174))) && è°¶S(S(nat$24174)) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$24174)) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$24174))) && â†“list_sorted_insert(tail$36, S(nat$24174)) && è°¶S(nat$8915) && è°¶S(nat$24174)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(S(nat$24174)), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$24468: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$51674: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Cons(head$24468, tail$51674) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$24469: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$51675: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Cons(head$24469, tail$51675) && inactive(rec$254)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$24470: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$51676: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Cons(head$24470, tail$51676) && inactive(rec$255)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$18813), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$18813), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$24943, tail$51681, head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$24943, tail$51681)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$24943, tail$51681), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$24943, tail$51681), nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Cons(head$24943, tail$51681)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Cons(head$24943, tail$51681)), nat$2) && è°¶Cons(head$36, Cons(head$24943, tail$51681)) && â†“list_sorted_insert(Cons(head$24943, tail$51681), S(nat$2)) && â†“list_sorted_insert(Cons(head$24943, tail$51681), nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$24943, tail$51681)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Cons(head$24943, tail$51681))) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Cons(head$24943, tail$51681)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && (rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$24944: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$51682: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$24944, tail$51682) && inactive(rec$254)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$15 == Nil) && (rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$24945: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$51683: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Cons(head$24945, tail$51683) && inactive(rec$255)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$26040, tail$52778, head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$26040, tail$52778)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$26040, tail$52778), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$26040, tail$52778), nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Cons(head$26040, tail$52778)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Cons(head$26040, tail$52778)), nat$2) && è°¶Cons(head$36, Cons(head$26040, tail$52778)) && â†“list_sorted_insert(Cons(head$26040, tail$52778), S(nat$2)) && â†“list_sorted_insert(Cons(head$26040, tail$52778), nat$2) && è°¶Nil && inactive(rec$254) && è°¶Cons(head$26040, tail$52778)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Cons(head$26040, tail$52778))) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Cons(head$26040, tail$52778)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                             (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$254 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$254 == Nil) && (rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$26041: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$52779: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Cons(head$26041, tail$52779) && inactive(rec$15)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && (rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26042: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$52780: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Cons(head$26042, tail$52780) && inactive(rec$255)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$26242, tail$53457, head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$26242, tail$53457)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$26242, tail$53457), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$26242, tail$53457), nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Cons(head$26242, tail$53457)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Cons(head$26242, tail$53457)), nat$2) && è°¶Cons(head$36, Cons(head$26242, tail$53457)) && â†“list_sorted_insert(Cons(head$26242, tail$53457), S(nat$2)) && â†“list_sorted_insert(Cons(head$26242, tail$53457), nat$2) && è°¶Nil && inactive(rec$255) && è°¶Cons(head$26242, tail$53457)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, Cons(head$26242, tail$53457))) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Cons(head$26242, tail$53457)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                             (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$255 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$255 == Nil) && (rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$26243: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$53458: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Cons(head$26243, tail$53458) && inactive(rec$15)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && (rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26244: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$53459: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Cons(head$26244, tail$53459) && inactive(rec$254)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2166'] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                               (rec$15 == Nil) && {
[[34m  Info  [0m]                                 val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$2166'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2166'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                 (rec$15 == Nil) && {
[[34m  Info  [0m]                                   val rec$2940: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Nil, S(S(Z))) && è°¶S(S(Z)) && â†“list_sorted_insert(Nil, S(Z)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(Z)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$2166'] - âŸ¦ Î± nat$24860
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Nil, S(S(nat$24860)))
[[34m  Info  [0m]                                 (rec$15 == Nil) && {
[[34m  Info  [0m]                                   val rec$2940: NatList = list_sorted_insert(Nil, S(nat$24860))
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Nil, S(S(S(nat$24860)))) && è°¶S(S(S(nat$24860))) && â†“list_sorted_insert(Nil, S(S(nat$24860))) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(S(nat$24860)) && â†“list_sorted_insert(Nil, S(nat$24860)) && è°¶S(nat$24860)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(S(nat$24860))), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(Z))) && è°¶S(S(Z)) && â†“list_sorted_insert(Nil, S(Z)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(Z)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8975, S$0(Z$0)), list_sorted_insert$0(tail$8975, Z$0)] âŸ¦ Î± head$5966, tail$8975
[[34m  Info  [0m]                                                                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$5966, tail$8975), Z)
[[34m  Info  [0m]                                                                                                       (â†“list_sorted_insert(Cons(head$5966, tail$8975), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$5966, tail$8975), Z) && è°¶Z && è°¶Cons(head$5966, tail$8975)) && true
[[34m  Info  [0m]                                                                                                     Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$5966, tail$8975))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                     x out
[[34m  Info  [0m]                                                                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8975, S$0(Z$0)), list_sorted_insert$0(tail$8975, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$8975, S$0(Z$0)), list_sorted_insert$0(tail$8975, Z$0)] - âŸ¦ Î± head$5966, tail$8975
[[34m  Info  [0m]                                                                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$5966, tail$8975), Z)
[[34m  Info  [0m]                                                                                                         val rec$3503: NatList = list_sorted_insert(tail$8975, S(Z))
[[34m  Info  [0m]                                                                                                         val rec$3504: NatList = list_sorted_insert(tail$8975, Z)
[[34m  Info  [0m]                                                                                                         (â†“list_sorted_insert(Cons(head$5966, tail$8975), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$5966, tail$8975), Z) && è°¶Z && è°¶Cons(head$5966, tail$8975) && â†“list_sorted_insert(tail$8975, S(Z)) && â†“list_sorted_insert(tail$8975, Z)) && true
[[34m  Info  [0m]                                                                                                       Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$5966, tail$8975))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                       x out
[[34m  Info  [0m]                                                                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5966, tail$8975
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$5966, tail$8975), Z)
[[34m  Info  [0m]                                  val rec$3503: NatList = list_sorted_insert(tail$8975, S(Z))
[[34m  Info  [0m]                                  val rec$3504: NatList = list_sorted_insert(tail$8975, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$5966, tail$8975), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$5966, tail$8975), Z) && è°¶Z && è°¶Cons(head$5966, tail$8975) && â†“list_sorted_insert(tail$8975, S(Z)) && â†“list_sorted_insert(tail$8975, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$5966, tail$8975))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5966, tail$8975
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$5966, tail$8975), Z)
[[34m  Info  [0m]                            val rec$3503: NatList = list_sorted_insert(tail$8975, S(Z))
[[34m  Info  [0m]                            val rec$3504: NatList = list_sorted_insert(tail$8975, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$5966, tail$8975), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$5966, tail$8975), Z) && è°¶Z && è°¶Cons(head$5966, tail$8975) && â†“list_sorted_insert(tail$8975, S(Z)) && â†“list_sorted_insert(tail$8975, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$5966, tail$8975))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$2523'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$2523'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$2523'] - âŸ¦ Î± tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$4099), nat$2) && è°¶Cons(Z, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$2523'] - âŸ¦ Î± nat$25284, tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$25284), tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$25284), tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$25284), tail$4099), nat$2) && è°¶Cons(S(nat$25284), tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶S(nat$25284)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(S(nat$25284), tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$4099), nat$2) && è°¶Cons(Z, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$4099), nat$2) && è°¶Cons(Z, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$2523, tail$4099
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), Z)
[[34m  Info  [0m]                              val rec$1136: NatList = list_sorted_insert(tail$4099, S(Z))
[[34m  Info  [0m]                              val rec$1137: NatList = list_sorted_insert(tail$4099, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$2523, tail$4099), Z) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(Z)) && â†“list_sorted_insert(tail$4099, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$25285, head$2523, tail$4099
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), S(nat$25285))
[[34m  Info  [0m]                              val rec$1136: NatList = list_sorted_insert(tail$4099, S(S(nat$25285)))
[[34m  Info  [0m]                              val rec$1137: NatList = list_sorted_insert(tail$4099, S(nat$25285))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(S(nat$25285))) && è°¶S(S(nat$25285)) && â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$25285)) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(S(nat$25285))) && â†“list_sorted_insert(tail$4099, S(nat$25285)) && è°¶S(nat$25285)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$25285)), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, tail$4099
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), Z)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(Z))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$2523, tail$4099), Z) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(Z)) && â†“list_sorted_insert(tail$4099, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, tail$4099
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), Z)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(Z))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$2523, tail$4099), Z) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(Z)) && â†“list_sorted_insert(tail$4099, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$5971'] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$5971'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$5971'] - âŸ¦ Î± tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$8979)), n) && è°¶Cons(Z, Cons(Z, tail$8979)) && â†“list_sorted_insert(Cons(Z, tail$8979), n) && è°¶Z && è°¶Cons(Z, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$5971'] - âŸ¦ Î± nat$25441, tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(S(nat$25441), tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(S(nat$25441), tail$8979)), n) && è°¶Cons(Z, Cons(S(nat$25441), tail$8979)) && â†“list_sorted_insert(Cons(S(nat$25441), tail$8979), n) && è°¶Z && è°¶Cons(S(nat$25441), tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶S(nat$25441)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(S(nat$25441), tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$8979)), n) && è°¶Cons(Z, Cons(Z, tail$8979)) && â†“list_sorted_insert(Cons(Z, tail$8979), n) && è°¶Z && è°¶Cons(Z, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$8979, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$8979), n)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$8979)), n) && è°¶Cons(Z, Cons(Z, tail$8979)) && â†“list_sorted_insert(Cons(Z, tail$8979), n) && è°¶Z && è°¶Cons(Z, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$5971, tail$8979
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), Z)
[[34m  Info  [0m]                              val rec$2941: NatList = list_sorted_insert(tail$8979, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), Z) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), Z) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25442, head$5971, tail$8979
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), S(nat$25442))
[[34m  Info  [0m]                              val rec$2941: NatList = list_sorted_insert(tail$8979, S(nat$25442))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), S(nat$25442)) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), S(nat$25442)) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, S(nat$25442)) && è°¶S(nat$25442)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$25442), Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5971, tail$8979
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), Z)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), Z) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), Z) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5971, tail$8979
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), Z)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), Z) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), Z) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20904, Z$0)] âŸ¦ Î± head$10613, tail$20904
[[34m  Info  [0m]                                                           Î  val rec$98: NatList = list_sorted_insert(Cons(head$10613, tail$20904), Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(Z, Cons(head$10613, tail$20904)), Z) && è°¶Cons(Z, Cons(head$10613, tail$20904)) && â†“list_sorted_insert(Cons(head$10613, tail$20904), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10613, tail$20904)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10613, tail$20904)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20904, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20904, Z$0)] - âŸ¦ Î± head$10613, tail$20904
[[34m  Info  [0m]                                                             Î  val rec$98: NatList = list_sorted_insert(Cons(head$10613, tail$20904), Z)
[[34m  Info  [0m]                                                               val rec$7386: NatList = list_sorted_insert(tail$20904, Z)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(Z, Cons(head$10613, tail$20904)), Z) && è°¶Cons(Z, Cons(head$10613, tail$20904)) && â†“list_sorted_insert(Cons(head$10613, tail$20904), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10613, tail$20904) && â†“list_sorted_insert(tail$20904, Z)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10613, tail$20904)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10613, tail$20904
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$10613, tail$20904), Z)
[[34m  Info  [0m]                                  val rec$7386: NatList = list_sorted_insert(tail$20904, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$10613, tail$20904)), Z) && è°¶Cons(Z, Cons(head$10613, tail$20904)) && â†“list_sorted_insert(Cons(head$10613, tail$20904), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10613, tail$20904) && â†“list_sorted_insert(tail$20904, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10613, tail$20904)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10613, tail$20904
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$10613, tail$20904), Z)
[[34m  Info  [0m]                            val rec$7386: NatList = list_sorted_insert(tail$20904, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$10613, tail$20904)), Z) && è°¶Cons(Z, Cons(head$10613, tail$20904)) && â†“list_sorted_insert(Cons(head$10613, tail$20904), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10613, tail$20904) && â†“list_sorted_insert(tail$20904, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10613, tail$20904)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25520, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$25520))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$25520)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$25520)) && è°¶S(Z) && è°¶Z && è°¶S(nat$25520)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$25520), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                            val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                            val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$94), tail$17)) || list_sorted(out)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                              val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                              val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                              val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                              val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                                     val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                                                     val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                                                     (â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true
[[34m  Info  [0m]                                                   Ï† !list_sorted(Cons(S(nat$94), tail$17)) && content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$94), tail$17))] - âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                                     Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                                       val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                                                       val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                                                       !list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true)
[[34m  Info  [0m]                                                     Ï† content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$837, nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$837))
[[34m  Info  [0m]                                  val rec$1225: NatList = list_sorted_insert(Cons(S(nat$94), tail$17), nat$837)
[[34m  Info  [0m]                                  val rec$1226: NatList = list_sorted_insert(tail$17, nat$837)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$837)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$837)) && è°¶S(nat$94) && è°¶S(nat$837) && â†“list_sorted_insert(Cons(S(nat$94), tail$17), nat$837) && â†“list_sorted_insert(tail$17, nat$837)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$837), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$94), rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25532, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$25532))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$25532)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$25532)) && è°¶S(Z) && è°¶Z && è°¶S(nat$25532)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$25532), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$25534, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(S(nat$25534)), tail$17), Z) && è°¶Cons(S(S(nat$25534)), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(S(nat$25534)) && è°¶Z && è°¶S(nat$25534)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(S(S(nat$25534)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$692'] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                              val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                              val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$692'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$692'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                                val rec$1003: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶Nil && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$692'] - âŸ¦ Î± nat$25692, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(S(nat$25692)))
[[34m  Info  [0m]                                val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), S(nat$25692))
[[34m  Info  [0m]                                val rec$1003: NatList = list_sorted_insert(Nil, S(nat$25692))
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), S(S(nat$25692))) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(S(nat$25692))) && è°¶Nil && è°¶S(S(nat$25692)) && â†“list_sorted_insert(Cons(head$12, Nil), S(nat$25692)) && â†“list_sorted_insert(Nil, S(nat$25692)) && è°¶S(nat$25692)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(S(nat$25692)), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶Nil && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶Nil && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                              val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                              val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$692
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                val rec$1002: NatList = list_sorted_insert(Cons(Z, Nil), nat$692)
[[34m  Info  [0m]                                val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), S(nat$692)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(Z, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$25693, nat$692
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                val rec$1002: NatList = list_sorted_insert(Cons(S(nat$25693), Nil), nat$692)
[[34m  Info  [0m]                                val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$25693), Nil), S(nat$692)) && è°¶Cons(S(nat$25693), Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(S(nat$25693), Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶S(nat$25693)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$25693), Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(S(nat$25693), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(Z, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), S(nat$692)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(Z, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14757
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$14757))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$14757)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$14757)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$14757)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$14757), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$14778
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$14778), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$14778), Nil), Z) && è°¶Cons(S(nat$14778), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$14778)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$14778), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25863
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$25863))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$25863)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$25863)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25863)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$25863), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$25879
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$25879), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$25879), Nil), Z) && è°¶Cons(S(nat$25879), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25879)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$25879), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25890
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$25890))
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$25890)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$25890)) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$25890)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$25890), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$25906
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(S(nat$25906), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$25906), Nil), Z) && è°¶Cons(S(nat$25906), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$25906)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$25906), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$25917
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$25917))
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$25917)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$25917)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25917)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$25917), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$12, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$25933
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(S(nat$25933), Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$25933), Nil), Z) && è°¶Cons(S(nat$25933), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25933)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$25933), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(Z, Nil)) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$26465, tail$54136, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$26465, tail$54136), S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Cons(head$26465, tail$54136)), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$26465, tail$54136), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$12, Cons(head$26465, tail$54136)), S(Z)) && è°¶Cons(head$12, Cons(head$26465, tail$54136)) && â†“list_sorted_insert(Cons(head$26465, tail$54136), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Cons(head$26465, tail$54136)), Z) && â†“list_sorted_insert(Cons(head$26465, tail$54136), Z) && è°¶Z && è°¶Cons(head$26465, tail$54136)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$26465, tail$54136))) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Cons(head$26465, tail$54136)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$26466: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$54137: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Cons(head$26466, tail$54137) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26467: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$54138: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Cons(head$26467, tail$54138) && inactive(rec$291)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26468: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$54139: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Cons(head$26468, tail$54139) && inactive(rec$292)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$25936, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(S(nat$25936)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), S(nat$25936))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(Nil, S(nat$25936))
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, Nil), S(S(nat$25936))) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(S(nat$25936))) && è°¶S(S(nat$25936)) && â†“list_sorted_insert(Cons(head$12, Nil), S(nat$25936)) && â†“list_sorted_insert(Nil, S(nat$25936)) && è°¶Nil && è°¶S(nat$25936)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(S(nat$25936)), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, Nil), S(Z)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, Nil), Z) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Nil), S(nat$95)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$25937, nat$95
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$25937), Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$25937), Nil), S(nat$95)) && è°¶Cons(S(nat$25937), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$25937), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶S(nat$25937)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$25937), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$25937), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Nil), S(nat$95)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$26101, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$26101)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), S(nat$26101))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$26101))
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(S(nat$26101))) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$26101))) && è°¶S(S(nat$26101)) && â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$26101)) && â†“list_sorted_insert(tail$17, S(nat$26101)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$26101)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(S(nat$26101)), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$26102, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$26102), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$26102), tail$17), S(nat$95)) && è°¶Cons(S(nat$26102), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$26102), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶S(nat$26102)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$26102), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$26102), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$26542, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$26542)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), S(nat$26542))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$26542))
[[34m  Info  [0m]                               (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(S(nat$26542))) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$26542))) && è°¶S(S(nat$26542)) && â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$26542)) && â†“list_sorted_insert(tail$17, S(nat$26542)) && è°¶Nil && inactive(rec$291) && è°¶S(nat$26542)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(S(nat$26542)), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$26543, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$26543), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$26543), tail$17), S(nat$95)) && è°¶Cons(S(nat$26543), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$26543), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶S(nat$26543)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$26543), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$26543), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$27014, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$27014)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), S(nat$27014))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$27014))
[[34m  Info  [0m]                               (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(S(nat$27014))) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$27014))) && è°¶S(S(nat$27014)) && â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$27014)) && â†“list_sorted_insert(tail$17, S(nat$27014)) && è°¶Nil && inactive(rec$292) && è°¶S(nat$27014)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(S(nat$27014)), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$27015, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$27015), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$27015), tail$17), S(nat$95)) && è°¶Cons(S(nat$27015), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$27015), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶S(nat$27015)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$27015), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$27015), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$15936
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$15936))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$15936)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$15936)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$15936)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$15936), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$18217, tail$34459
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$18217, tail$34459), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$18217, tail$34459))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$18217, tail$34459)), Z) && è°¶Cons(Z, Cons(head$18217, tail$34459)) && â†“list_sorted_insert(Cons(head$18217, tail$34459), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$18217, tail$34459)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$18217, tail$34459)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$27434
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$27434))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$27434)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$27434)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27434)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$27434), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$26789, tail$56242
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$26789, tail$56242), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$26789, tail$56242))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$26789, tail$56242)), Z) && è°¶Cons(Z, Cons(head$26789, tail$56242)) && â†“list_sorted_insert(Cons(head$26789, tail$56242), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$26789, tail$56242)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$26789, tail$56242)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$15949
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$15949))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$15949)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$15949)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$15949)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$15949), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$15970
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$15970), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$15970), Nil), Z) && è°¶Cons(S(nat$15970), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$15970)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$15970), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$27445
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$27445))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$27445)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$27445)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27445)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$27445), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$27461
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27461), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27461), Nil), Z) && è°¶Cons(S(nat$27461), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27461)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$27461), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$18228, tail$36204
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$18228, tail$36204), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$18228, tail$36204))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$18228, tail$36204)), Z) && è°¶Cons(Z, Cons(head$18228, tail$36204)) && â†“list_sorted_insert(Cons(head$18228, tail$36204), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$18228, tail$36204)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$18228, tail$36204)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9509), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9509
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$9509), Nil)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$9509
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9509), Nil))] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                                                 Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(S(nat$9509), Nil)) && content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9509), Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$9509), Nil))] - âŸ¦ Î± nat$9509
[[34m  Info  [0m]                                                   Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                     (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9509), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9509), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9509
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$9509), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$9509), Nil), Z) && è°¶Cons(S(nat$9509), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$9509)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$9509), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$15991
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$15991), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$15991), Nil), Z) && è°¶Cons(S(nat$15991), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$15991)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$15991), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$26822, tail$58009
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$26822, tail$58009), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$26822, tail$58009))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$26822, tail$58009)), Z) && è°¶Cons(Z, Cons(head$26822, tail$58009)) && â†“list_sorted_insert(Cons(head$26822, tail$58009), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$26822, tail$58009)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$26822, tail$58009)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$27477
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27477), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27477), Nil), Z) && è°¶Cons(S(nat$27477), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27477)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$27477), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$27488
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$27488))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$27488)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$27488)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27488)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$27488), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$26831, tail$59367
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$26831, tail$59367), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$26831, tail$59367))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$26831, tail$59367)), Z) && è°¶Cons(Z, Cons(head$26831, tail$59367)) && â†“list_sorted_insert(Cons(head$26831, tail$59367), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$26831, tail$59367)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$26831, tail$59367)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$27499
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$27499))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$27499)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$27499)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27499)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$27499), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$27515
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27515), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27515), Nil), Z) && è°¶Cons(S(nat$27515), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27515)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$27515), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(Z, tail$17)) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$26840, tail$61110
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$26840, tail$61110), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Cons(head$26840, tail$61110))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$26840, tail$61110)), Z) && è°¶Cons(Z, Cons(head$26840, tail$61110)) && â†“list_sorted_insert(Cons(head$26840, tail$61110), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$26840, tail$61110)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Cons(head$26840, tail$61110)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(head$12, Nil)) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$27531
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27531), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27531), Nil), Z) && è°¶Cons(S(nat$27531), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27531)) && true))
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(nat$27531), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(Z, Nil)) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(S(Z)), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± nat$8915, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$8915), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), Nil), nat$2) && è°¶Cons(S(nat$8915), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶S(nat$8915) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$26843, tail$62440, nat$8915, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), Cons(head$26843, tail$62440)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$26843, tail$62440), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$26843, tail$62440), nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$8915), Cons(head$26843, tail$62440)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), Cons(head$26843, tail$62440)), nat$2) && è°¶Cons(S(nat$8915), Cons(head$26843, tail$62440)) && â†“list_sorted_insert(Cons(head$26843, tail$62440), S(nat$2)) && â†“list_sorted_insert(Cons(head$26843, tail$62440), nat$2) && è°¶S(nat$8915) && è°¶Cons(head$26843, tail$62440)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), Cons(head$26843, tail$62440))) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), Cons(head$26843, tail$62440)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$8915), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), Nil), nat$2) && è°¶Cons(S(nat$8915), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶S(nat$8915) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), Nil), nat$2) && è°¶Cons(S(nat$8915), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶S(nat$8915) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$26844: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$62441: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Cons(head$26844, tail$62441) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26845: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$62442: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Cons(head$26845, tail$62442) && inactive(rec$254)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$26846: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$62443: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Cons(head$26846, tail$62443) && inactive(rec$255)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$8915, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), nat$2) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$8915) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$21499, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$21499), Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$21499), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$21499), Nil), nat$2) && è°¶Cons(S(nat$21499), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶S(nat$21499)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$21499), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$21499), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$21499, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$21499), Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$21499), Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$21499), Nil), nat$2) && è°¶Cons(S(nat$21499), Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶S(nat$21499)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$21499), Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(nat$21499), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$36'] - âŸ¦ Î± nat$27916, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$27916), tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$27916), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(nat$27916), tail$36), nat$2) && è°¶Cons(S(nat$27916), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(nat$27916)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(S(nat$27916), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$27917, head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), S(nat$27917))
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(S(nat$27917)))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, S(nat$27917))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(S(nat$27917))) && è°¶S(S(nat$27917)) && â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$27917)) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(S(nat$27917))) && â†“list_sorted_insert(tail$36, S(nat$27917)) && è°¶S(nat$27917)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(S(nat$27917)), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$2940'] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                               (rec$15 == Nil) && {
[[34m  Info  [0m]                                 val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$2940'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$2940'] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                 (rec$15 == Nil) && {
[[34m  Info  [0m]                                   val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                   (rec$2940 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166) && è°¶Nil && inactive(rec$2940)) && true)
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$2940'] - âŸ¦ Î± nat$2166
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                 (rec$15 == Nil) && {
[[34m  Info  [0m]                                   val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                   rec$2940.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                     val head$26852: Nat = rec$2940.head
[[34m  Info  [0m]                                     val tail$62957: NatList = rec$2940.tail
[[34m  Info  [0m]                                     (â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166) && è°¶Cons(head$26852, tail$62957) && inactive(rec$2940)) && true
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                                    (rec$2940 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166) && è°¶Nil && inactive(rec$2940)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2166
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$2166))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2940: NatList = list_sorted_insert(Nil, nat$2166)
[[34m  Info  [0m]                              (rec$2940 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$2166))) && è°¶S(S(nat$2166)) && â†“list_sorted_insert(Nil, S(nat$2166)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$2166) && â†“list_sorted_insert(Nil, nat$2166) && è°¶Nil && inactive(rec$2940)) && true)
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Nil) || list_sorted(out)) && content(Cons(S(S(nat$2166)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$4099'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$4099'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$4099'] - âŸ¦ Î± head$2523, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$2523, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, Nil), nat$2) && è°¶Cons(head$2523, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$4099'] - âŸ¦ Î± head$26855, tail$62960, head$2523, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, Cons(head$26855, tail$62960)), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(Cons(head$26855, tail$62960), S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(Cons(head$26855, tail$62960), nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$2523, Cons(head$26855, tail$62960)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, Cons(head$26855, tail$62960)), nat$2) && è°¶Cons(head$2523, Cons(head$26855, tail$62960)) && â†“list_sorted_insert(Cons(head$26855, tail$62960), S(nat$2)) && â†“list_sorted_insert(Cons(head$26855, tail$62960), nat$2) && è°¶Cons(head$26855, tail$62960)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, Cons(head$26855, tail$62960)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$2523, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, Nil), nat$2) && è°¶Cons(head$2523, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, Nil), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$2523, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, Nil), nat$2) && è°¶Cons(head$2523, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                             val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                             val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                               val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                               val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                               val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                               val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$26856: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$62961: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Cons(head$26856, tail$62961) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$1136'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                               val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                               val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$1136'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$1136'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                 val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                 val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                 (rec$1136 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1136)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$1136'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                 val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                 val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                 rec$1136.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$26857: Nat = rec$1136.head
[[34m  Info  [0m]                                   val tail$62962: NatList = rec$1136.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Cons(head$26857, tail$62962) && inactive(rec$1136)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (rec$1136 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1136)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (rec$1136 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1136)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$1137'] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                               val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                               val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$1137'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$1137'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                 val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                 val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                 (rec$1137 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1137)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$1137'] - âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                 val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                 val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                 rec$1137.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$26858: Nat = rec$1137.head
[[34m  Info  [0m]                                   val tail$62963: NatList = rec$1137.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Cons(head$26858, tail$62963) && inactive(rec$1137)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                                  val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                                  val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                                  (rec$1137 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1137)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$2523, tail$4099, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$2523, tail$4099), nat$2)
[[34m  Info  [0m]                            val rec$1136: NatList = list_sorted_insert(tail$4099, S(nat$2))
[[34m  Info  [0m]                            val rec$1137: NatList = list_sorted_insert(tail$4099, nat$2)
[[34m  Info  [0m]                            (rec$1137 == Nil) && ((â†“list_sorted_insert(Cons(head$2523, tail$4099), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$2523, tail$4099), nat$2) && è°¶Cons(head$2523, tail$4099) && â†“list_sorted_insert(tail$4099, S(nat$2)) && â†“list_sorted_insert(tail$4099, nat$2) && è°¶Nil && inactive(rec$1137)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$2523, tail$4099))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$8979'] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$8979'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$8979'] - âŸ¦ Î± head$5971, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, Nil), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5971, Nil)), n) && è°¶Cons(Z, Cons(head$5971, Nil)) && â†“list_sorted_insert(Cons(head$5971, Nil), n) && è°¶Z && è°¶Cons(head$5971, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, Nil)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$8979'] - âŸ¦ Î± head$27016, tail$63120, head$5971, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, Cons(head$27016, tail$63120)), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(Cons(head$27016, tail$63120), n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5971, Cons(head$27016, tail$63120))), n) && è°¶Cons(Z, Cons(head$5971, Cons(head$27016, tail$63120))) && â†“list_sorted_insert(Cons(head$5971, Cons(head$27016, tail$63120)), n) && è°¶Z && è°¶Cons(head$5971, Cons(head$27016, tail$63120)) && â†“list_sorted_insert(Cons(head$27016, tail$63120), n) && è°¶Cons(head$27016, tail$63120)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, Cons(head$27016, tail$63120))))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5971, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, Nil), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5971, Nil)), n) && è°¶Cons(Z, Cons(head$5971, Nil)) && â†“list_sorted_insert(Cons(head$5971, Nil), n) && è°¶Z && è°¶Cons(head$5971, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, Nil)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$98) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$98'] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                           Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                             val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                               val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                               (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$98'] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                               val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                               rec$98.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$27017: Nat = rec$98.head
[[34m  Info  [0m]                                 val tail$63121: NatList = rec$98.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Cons(head$27017, tail$63121) && inactive(rec$98)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$2941'] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                             Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                               val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$2941'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$2941'] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                               Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                 val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                 (rec$2941 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$2941)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$2941'] - âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                               Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                 val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                 rec$2941.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$27018: Nat = rec$2941.head
[[34m  Info  [0m]                                   val tail$63122: NatList = rec$2941.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Cons(head$27018, tail$63122) && inactive(rec$2941)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                                  val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                                  (rec$2941 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$2941)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5971, tail$8979, n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5971, tail$8979), n)
[[34m  Info  [0m]                            val rec$2941: NatList = list_sorted_insert(tail$8979, n)
[[34m  Info  [0m]                            (rec$2941 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$5971, tail$8979)), n) && è°¶Cons(Z, Cons(head$5971, tail$8979)) && â†“list_sorted_insert(Cons(head$5971, tail$8979), n) && è°¶Z && è°¶Cons(head$5971, tail$8979) && â†“list_sorted_insert(tail$8979, n) && è°¶Nil && inactive(rec$2941)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$5971, tail$8979)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27194, tail$63323
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27194, tail$63323), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27194, tail$63323)), Z) && è°¶Cons(Z, Cons(head$27194, tail$63323)) && â†“list_sorted_insert(Cons(head$27194, tail$63323), Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Cons(head$27194, tail$63323)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27194, tail$63323)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28586
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$28586))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$28586)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$28586)) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶S(nat$28586)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$28586), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27199, tail$64043
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27199, tail$64043), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27199, tail$64043)), Z) && è°¶Cons(Z, Cons(head$27199, tail$64043)) && â†“list_sorted_insert(Cons(head$27199, tail$64043), Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Cons(head$27199, tail$64043)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27199, tail$64043)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28591
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$28591))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$28591)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$28591)) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶S(nat$28591)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$28591), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$28599
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$28599), Nil), Z) && è°¶Cons(S(nat$28599), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶S(nat$28599)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$28599), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27206, tail$64765
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27206, tail$64765), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27206, tail$64765)), Z) && è°¶Cons(Z, Cons(head$27206, tail$64765)) && â†“list_sorted_insert(Cons(head$27206, tail$64765), Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Cons(head$27206, tail$64765)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27206, tail$64765)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27211, tail$65485
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27211, tail$65485), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27211, tail$65485)), Z) && è°¶Cons(Z, Cons(head$27211, tail$65485)) && â†“list_sorted_insert(Cons(head$27211, tail$65485), Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Cons(head$27211, tail$65485)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27211, tail$65485)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$28607
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$28607), Nil), Z) && è°¶Cons(S(nat$28607), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶S(nat$28607)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$28607), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28612
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$28612))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$28612)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$28612)) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶S(nat$28612)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$28612), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27216, tail$66205
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27216, tail$66205), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27216, tail$66205)), Z) && è°¶Cons(Z, Cons(head$27216, tail$66205)) && â†“list_sorted_insert(Cons(head$27216, tail$66205), Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Cons(head$27216, tail$66205)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27216, tail$66205)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28617
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$28617))
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$28617)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$28617)) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶S(nat$28617)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$28617), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$28625
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$28625), Nil), Z) && è°¶Cons(S(nat$28625), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶S(nat$28625)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$28625), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$33'] âŸ¦ Î± tail$33
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(tail$33, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$33), Z) && è°¶Cons(Z, tail$33) && â†“list_sorted_insert(tail$33, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$33))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$33'] - âŸ¦ Î± head$27221, tail$66925
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$27221, tail$66925), Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27221, tail$66925)), Z) && è°¶Cons(Z, Cons(head$27221, tail$66925)) && â†“list_sorted_insert(Cons(head$27221, tail$66925), Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Cons(head$27221, tail$66925)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27221, tail$66925)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(head$32, Nil), Z) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$28633
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$28633), Nil), Z) && è°¶Cons(S(nat$28633), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶S(nat$28633)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$28633), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$98 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$98) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$225'] âŸ¦ Î± tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Z && è°¶Nil && inactive(rec$290)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$27228, tail$67647
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$27228, tail$67647), Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27228, tail$67647)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$27228, tail$67647)) && â†“list_sorted_insert(Cons(head$27228, tail$67647), Z) && è°¶Z && è°¶Nil && inactive(rec$290) && è°¶Cons(head$27228, tail$67647)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27228, tail$67647)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$225'] âŸ¦ Î± tail$225
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(tail$225, Z)
[[34m  Info  [0m]                               (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$225), Z) && è°¶Z && è°¶Cons(Z, tail$225) && â†“list_sorted_insert(tail$225, Z) && è°¶Nil && inactive(rec$290) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$225))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$225'] - âŸ¦ Î± head$27233, tail$68367
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$27233, tail$68367), Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$27233, tail$68367)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$27233, tail$68367)) && â†“list_sorted_insert(Cons(head$27233, tail$68367), Z) && è°¶Nil && inactive(rec$290) && è°¶Z && è°¶Cons(head$27233, tail$68367)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$27233, tail$68367)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$227'] âŸ¦ Î± head$227
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(head$227, Nil), Z) && è°¶Z && è°¶Cons(head$227, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± nat$28641
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$28641), Nil), Z) && è°¶Z && è°¶Cons(S(nat$28641), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil && è°¶S(nat$28641)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$28641), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$290 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Z && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$290) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28646
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$28646))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$28646)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$28646)) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶S(nat$28646)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$28646), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28651
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$28651))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$28651)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$28651)) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$28651)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$28651), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27240, tail$69089
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27240, tail$69089), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Cons(head$27240, tail$69089)), Z) && è°¶Cons(S(Z), Cons(head$27240, tail$69089)) && â†“list_sorted_insert(Cons(head$27240, tail$69089), Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$27240, tail$69089)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$27240, tail$69089))) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Cons(head$27240, tail$69089)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27243, tail$70162, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27243, tail$70162), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Cons(head$27243, tail$70162)), n) && è°¶Cons(S(Z), Cons(head$27243, tail$70162)) && â†“list_sorted_insert(Cons(head$27243, tail$70162), n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$27243, tail$70162)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Cons(head$27243, tail$70162)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$27244: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$70163: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$27244, tail$70163) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28656
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$28656))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$28656)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$28656)) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$28656)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$28656), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$28661
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$28661))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$28661)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$28661)) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$28661)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$28661), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± ()
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$28669
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$28669)), Nil), Z) && è°¶Cons(S(S(nat$28669)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(S(nat$28669)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$28669)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$28669)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$28669)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$29177
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$29177))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$29177)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$29177)) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$29177)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$29177), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27252, tail$70324
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27252, tail$70324), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Cons(head$27252, tail$70324)), Z) && è°¶Cons(S(Z), Cons(head$27252, tail$70324)) && â†“list_sorted_insert(Cons(head$27252, tail$70324), Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$27252, tail$70324)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$27252, tail$70324))) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Cons(head$27252, tail$70324)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$29182
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$29182))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$29182)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$29182)) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$29182)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$29182), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± ()
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$29190
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$29190)), Nil), Z) && è°¶Cons(S(S(nat$29190)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(S(nat$29190)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$29190)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$29190)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$29190)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27257, tail$71399
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27257, tail$71399), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Cons(head$27257, tail$71399)), Z) && è°¶Cons(S(Z), Cons(head$27257, tail$71399)) && â†“list_sorted_insert(Cons(head$27257, tail$71399), Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$27257, tail$71399)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Cons(head$27257, tail$71399))) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Cons(head$27257, tail$71399)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$94), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± ()
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$29701
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$29701)), Nil), Z) && è°¶Cons(S(S(nat$29701)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(S(nat$29701)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$29701)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(S(nat$29701)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$29701)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27260, tail$72472, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27260, tail$72472), n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(Z), Cons(head$27260, tail$72472)), n) && è°¶Cons(S(Z), Cons(head$27260, tail$72472)) && â†“list_sorted_insert(Cons(head$27260, tail$72472), n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$27260, tail$72472)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Cons(head$27260, tail$72472)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$27261: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$72473: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Cons(head$27261, tail$72473) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$30207, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(S(nat$30207)), Nil), n) && è°¶Cons(S(S(nat$30207)), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(S(nat$30207)) && è°¶Nil && è°¶S(nat$30207)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(S(nat$30207)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$30208, nat$94
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$30208))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), Nil), S(nat$30208)) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, S(nat$30208)) && è°¶S(nat$94) && è°¶Nil && è°¶S(nat$30208)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$30208), Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$94), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$27265, tail$72630, nat$94
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$27265, tail$72630), Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$94), Cons(head$27265, tail$72630)), Z) && è°¶Cons(S(nat$94), Cons(head$27265, tail$72630)) && â†“list_sorted_insert(Cons(head$27265, tail$72630), Z) && è°¶S(nat$94) && è°¶Z && è°¶Cons(head$27265, tail$72630)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Cons(head$27265, tail$72630)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(nat$94), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$27266: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$72631: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z && è°¶Cons(head$27266, tail$72631) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$30366, tail$17, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$30366)), tail$17), n) && è°¶Cons(S(S(nat$30366)), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(S(nat$30366)) && è°¶Nil && inactive(rec$16) && è°¶S(nat$30366)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(S(nat$30366)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$30367, nat$94, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$30367))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), S(nat$30367)) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, S(nat$30367)) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶S(nat$30367)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$30367), Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$30532
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$30532))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$30532)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$30532)) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$30532)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$30532), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$30537
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$30537))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$30537)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$30537)) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$30537)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(S(nat$30537), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$691'] âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$691), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± nat$30545
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$30545)), Nil), Z) && è°¶Cons(S(S(nat$30545)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(S(nat$30545)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$30545)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(S(nat$30545)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$30545)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                             val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                             val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                               val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                               val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                               val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                               val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$27272: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$72790: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Cons(head$27272, tail$72790) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$1002'] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                               val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                               val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$1002'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$1002'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                 val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                 val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                 (rec$1002 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1002)) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$1002'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                 val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                 val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                 rec$1002.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$27273: Nat = rec$1002.head
[[34m  Info  [0m]                                   val tail$72791: NatList = rec$1002.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Cons(head$27273, tail$72791) && inactive(rec$1002)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (rec$1002 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1002)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (rec$1002 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1002)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$1003'] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                               val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                               val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$1003'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$1003'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                 val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                 val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                 (rec$1003 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1003)) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$1003'] - âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                 val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                 val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                 rec$1003.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$27274: Nat = rec$1003.head
[[34m  Info  [0m]                                   val tail$72792: NatList = rec$1003.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Cons(head$27274, tail$72792) && inactive(rec$1003)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (rec$1003 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1003)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$692, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(head$12, Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (rec$1003 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$692)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(head$12, Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶Nil && inactive(rec$1003)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$9301'] âŸ¦ Î± nat$9301
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9301), Nil), Z) && è°¶Cons(S(nat$9301), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$9301)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9301), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9301), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$9301'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$9301'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$9301'] - âŸ¦ Î± nat$31056
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$31056)), Nil), Z) && è°¶Cons(S(S(nat$31056)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(S(nat$31056)) && è°¶S(nat$31056)) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(S(nat$31056)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$31056)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$22786, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$22786), tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$22786), tail$17), S(Z)) && è°¶Cons(S(nat$22786), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$22786), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶S(nat$22786)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$22786), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$22786), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$22786, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$22786), tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$22786), tail$17), S(Z)) && è°¶Cons(S(nat$22786), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$22786), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶S(nat$22786)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$22786), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$22786), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$9324'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$9324'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$9324'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                 val rec$291: NatList = list_sorted_insert(Cons(S(Z), tail$17), nat$95)
[[34m  Info  [0m]                                 val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$95)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(Z), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$9324'] - âŸ¦ Î± nat$31562, nat$95, tail$17
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                 val rec$291: NatList = list_sorted_insert(Cons(S(S(nat$31562)), tail$17), nat$95)
[[34m  Info  [0m]                                 val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(S(nat$31562)), tail$17), S(nat$95)) && è°¶Cons(S(S(nat$31562)), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(S(nat$31562)), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(S(nat$31562)) && è°¶S(nat$31562)) && true
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(S(nat$31562)), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(S(nat$31562)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /0,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(Z), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$95)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(Z), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(Z), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$95)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(Z), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$9324, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(Z)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$9324) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$31563, nat$9324, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$31563)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$31563))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$31563))
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(S(nat$31563))) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$31563))) && è°¶S(S(nat$31563)) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$31563)) && â†“list_sorted_insert(tail$17, S(nat$31563)) && è°¶S(nat$9324) && è°¶S(nat$31563)) && true
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(S(nat$31563)), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(Z)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$9324) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(Z)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$9324) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$30280: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$72870: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Cons(head$30280, tail$72870) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$30281: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$72871: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Cons(head$30281, tail$72871) && inactive(rec$291)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$30282: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$72872: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Cons(head$30282, tail$72872) && inactive(rec$292)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$30755, tail$72877, nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$30755, tail$72877), S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Cons(head$30755, tail$72877)), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$30755, tail$72877), nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$30755, tail$72877)), S(nat$95)) && è°¶Cons(head$12, Cons(head$30755, tail$72877)) && â†“list_sorted_insert(Cons(head$30755, tail$72877), S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Cons(head$30755, tail$72877)), nat$95) && â†“list_sorted_insert(Cons(head$30755, tail$72877), nat$95) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$30755, tail$72877)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$30755, tail$72877))) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Cons(head$30755, tail$72877)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && (rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$30756: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$72878: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$30756, tail$72878) && inactive(rec$291)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$16 == Nil) && (rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$30757: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$72879: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$30757, tail$72879) && inactive(rec$292)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$16) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$31236, tail$73951, nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$31236, tail$73951), S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Cons(head$31236, tail$73951)), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$31236, tail$73951), nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$31236, tail$73951)), S(nat$95)) && è°¶Cons(head$12, Cons(head$31236, tail$73951)) && â†“list_sorted_insert(Cons(head$31236, tail$73951), S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Cons(head$31236, tail$73951)), nat$95) && â†“list_sorted_insert(Cons(head$31236, tail$73951), nat$95) && è°¶Nil && inactive(rec$291) && è°¶Cons(head$31236, tail$73951)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$31236, tail$73951))) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Cons(head$31236, tail$73951)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$291 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$291 == Nil) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$31237: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$73952: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Cons(head$31237, tail$73952) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && (rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$31238: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$73953: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Cons(head$31238, tail$73953) && inactive(rec$292)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$291) && è°¶Nil && inactive(rec$292)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$32333, tail$75048, nat$95, head$12
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$32333, tail$75048), S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, Cons(head$32333, tail$75048)), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$32333, tail$75048), nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Cons(head$32333, tail$75048)), S(nat$95)) && è°¶Cons(head$12, Cons(head$32333, tail$75048)) && â†“list_sorted_insert(Cons(head$32333, tail$75048), S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Cons(head$32333, tail$75048)), nat$95) && â†“list_sorted_insert(Cons(head$32333, tail$75048), nat$95) && è°¶Nil && inactive(rec$292) && è°¶Cons(head$32333, tail$75048)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, Cons(head$32333, tail$75048))) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Cons(head$32333, tail$75048)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), S(nat$95)) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$292 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$292 == Nil) && (rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$32334: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$75049: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Cons(head$32334, tail$75049) && inactive(rec$16)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && (rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$32335: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$75050: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Cons(head$32335, tail$75050) && inactive(rec$291)) && true
[[34m  Info  [0m]                                })
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((rec$291 == Nil) && ((â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Nil && inactive(rec$292) && è°¶Nil && inactive(rec$291)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$12, tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$9501'] âŸ¦ Î± nat$9501
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9501), Nil), Z) && è°¶Cons(S(nat$9501), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$9501)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9501), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(nat$9501), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$9501'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$9501'] - âŸ¦ Î± ()
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$9501'] - âŸ¦ Î± nat$32258
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                 (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(S(nat$32258)), Nil), Z) && è°¶Cons(S(S(nat$32258)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(S(nat$32258)) && è°¶S(nat$32258)) && true)
[[34m  Info  [0m]                               Ï† (!list_sorted(Cons(S(S(nat$32258)), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(S(nat$32258)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), Nil)) || list_sorted(out)) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20080, Z$0)] âŸ¦ Î± head$10586, tail$20080
[[34m  Info  [0m]                                                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$10586, tail$20080), Z)
[[34m  Info  [0m]                                                             (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10586, tail$20080)), Z) && è°¶Cons(Z, Cons(head$10586, tail$20080)) && â†“list_sorted_insert(Cons(head$10586, tail$20080), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10586, tail$20080)) && true)
[[34m  Info  [0m]                                                           Ï† (!list_sorted(Cons(Z, Cons(head$10586, tail$20080))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10586, tail$20080)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20080, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20080, Z$0)] - âŸ¦ Î± head$10586, tail$20080
[[34m  Info  [0m]                                                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$10586, tail$20080), Z)
[[34m  Info  [0m]                                                               (rec$16 == Nil) && {
[[34m  Info  [0m]                                                                 val rec$8760: NatList = list_sorted_insert(tail$20080, Z)
[[34m  Info  [0m]                                                                 (â†“list_sorted_insert(Cons(Z, Cons(head$10586, tail$20080)), Z) && è°¶Cons(Z, Cons(head$10586, tail$20080)) && â†“list_sorted_insert(Cons(head$10586, tail$20080), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10586, tail$20080) && â†“list_sorted_insert(tail$20080, Z)) && true
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             Ï† (!list_sorted(Cons(Z, Cons(head$10586, tail$20080))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10586, tail$20080)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10586, tail$20080
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$10586, tail$20080), Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && {
[[34m  Info  [0m]                                    val rec$8760: NatList = list_sorted_insert(tail$20080, Z)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Cons(Z, Cons(head$10586, tail$20080)), Z) && è°¶Cons(Z, Cons(head$10586, tail$20080)) && â†“list_sorted_insert(Cons(head$10586, tail$20080), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10586, tail$20080) && â†“list_sorted_insert(tail$20080, Z)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(Z, Cons(head$10586, tail$20080))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10586, tail$20080)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10586, tail$20080
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$10586, tail$20080), Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && {
[[34m  Info  [0m]                              val rec$8760: NatList = list_sorted_insert(tail$20080, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$10586, tail$20080)), Z) && è°¶Cons(Z, Cons(head$10586, tail$20080)) && â†“list_sorted_insert(Cons(head$10586, tail$20080), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10586, tail$20080) && â†“list_sorted_insert(tail$20080, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Cons(head$10586, tail$20080))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10586, tail$20080)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$6984'] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'head$6984'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$6984'] - âŸ¦ Î± tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(Z, tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$12272)), n) && è°¶Cons(Z, Cons(Z, tail$12272)) && â†“list_sorted_insert(Cons(Z, tail$12272), n) && è°¶Z && è°¶Cons(Z, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$6984'] - âŸ¦ Î± nat$32764, tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(S(nat$32764), tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(S(nat$32764), tail$12272)), n) && è°¶Cons(Z, Cons(S(nat$32764), tail$12272)) && â†“list_sorted_insert(Cons(S(nat$32764), tail$12272), n) && è°¶Z && è°¶Cons(S(nat$32764), tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶S(nat$32764)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(S(nat$32764), tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(Z, tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$12272)), n) && è°¶Cons(Z, Cons(Z, tail$12272)) && â†“list_sorted_insert(Cons(Z, tail$12272), n) && è°¶Z && è°¶Cons(Z, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$12272, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(Z, tail$12272), n)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(Z, tail$12272)), n) && è°¶Cons(Z, Cons(Z, tail$12272)) && â†“list_sorted_insert(Cons(Z, tail$12272), n) && è°¶Z && è°¶Cons(Z, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(Z, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± head$6984, tail$12272
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), Z)
[[34m  Info  [0m]                              val rec$3631: NatList = list_sorted_insert(tail$12272, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), Z) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), Z) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$32765, head$6984, tail$12272
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), S(nat$32765))
[[34m  Info  [0m]                              val rec$3631: NatList = list_sorted_insert(tail$12272, S(nat$32765))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), S(nat$32765)) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), S(nat$32765)) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, S(nat$32765)) && è°¶S(nat$32765)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$32765), Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6984, tail$12272
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), Z)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), Z) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), Z) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6984, tail$12272
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), Z)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), Z) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), Z) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$32231, Z$0)] âŸ¦ Î± head$16782, tail$32231
[[34m  Info  [0m]                                                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$16782, tail$32231), Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(Z, Cons(head$16782, tail$32231)), Z) && è°¶Cons(Z, Cons(head$16782, tail$32231)) && â†“list_sorted_insert(Cons(head$16782, tail$32231), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16782, tail$32231)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16782, tail$32231)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$32231, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$32231, Z$0)] - âŸ¦ Î± head$16782, tail$32231
[[34m  Info  [0m]                                                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$16782, tail$32231), Z)
[[34m  Info  [0m]                                                               val rec$8803: NatList = list_sorted_insert(tail$32231, Z)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(Z, Cons(head$16782, tail$32231)), Z) && è°¶Cons(Z, Cons(head$16782, tail$32231)) && â†“list_sorted_insert(Cons(head$16782, tail$32231), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16782, tail$32231) && â†“list_sorted_insert(tail$32231, Z)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16782, tail$32231)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$16782, tail$32231
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$16782, tail$32231), Z)
[[34m  Info  [0m]                                  val rec$8803: NatList = list_sorted_insert(tail$32231, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$16782, tail$32231)), Z) && è°¶Cons(Z, Cons(head$16782, tail$32231)) && â†“list_sorted_insert(Cons(head$16782, tail$32231), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16782, tail$32231) && â†“list_sorted_insert(tail$32231, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16782, tail$32231)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$16782, tail$32231
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$16782, tail$32231), Z)
[[34m  Info  [0m]                            val rec$8803: NatList = list_sorted_insert(tail$32231, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$16782, tail$32231)), Z) && è°¶Cons(Z, Cons(head$16782, tail$32231)) && â†“list_sorted_insert(Cons(head$16782, tail$32231), Z) && è°¶Z && è°¶Z && è°¶Cons(head$16782, tail$32231) && â†“list_sorted_insert(tail$32231, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$16782, tail$32231)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$1308
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$1308, Nil)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, Nil))] âŸ¦ Î± head$1308
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                                 val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                                 val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                                               Ï† !list_sorted(Cons(head$1308, Nil)) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, Nil))] - âŸ¦ Î± head$1308
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                                   val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                                   val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                   !list_sorted(Cons(head$1308, Nil)) && ((â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true)
[[34m  Info  [0m]                                                 Ï† content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$1308, Nil)) && ((â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$1308, Nil)) && ((â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, Nil), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$1308, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, Nil), Z) && è°¶Z && è°¶Cons(head$1308, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                       val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                       val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                       (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                         val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                         val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                         (rec$15 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                       val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                       val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                       (rec$764 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true)
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                         val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                         val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                         (rec$764 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true))
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$764 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$764 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$764)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$1308, tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                       val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                       val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                       (rec$765 == Nil) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true)
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$1308, tail$1755)) && content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$1308, tail$1755))] - âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                                         val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                         val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                         (rec$765 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true))
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  (rec$765 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$1308, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$1308, tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (rec$765 == Nil) && (!list_sorted(Cons(head$1308, tail$1755)) && ((â†“list_sorted_insert(Cons(head$1308, tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$1308, tail$1755), Z) && è°¶Z && è°¶Cons(head$1308, tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶Nil && inactive(rec$765)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$1308, tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                              val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$4838, tail$7111)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$4838, tail$7111)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4838, tail$7111))] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                                       (rec$15 == Nil) && {
[[34m  Info  [0m]                                                         val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                                         val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                                         (â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true
[[34m  Info  [0m]                                                       }
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$4838, tail$7111)) && content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4838, tail$7111))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4838, tail$7111))] - âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                                         (rec$15 == Nil) && {
[[34m  Info  [0m]                                                           val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                                           val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                                           !list_sorted(Cons(head$4838, tail$7111)) && ((â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true)
[[34m  Info  [0m]                                                         }
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                                    val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                                    !list_sorted(Cons(head$4838, tail$7111)) && ((â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$4838, tail$7111
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4838, tail$7111), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2922: NatList = list_sorted_insert(tail$7111, S(Z))
[[34m  Info  [0m]                              val rec$2923: NatList = list_sorted_insert(tail$7111, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$4838, tail$7111)) && ((â†“list_sorted_insert(Cons(head$4838, tail$7111), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4838, tail$7111), Z) && è°¶Z && è°¶Nil && inactive(rec$15) && è°¶Cons(head$4838, tail$7111) && â†“list_sorted_insert(tail$7111, S(Z)) && â†“list_sorted_insert(tail$7111, Z)) && true)
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$4838, tail$7111))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ false |  error[NatList]("Spec is UNSAT for this path!") âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                               (â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                                 !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                               Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, Nil), Z) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(Z)) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                           Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                             (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                               (rec$15 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$15) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                           Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                             (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                               (rec$254 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$254) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                           Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                             (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                                           Ï† !list_sorted(Cons(Z, tail$36)) && content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /6,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, tail$36))] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                               (rec$255 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                                             Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(Z, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && (!list_sorted(Cons(Z, tail$36)) && ((â†“list_sorted_insert(Cons(Z, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(Z, tail$36), nat$2) && è°¶Cons(Z, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(Z, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                   (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true)
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                     (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (rec$255 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$36, tail$36), Z) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Nil && inactive(rec$255) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$36'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'tail$36'] - âŸ¦ Î± head$38307, tail$80533, head$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Cons(head$38307, tail$80533)), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(Cons(head$38307, tail$80533), S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(Cons(head$38307, tail$80533), nat$2)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$36, Cons(head$38307, tail$80533)), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Cons(head$38307, tail$80533)), nat$2) && è°¶Cons(head$36, Cons(head$38307, tail$80533)) && â†“list_sorted_insert(Cons(head$38307, tail$80533), S(nat$2)) && â†“list_sorted_insert(Cons(head$38307, tail$80533), nat$2) && è°¶Cons(head$38307, tail$80533)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Cons(head$38307, tail$80533)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$15'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                           Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                             val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                             val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$15'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                               val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                               val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                               rec$15.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$38308: Nat = rec$15.head
[[34m  Info  [0m]                                 val tail$80534: NatList = rec$15.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$38308, tail$80534) && inactive(rec$15)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$254'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$254'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$254.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$38309: Nat = rec$254.head
[[34m  Info  [0m]                                  val tail$80535: NatList = rec$254.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$38309, tail$80535) && inactive(rec$254)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$255'] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$255'] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                              Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                rec$255.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$38310: Nat = rec$255.head
[[34m  Info  [0m]                                  val tail$80536: NatList = rec$255.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Cons(head$38310, tail$80536) && inactive(rec$255)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                              val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$4843, tail$7116)) || list_sorted(out)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$4843, tail$7116)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                              (rec$15 == Nil) && {
[[34m  Info  [0m]                                val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4843, tail$7116))] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                                       (rec$15 == Nil) && {
[[34m  Info  [0m]                                                         val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                                         val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                                         (â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true
[[34m  Info  [0m]                                                       }
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(head$4843, tail$7116)) && content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4843, tail$7116))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$4843, tail$7116))] - âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                                         (rec$15 == Nil) && {
[[34m  Info  [0m]                                                           val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                                           val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                                           !list_sorted(Cons(head$4843, tail$7116)) && ((â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true)
[[34m  Info  [0m]                                                         }
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                                    val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                                    !list_sorted(Cons(head$4843, tail$7116)) && ((â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$4843, tail$7116
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$4843, tail$7116), Z)
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$2931: NatList = list_sorted_insert(tail$7116, S(Z))
[[34m  Info  [0m]                              val rec$2932: NatList = list_sorted_insert(tail$7116, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(head$4843, tail$7116)) && ((â†“list_sorted_insert(Cons(head$4843, tail$7116), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$4843, tail$7116), Z) && è°¶Nil && inactive(rec$15) && è°¶Z && è°¶Cons(head$4843, tail$7116) && â†“list_sorted_insert(tail$7116, S(Z)) && â†“list_sorted_insert(tail$7116, Z)) && true)
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† content(Cons(S(Z), Cons(head$4843, tail$7116))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$12554)] âŸ¦ Î± nat$12554
[[34m  Info  [0m]                                                            Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$12554))
[[34m  Info  [0m]                                                              (rec$15 == Nil) && ((â†“list_sorted_insert(Nil, S(S(nat$12554))) && è°¶S(S(nat$12554)) && â†“list_sorted_insert(Nil, S(nat$12554)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$12554)) && true)
[[34m  Info  [0m]                                                            Ï† list_sorted(out) && content(Cons(S(S(nat$12554)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                            x out
[[34m  Info  [0m]                                                          âŸ§ /3,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$12554)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Nil$0, nat$12554)] - âŸ¦ Î± nat$12554
[[34m  Info  [0m]                                                              Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$12554))
[[34m  Info  [0m]                                                                (rec$15 == Nil) && {
[[34m  Info  [0m]                                                                  val rec$9493: NatList = list_sorted_insert(Nil, nat$12554)
[[34m  Info  [0m]                                                                  (â†“list_sorted_insert(Nil, S(S(nat$12554))) && è°¶S(S(nat$12554)) && â†“list_sorted_insert(Nil, S(nat$12554)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$12554) && â†“list_sorted_insert(Nil, nat$12554)) && true
[[34m  Info  [0m]                                                                }
[[34m  Info  [0m]                                                              Ï† list_sorted(out) && content(Cons(S(S(nat$12554)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                                              x out
[[34m  Info  [0m]                                                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$12554
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$12554))
[[34m  Info  [0m]                                  (rec$15 == Nil) && {
[[34m  Info  [0m]                                    val rec$9493: NatList = list_sorted_insert(Nil, nat$12554)
[[34m  Info  [0m]                                    (â†“list_sorted_insert(Nil, S(S(nat$12554))) && è°¶S(S(nat$12554)) && â†“list_sorted_insert(Nil, S(nat$12554)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$12554) && â†“list_sorted_insert(Nil, nat$12554)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(S(nat$12554)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$12554
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Nil, S(nat$12554))
[[34m  Info  [0m]                            (rec$15 == Nil) && {
[[34m  Info  [0m]                              val rec$9493: NatList = list_sorted_insert(Nil, nat$12554)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Nil, S(S(nat$12554))) && è°¶S(S(nat$12554)) && â†“list_sorted_insert(Nil, S(nat$12554)) && è°¶Nil && inactive(rec$15) && è°¶Nil && è°¶S(nat$12554) && â†“list_sorted_insert(Nil, nat$12554)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(S(nat$12554)), Nil)).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20744, Z$0)] âŸ¦ Î± head$10607, tail$20744
[[34m  Info  [0m]                                                           Î  val rec$98: NatList = list_sorted_insert(Cons(head$10607, tail$20744), Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(Z, Cons(head$10607, tail$20744)), Z) && è°¶Cons(Z, Cons(head$10607, tail$20744)) && â†“list_sorted_insert(Cons(head$10607, tail$20744), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10607, tail$20744)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10607, tail$20744)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20744, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$20744, Z$0)] - âŸ¦ Î± head$10607, tail$20744
[[34m  Info  [0m]                                                             Î  val rec$98: NatList = list_sorted_insert(Cons(head$10607, tail$20744), Z)
[[34m  Info  [0m]                                                               val rec$9494: NatList = list_sorted_insert(tail$20744, Z)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(Z, Cons(head$10607, tail$20744)), Z) && è°¶Cons(Z, Cons(head$10607, tail$20744)) && â†“list_sorted_insert(Cons(head$10607, tail$20744), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10607, tail$20744) && â†“list_sorted_insert(tail$20744, Z)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10607, tail$20744)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10607, tail$20744
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$10607, tail$20744), Z)
[[34m  Info  [0m]                                  val rec$9494: NatList = list_sorted_insert(tail$20744, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$10607, tail$20744)), Z) && è°¶Cons(Z, Cons(head$10607, tail$20744)) && â†“list_sorted_insert(Cons(head$10607, tail$20744), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10607, tail$20744) && â†“list_sorted_insert(tail$20744, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10607, tail$20744)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10607, tail$20744
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$10607, tail$20744), Z)
[[34m  Info  [0m]                            val rec$9494: NatList = list_sorted_insert(tail$20744, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$10607, tail$20744)), Z) && è°¶Cons(Z, Cons(head$10607, tail$20744)) && â†“list_sorted_insert(Cons(head$10607, tail$20744), Z) && è°¶Z && è°¶Z && è°¶Cons(head$10607, tail$20744) && â†“list_sorted_insert(tail$20744, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10607, tail$20744)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$34503
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$34503))
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$34503)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$34503)) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶S(nat$34503)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$34503), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(S(Z), Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$32, Nil$0), nat$3640), list_sorted_insert$0(Nil$0, nat$3640)] âŸ¦ Î± nat$3640, head$32
[[34m  Info  [0m]                                                                                                                   Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$3640))
[[34m  Info  [0m]                                                                                                                     (â†“list_sorted_insert(Cons(head$32, Nil), S(nat$3640)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$3640)) && è°¶Nil && è°¶S(nat$3640)) && true
[[34m  Info  [0m]                                                                                                                   Ï† list_sorted(out) && content(Cons(S(nat$3640), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                   x out
[[34m  Info  [0m]                                                                                                                 âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$32, Nil$0), nat$3640), list_sorted_insert$0(Nil$0, nat$3640)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(Cons$0(head$32, Nil$0), nat$3640), list_sorted_insert$0(Nil$0, nat$3640)] - âŸ¦ Î± nat$3640, head$32
[[34m  Info  [0m]                                                                                                                     Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$3640))
[[34m  Info  [0m]                                                                                                                       val rec$3947: NatList = list_sorted_insert(Cons(head$32, Nil), nat$3640)
[[34m  Info  [0m]                                                                                                                       val rec$3948: NatList = list_sorted_insert(Nil, nat$3640)
[[34m  Info  [0m]                                                                                                                       (â†“list_sorted_insert(Cons(head$32, Nil), S(nat$3640)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$3640)) && è°¶Nil && è°¶S(nat$3640) && â†“list_sorted_insert(Cons(head$32, Nil), nat$3640) && â†“list_sorted_insert(Nil, nat$3640)) && true
[[34m  Info  [0m]                                                                                                                     Ï† list_sorted(out) && content(Cons(S(nat$3640), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                                                                                                     x out
[[34m  Info  [0m]                                                                                                                   âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$3640, head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$3640))
[[34m  Info  [0m]                                  val rec$3947: NatList = list_sorted_insert(Cons(head$32, Nil), nat$3640)
[[34m  Info  [0m]                                  val rec$3948: NatList = list_sorted_insert(Nil, nat$3640)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Nil), S(nat$3640)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$3640)) && è°¶Nil && è°¶S(nat$3640) && â†“list_sorted_insert(Cons(head$32, Nil), nat$3640) && â†“list_sorted_insert(Nil, nat$3640)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$3640), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$3640, head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Nil, S(nat$3640))
[[34m  Info  [0m]                            val rec$3947: NatList = list_sorted_insert(Cons(head$32, Nil), nat$3640)
[[34m  Info  [0m]                            val rec$3948: NatList = list_sorted_insert(Nil, nat$3640)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, Nil), S(nat$3640)) && è°¶Cons(head$32, Nil) && â†“list_sorted_insert(Nil, S(nat$3640)) && è°¶Nil && è°¶S(nat$3640) && â†“list_sorted_insert(Cons(head$32, Nil), nat$3640) && â†“list_sorted_insert(Nil, nat$3640)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$3640), Cons(head$32, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$5977'] âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$5977'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$5977'] - âŸ¦ Î± tail$9139, head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$9139), Z)
[[34m  Info  [0m]                                  val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Cons(Z, tail$9139)), Z) && è°¶Cons(head$32, Cons(Z, tail$9139)) && â†“list_sorted_insert(Cons(Z, tail$9139), Z) && è°¶Z && è°¶Cons(Z, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(Z, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$5977'] - âŸ¦ Î± nat$34762, tail$9139, head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(S(nat$34762), tail$9139), Z)
[[34m  Info  [0m]                                  val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Cons(S(nat$34762), tail$9139)), Z) && è°¶Cons(head$32, Cons(S(nat$34762), tail$9139)) && â†“list_sorted_insert(Cons(S(nat$34762), tail$9139), Z) && è°¶Z && è°¶Cons(S(nat$34762), tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶S(nat$34762)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(S(nat$34762), tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$9139, head$32
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$9139), Z)
[[34m  Info  [0m]                                  val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$32, Cons(Z, tail$9139)), Z) && è°¶Cons(head$32, Cons(Z, tail$9139)) && â†“list_sorted_insert(Cons(Z, tail$9139), Z) && è°¶Z && è°¶Cons(Z, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(Z, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$9139, head$32
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(Z, tail$9139), Z)
[[34m  Info  [0m]                            val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$32, Cons(Z, tail$9139)), Z) && è°¶Cons(head$32, Cons(Z, tail$9139)) && â†“list_sorted_insert(Cons(Z, tail$9139), Z) && è°¶Z && è°¶Cons(Z, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(Z, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$32'] âŸ¦ Î± head$5977, tail$9139, head$32
[[34m  Info  [0m]                            Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                              val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$32, Cons(head$5977, tail$9139)), Z) && è°¶Cons(head$32, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$32, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± head$5977, tail$9139
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$5977, tail$9139)), Z) && è°¶Cons(Z, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$32'] - âŸ¦ Î± nat$34763, head$5977, tail$9139
[[34m  Info  [0m]                              Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$34763), Cons(head$5977, tail$9139)), Z) && è°¶Cons(S(nat$34763), Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶S(nat$34763)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$34763), Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$5977, tail$9139
[[34m  Info  [0m]                                Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                                  val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$5977, tail$9139)), Z) && è°¶Cons(Z, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$5977, tail$9139
[[34m  Info  [0m]                          Î  val rec$98: NatList = list_sorted_insert(Cons(head$5977, tail$9139), Z)
[[34m  Info  [0m]                            val rec$3949: NatList = list_sorted_insert(tail$9139, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$5977, tail$9139)), Z) && è°¶Cons(Z, Cons(head$5977, tail$9139)) && â†“list_sorted_insert(Cons(head$5977, tail$9139), Z) && è°¶Z && è°¶Cons(head$5977, tail$9139) && â†“list_sorted_insert(tail$9139, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$5977, tail$9139)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$21064, Z$0)] âŸ¦ Î± head$10619, tail$21064
[[34m  Info  [0m]                                                           Î  val rec$290: NatList = list_sorted_insert(Cons(head$10619, tail$21064), Z)
[[34m  Info  [0m]                                                             (â†“list_sorted_insert(Cons(Z, Cons(head$10619, tail$21064)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$10619, tail$21064)) && â†“list_sorted_insert(Cons(head$10619, tail$21064), Z) && è°¶Z && è°¶Cons(head$10619, tail$21064)) && true
[[34m  Info  [0m]                                                           Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10619, tail$21064)))).subsetOf(content(out))
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /5,0/
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$21064, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_sorted_insert$0(tail$21064, Z$0)] - âŸ¦ Î± head$10619, tail$21064
[[34m  Info  [0m]                                                             Î  val rec$290: NatList = list_sorted_insert(Cons(head$10619, tail$21064), Z)
[[34m  Info  [0m]                                                               val rec$9495: NatList = list_sorted_insert(tail$21064, Z)
[[34m  Info  [0m]                                                               (â†“list_sorted_insert(Cons(Z, Cons(head$10619, tail$21064)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$10619, tail$21064)) && â†“list_sorted_insert(Cons(head$10619, tail$21064), Z) && è°¶Z && è°¶Cons(head$10619, tail$21064) && â†“list_sorted_insert(tail$21064, Z)) && true
[[34m  Info  [0m]                                                             Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10619, tail$21064)))).subsetOf(content(out))
[[34m  Info  [0m]                                                             x out
[[34m  Info  [0m]                                                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10619, tail$21064
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(head$10619, tail$21064), Z)
[[34m  Info  [0m]                                  val rec$9495: NatList = list_sorted_insert(tail$21064, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$10619, tail$21064)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$10619, tail$21064)) && â†“list_sorted_insert(Cons(head$10619, tail$21064), Z) && è°¶Z && è°¶Cons(head$10619, tail$21064) && â†“list_sorted_insert(tail$21064, Z)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10619, tail$21064)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10619, tail$21064
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Cons(head$10619, tail$21064), Z)
[[34m  Info  [0m]                            val rec$9495: NatList = list_sorted_insert(tail$21064, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$10619, tail$21064)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$10619, tail$21064)) && â†“list_sorted_insert(Cons(head$10619, tail$21064), Z) && è°¶Z && è°¶Cons(head$10619, tail$21064) && â†“list_sorted_insert(tail$21064, Z)) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10619, tail$21064)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$6124'] âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                              Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$6124'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$6124'] - âŸ¦ Î± tail$9285, head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(Z, tail$9285), Z)
[[34m  Info  [0m]                                  val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, Cons(Z, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(Z, tail$9285)) && â†“list_sorted_insert(Cons(Z, tail$9285), Z) && è°¶Cons(Z, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(Z, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'head$6124'] - âŸ¦ Î± nat$34765, tail$9285, head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(S(nat$34765), tail$9285), Z)
[[34m  Info  [0m]                                  val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, Cons(S(nat$34765), tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(S(nat$34765), tail$9285)) && â†“list_sorted_insert(Cons(S(nat$34765), tail$9285), Z) && è°¶Cons(S(nat$34765), tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶S(nat$34765)) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(S(nat$34765), tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$9285, head$227
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(Z, tail$9285), Z)
[[34m  Info  [0m]                                  val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$227, Cons(Z, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(Z, tail$9285)) && â†“list_sorted_insert(Cons(Z, tail$9285), Z) && è°¶Cons(Z, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(Z, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$9285, head$227
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Cons(Z, tail$9285), Z)
[[34m  Info  [0m]                            val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$227, Cons(Z, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(Z, tail$9285)) && â†“list_sorted_insert(Cons(Z, tail$9285), Z) && è°¶Cons(Z, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(Z, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$227'] âŸ¦ Î± head$6124, tail$9285, head$227
[[34m  Info  [0m]                             Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                               val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$227, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(head$227, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(Z, Cons(head$227, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± head$6124, tail$9285
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                 val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'head$227'] - âŸ¦ Î± nat$34766, head$6124, tail$9285
[[34m  Info  [0m]                               Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                 val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$34766), Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(S(nat$34766), Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶S(nat$34766)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$34766), Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6124, tail$9285
[[34m  Info  [0m]                                Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                                  val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6124, tail$9285
[[34m  Info  [0m]                          Î  val rec$290: NatList = list_sorted_insert(Cons(head$6124, tail$9285), Z)
[[34m  Info  [0m]                            val rec$3950: NatList = list_sorted_insert(tail$9285, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, Cons(head$6124, tail$9285)), Z) && è°¶Z && è°¶Cons(Z, Cons(head$6124, tail$9285)) && â†“list_sorted_insert(Cons(head$6124, tail$9285), Z) && è°¶Cons(head$6124, tail$9285) && â†“list_sorted_insert(tail$9285, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$6124, tail$9285)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16010
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$16010))
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$16010)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$16010)) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶S(nat$16010)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$16010), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16021, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$16021))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$16021)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$16021)) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶S(nat$16021)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$16021), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16028
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$16028))
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$16028)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$16028)) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶S(nat$16028)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$16028), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(Z) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$34772
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$34772))
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$34772)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$34772)) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶S(nat$34772)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$34772), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                             !list_sorted(Cons(S(nat$94), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), Z) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(nat$94) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                           Ï† content(Cons(Z, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± ()
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$34836
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                               !list_sorted(Cons(S(S(nat$34836)), Nil)) && ((â†“list_sorted_insert(Cons(S(S(nat$34836)), Nil), Z) && è°¶Cons(S(S(nat$34836)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(S(nat$34836)) && è°¶Nil && è°¶Z && è°¶S(nat$34836)) && true)
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(S(nat$34836)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶S(Z) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16039, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$16039))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$16039)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$16039)) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$16039)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$16039), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                           Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$16076, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(S(nat$16076)), tail$17)) && ((â†“list_sorted_insert(Cons(S(S(nat$16076)), tail$17), Z) && è°¶Cons(S(S(nat$16076)), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(S(nat$16076)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$16076)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(S(nat$16076)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± tail$17, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), n) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$35678, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$35678))
[[34m  Info  [0m]                              (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), S(nat$35678)) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, S(nat$35678)) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$35678)) && true))
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$35678), Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$94'] âŸ¦ Î± nat$94, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                             (rec$16 == Nil) && (!list_sorted(Cons(S(nat$94), tail$17)) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), Z) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Z) && true))
[[34m  Info  [0m]                           Ï† content(Cons(Z, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$94'] - âŸ¦ Î± nat$35713, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (rec$16 == Nil) && (!list_sorted(Cons(S(S(nat$35713)), tail$17)) && ((â†“list_sorted_insert(Cons(S(S(nat$35713)), tail$17), Z) && è°¶Cons(S(S(nat$35713)), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(S(nat$35713)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$35713)) && true))
[[34m  Info  [0m]                             Ï† content(Cons(Z, Cons(S(S(nat$35713)), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /1,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(Z), tail$17)) && ((â†“list_sorted_insert(Cons(S(Z), tail$17), Z) && è°¶Cons(S(Z), tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶S(Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$40890: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$82375: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Cons(head$40890, tail$82375) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$94, tail$17, n
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, n)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), tail$17), n) && è°¶Cons(S(nat$94), tail$17) && â†“list_sorted_insert(tail$17, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$40896, tail$82380, nat$94, n
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$40896, tail$82380), n)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Cons(head$40896, tail$82380)), n) && è°¶Cons(S(nat$94), Cons(head$40896, tail$82380)) && â†“list_sorted_insert(Cons(head$40896, tail$82380), n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Cons(head$40896, tail$82380)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Cons(head$40896, tail$82380)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$94, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$94), Nil), n) && è°¶Cons(S(nat$94), Nil) && â†“list_sorted_insert(Nil, n) && è°¶S(nat$94) && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(S(nat$94), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$17336
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$17336))
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$17336)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$17336)) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶S(nat$17336)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$17336), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), n) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(n, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$36973
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$36973))
[[34m  Info  [0m]                              !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), S(nat$36973)) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, S(nat$36973)) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶S(nat$36973)) && true)
[[34m  Info  [0m]                            Ï† content(Cons(S(nat$36973), Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'nat$691'] âŸ¦ Î± nat$691
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(S(nat$691), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$691), Nil), Z) && è°¶Cons(S(nat$691), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(nat$691) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† content(Cons(Z, Cons(S(nat$691), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'nat$691'] - âŸ¦ Î± nat$37037
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                !list_sorted(Cons(S(S(nat$37037)), Nil)) && ((â†“list_sorted_insert(Cons(S(S(nat$37037)), Nil), Z) && è°¶Cons(S(S(nat$37037)), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(S(nat$37037)) && è°¶Z && è°¶S(nat$37037)) && true)
[[34m  Info  [0m]                              Ï† content(Cons(Z, Cons(S(S(nat$37037)), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            !list_sorted(Cons(S(Z), Nil)) && ((â†“list_sorted_insert(Cons(S(Z), Nil), Z) && è°¶Cons(S(Z), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶S(Z) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(Z), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(S(Z), Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$25693, nat$692
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                                  val rec$1002: NatList = list_sorted_insert(Cons(S(nat$25693), Nil), nat$692)
[[34m  Info  [0m]                                  val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$25693), Nil), S(nat$692)) && è°¶Cons(S(nat$25693), Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(S(nat$25693), Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶S(nat$25693)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$25693), Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(S(nat$25693), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$25693, nat$692
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$692))
[[34m  Info  [0m]                            val rec$1002: NatList = list_sorted_insert(Cons(S(nat$25693), Nil), nat$692)
[[34m  Info  [0m]                            val rec$1003: NatList = list_sorted_insert(Nil, nat$692)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$25693), Nil), S(nat$692)) && è°¶Cons(S(nat$25693), Nil) && â†“list_sorted_insert(Nil, S(nat$692)) && è°¶Nil && è°¶S(nat$692) && â†“list_sorted_insert(Cons(S(nat$25693), Nil), nat$692) && â†“list_sorted_insert(Nil, nat$692) && è°¶S(nat$25693)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$25693), Nil)) || list_sorted(out)) && content(Cons(S(nat$692), Cons(S(nat$25693), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$25879
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$25879), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$25879), Nil), Z) && è°¶Cons(S(nat$25879), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25879)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$25879), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$25879
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$25879), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$25879), Nil), Z) && è°¶Cons(S(nat$25879), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$25879)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$25879), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± nat$9324, nat$95
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), Nil), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$9324), Nil), S(nat$95)) && è°¶Cons(S(nat$9324), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶S(nat$9324) && è°¶Nil) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$40921, tail$83132, nat$9324, nat$95
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$40921, tail$83132), S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), Cons(head$40921, tail$83132)), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(Cons(head$40921, tail$83132), nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$9324), Cons(head$40921, tail$83132)), S(nat$95)) && è°¶Cons(S(nat$9324), Cons(head$40921, tail$83132)) && â†“list_sorted_insert(Cons(head$40921, tail$83132), S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), Cons(head$40921, tail$83132)), nat$95) && â†“list_sorted_insert(Cons(head$40921, tail$83132), nat$95) && è°¶S(nat$9324) && è°¶Cons(head$40921, tail$83132)) && true
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), Cons(head$40921, tail$83132))) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), Cons(head$40921, tail$83132)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$9324), Nil), S(nat$95)) && è°¶Cons(S(nat$9324), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶S(nat$9324) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, nat$95
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$9324), Nil), S(nat$95)) && è°¶Cons(S(nat$9324), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶S(nat$9324) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                           Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$40922: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$83133: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Cons(head$40922, tail$83133) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$291'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$291'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                rec$291.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$40923: Nat = rec$291.head
[[34m  Info  [0m]                                  val tail$83134: NatList = rec$291.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Cons(head$40923, tail$83134) && inactive(rec$291)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$291 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$291)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$292'] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324)) && true
[[34m  Info  [0m]                            Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'rec$292'] - âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                rec$292.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                  val head$40924: Nat = rec$292.head
[[34m  Info  [0m]                                  val tail$83135: NatList = rec$292.tail
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Cons(head$40924, tail$83135) && inactive(rec$292)) && true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$9324, nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (rec$292 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$9324), tail$17), S(nat$95)) && è°¶Cons(S(nat$9324), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$9324), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$9324) && è°¶Nil && inactive(rec$292)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$9324), tail$17)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$9324), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$25937, nat$95
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(S(nat$25937), Nil), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(S(nat$25937), Nil), S(nat$95)) && è°¶Cons(S(nat$25937), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$25937), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶S(nat$25937)) && true
[[34m  Info  [0m]                                Ï† (!list_sorted(Cons(S(nat$25937), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$25937), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$25937, nat$95
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(S(nat$25937), Nil), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(Nil, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$25937), Nil), S(nat$95)) && è°¶Cons(S(nat$25937), Nil) && â†“list_sorted_insert(Nil, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$25937), Nil), nat$95) && â†“list_sorted_insert(Nil, nat$95) && è°¶Nil && è°¶S(nat$25937)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$25937), Nil)) || list_sorted(out)) && content(Cons(S(nat$95), Cons(S(nat$25937), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$95'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                             val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                             val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'nat$95'] - âŸ¦ Î± nat$38048, head$12, tail$17
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(tail$17, S(S(nat$38048)))
[[34m  Info  [0m]                               val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), S(nat$38048))
[[34m  Info  [0m]                               val rec$292: NatList = list_sorted_insert(tail$17, S(nat$38048))
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(head$12, tail$17), S(S(nat$38048))) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(S(nat$38048))) && è°¶S(S(nat$38048)) && â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$38048)) && â†“list_sorted_insert(tail$17, S(nat$38048)) && è°¶S(nat$38048)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(S(S(nat$38048)), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(Z))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), Z)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(head$12, tail$17), S(Z)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(head$12, tail$17), Z) && â†“list_sorted_insert(tail$17, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(Z), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± nat$95, head$12, tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                              val rec$291: NatList = list_sorted_insert(Cons(head$12, tail$17), nat$95)
[[34m  Info  [0m]                              val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(head$12, tail$17), S(nat$95)) && è°¶Cons(head$12, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(head$12, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(head$12, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Z) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$38049, nat$95, tail$17
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                val rec$291: NatList = list_sorted_insert(Cons(S(nat$38049), tail$17), nat$95)
[[34m  Info  [0m]                                val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(S(nat$38049), tail$17), S(nat$95)) && è°¶Cons(S(nat$38049), tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(S(nat$38049), tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶S(nat$38049)) && true
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(S(nat$38049), tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                                  val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                                  val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$95, tail$17
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(tail$17, S(nat$95))
[[34m  Info  [0m]                            val rec$291: NatList = list_sorted_insert(Cons(Z, tail$17), nat$95)
[[34m  Info  [0m]                            val rec$292: NatList = list_sorted_insert(tail$17, nat$95)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(Z, tail$17), S(nat$95)) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, S(nat$95)) && è°¶S(nat$95) && â†“list_sorted_insert(Cons(Z, tail$17), nat$95) && â†“list_sorted_insert(tail$17, nat$95) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(S(nat$95), Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && {
[[34m  Info  [0m]                              val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(Z, Cons(head$10581, tail$19432))) || list_sorted(out)) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && {
[[34m  Info  [0m]                                val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(Z, Cons(head$10581, tail$19432))) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && {
[[34m  Info  [0m]                                val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Cons(head$10581, tail$19432)))] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                                                  (rec$16 == Nil) && {
[[34m  Info  [0m]                                                                    val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                                                    (â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true
[[34m  Info  [0m]                                                                  }
[[34m  Info  [0m]                                                                Ï† !list_sorted(Cons(Z, Cons(head$10581, tail$19432))) && content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                                x out
[[34m  Info  [0m]                                                              âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Cons(head$10581, tail$19432)))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(Z, Cons(head$10581, tail$19432)))] - âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                                                  Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                                                    (rec$16 == Nil) && {
[[34m  Info  [0m]                                                                      val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                                                      !list_sorted(Cons(Z, Cons(head$10581, tail$19432))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true)
[[34m  Info  [0m]                                                                    }
[[34m  Info  [0m]                                                                  Ï† content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                                                  x out
[[34m  Info  [0m]                                                                âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && {
[[34m  Info  [0m]                                    val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                                    !list_sorted(Cons(Z, Cons(head$10581, tail$19432))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true)
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$10581, tail$19432
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$10581, tail$19432), Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && {
[[34m  Info  [0m]                              val rec$7072: NatList = list_sorted_insert(tail$19432, Z)
[[34m  Info  [0m]                              !list_sorted(Cons(Z, Cons(head$10581, tail$19432))) && ((â†“list_sorted_insert(Cons(Z, Cons(head$10581, tail$19432)), Z) && è°¶Cons(Z, Cons(head$10581, tail$19432)) && â†“list_sorted_insert(Cons(head$10581, tail$19432), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$10581, tail$19432) && â†“list_sorted_insert(tail$19432, Z)) && true)
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(Z, Cons(head$10581, tail$19432)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$27461
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27461), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27461), Nil), Z) && è°¶Cons(S(nat$27461), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27461)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$27461), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$27461
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27461), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27461), Nil), Z) && è°¶Cons(S(nat$27461), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$27461)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$27461), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$27477
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                  (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27477), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27477), Nil), Z) && è°¶Cons(S(nat$27477), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27477)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(Z, Cons(S(nat$27477), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$27477
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && (!list_sorted(Cons(S(nat$27477), Nil)) && ((â†“list_sorted_insert(Cons(S(nat$27477), Nil), Z) && è°¶Cons(S(nat$27477), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$27477)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(Z, Cons(S(nat$27477), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$12272'] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                 val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'tail$12272'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$12272'] - âŸ¦ Î± head$6984, n
[[34m  Info  [0m]                                 Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, Nil), n)
[[34m  Info  [0m]                                   val rec$3631: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(Z, Cons(head$6984, Nil)), n) && è°¶Cons(Z, Cons(head$6984, Nil)) && â†“list_sorted_insert(Cons(head$6984, Nil), n) && è°¶Z && è°¶Cons(head$6984, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                 Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, Nil)))).subsetOf(content(out))
[[34m  Info  [0m]                                 x out
[[34m  Info  [0m]                               âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'tail$12272'] - âŸ¦ Î± head$40941, tail$83660, head$6984, n
[[34m  Info  [0m]                                 Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, Cons(head$40941, tail$83660)), n)
[[34m  Info  [0m]                                   val rec$3631: NatList = list_sorted_insert(Cons(head$40941, tail$83660), n)
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(Z, Cons(head$6984, Cons(head$40941, tail$83660))), n) && è°¶Cons(Z, Cons(head$6984, Cons(head$40941, tail$83660))) && â†“list_sorted_insert(Cons(head$6984, Cons(head$40941, tail$83660)), n) && è°¶Z && è°¶Cons(head$6984, Cons(head$40941, tail$83660)) && â†“list_sorted_insert(Cons(head$40941, tail$83660), n) && è°¶Cons(head$40941, tail$83660)) && true
[[34m  Info  [0m]                                 Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, Cons(head$40941, tail$83660))))).subsetOf(content(out))
[[34m  Info  [0m]                                 x out
[[34m  Info  [0m]                               âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6984, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, Nil), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                                  (â†“list_sorted_insert(Cons(Z, Cons(head$6984, Nil)), n) && è°¶Cons(Z, Cons(head$6984, Nil)) && â†“list_sorted_insert(Cons(head$6984, Nil), n) && è°¶Z && è°¶Cons(head$6984, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, Nil)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(Z, rec$16) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$16'] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                           Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                             val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                             (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                           Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                               val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                               (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$16'] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                               val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                               rec$16.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                 val head$40942: Nat = rec$16.head
[[34m  Info  [0m]                                 val tail$83661: NatList = rec$16.tail
[[34m  Info  [0m]                                 (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Cons(head$40942, tail$83661) && inactive(rec$16)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$3631'] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                             Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                               val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                               (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n)) && true
[[34m  Info  [0m]                             Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$3631'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$3631'] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                 val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                 (rec$3631 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$3631)) && true)
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$3631'] - âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                               Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                 val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                 rec$3631.isInstanceOf[Cons] && {
[[34m  Info  [0m]                                   val head$40943: Nat = rec$3631.head
[[34m  Info  [0m]                                   val tail$83662: NatList = rec$3631.tail
[[34m  Info  [0m]                                   (â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Cons(head$40943, tail$83662) && inactive(rec$3631)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                                Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                                  val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                                  (rec$3631 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$3631)) && true)
[[34m  Info  [0m]                                Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$6984, tail$12272, n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Cons(head$6984, tail$12272), n)
[[34m  Info  [0m]                            val rec$3631: NatList = list_sorted_insert(tail$12272, n)
[[34m  Info  [0m]                            (rec$3631 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$6984, tail$12272)), n) && è°¶Cons(Z, Cons(head$6984, tail$12272)) && â†“list_sorted_insert(Cons(head$6984, tail$12272), n) && è°¶Z && è°¶Cons(head$6984, tail$12272) && â†“list_sorted_insert(tail$12272, n) && è°¶Nil && inactive(rec$3631)) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Cons(head$6984, tail$12272)))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41119, tail$83863
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41119, tail$83863), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41119, tail$83863)), Z) && è°¶Cons(Z, Cons(head$41119, tail$83863)) && â†“list_sorted_insert(Cons(head$41119, tail$83863), Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Cons(head$41119, tail$83863)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41119, tail$83863)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$38207
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$38207))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$38207)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$38207)) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$38207)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$38207), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41124, tail$84583
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41124, tail$84583), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41124, tail$84583)), Z) && è°¶Cons(Z, Cons(head$41124, tail$84583)) && â†“list_sorted_insert(Cons(head$41124, tail$84583), Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$41124, tail$84583)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41124, tail$84583)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$38212
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$38212))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$38212)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$38212)) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$38212)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$38212), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$38220
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$38220), Nil), Z) && è°¶Cons(S(nat$38220), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶S(nat$38220)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$38220), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41131, tail$85305
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41131, tail$85305), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41131, tail$85305)), Z) && è°¶Cons(Z, Cons(head$41131, tail$85305)) && â†“list_sorted_insert(Cons(head$41131, tail$85305), Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Cons(head$41131, tail$85305)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41131, tail$85305)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41136, tail$86025
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41136, tail$86025), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41136, tail$86025)), Z) && è°¶Cons(Z, Cons(head$41136, tail$86025)) && â†“list_sorted_insert(Cons(head$41136, tail$86025), Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Cons(head$41136, tail$86025)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41136, tail$86025)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$38228
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$38228), Nil), Z) && è°¶Cons(S(nat$38228), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶S(nat$38228)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$38228), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Z && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$38233
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$38233))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$38233)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$38233)) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$38233)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$38233), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41141, tail$86745
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41141, tail$86745), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41141, tail$86745)), Z) && è°¶Cons(Z, Cons(head$41141, tail$86745)) && â†“list_sorted_insert(Cons(head$41141, tail$86745), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$41141, tail$86745)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41141, tail$86745)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, n)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), n) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, n) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(n, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$38238
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, S(nat$38238))
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), S(nat$38238)) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, S(nat$38238)) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$38238)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$38238), Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$38246
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$38246), Nil), Z) && è°¶Cons(S(nat$38246), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶S(nat$38246)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$38246), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Nil && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Cons(Z, Nil)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'tail$17'] âŸ¦ Î± tail$17
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(tail$17, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, tail$17), Z) && è°¶Cons(Z, tail$17) && â†“list_sorted_insert(tail$17, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(Z, tail$17))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'tail$17'] - âŸ¦ Î± head$41146, tail$87465
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Cons(head$41146, tail$87465), Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Cons(head$41146, tail$87465)), Z) && è°¶Cons(Z, Cons(head$41146, tail$87465)) && â†“list_sorted_insert(Cons(head$41146, tail$87465), Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Cons(head$41146, tail$87465)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Cons(head$41146, tail$87465)))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'head$12'] âŸ¦ Î± head$12
[[34m  Info  [0m]                            Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                              (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(head$12, Nil), Z) && è°¶Cons(head$12, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(Z, Cons(head$12, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± ()
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 'head$12'] - âŸ¦ Î± nat$38254
[[34m  Info  [0m]                              Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                                (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(S(nat$38254), Nil), Z) && è°¶Cons(S(nat$38254), Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶S(nat$38254)) && true)
[[34m  Info  [0m]                              Ï† list_sorted(out) && content(Cons(Z, Cons(S(nat$38254), Nil))).subsetOf(content(out))
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /2,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  val rec$16: NatList = list_sorted_insert(Nil, Z)
[[34m  Info  [0m]                            (rec$16 == Nil) && ((â†“list_sorted_insert(Cons(Z, Nil), Z) && è°¶Cons(Z, Nil) && â†“list_sorted_insert(Nil, Z) && è°¶Nil && inactive(rec$16) && è°¶Z && è°¶Nil && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† list_sorted(out) && content(Cons(Z, Cons(Z, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Cons(Z, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$17496), tail$1755)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$17496), tail$1755)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                              val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                              val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$17496), tail$1755))] âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                                                        Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                                                          val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                          val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                          (â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true
[[34m  Info  [0m]                                                        Ï† !list_sorted(Cons(S(nat$17496), tail$1755)) && content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                        x out
[[34m  Info  [0m]                                                      âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$17496), tail$1755))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$17496), tail$1755))] - âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                                                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                                                            val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                                            val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                                            !list_sorted(Cons(S(nat$17496), tail$1755)) && ((â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true)
[[34m  Info  [0m]                                                          Ï† content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$17496, tail$1755
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$17496), tail$1755), Z)
[[34m  Info  [0m]                                  val rec$764: NatList = list_sorted_insert(tail$1755, S(Z))
[[34m  Info  [0m]                                  val rec$765: NatList = list_sorted_insert(tail$1755, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$17496), tail$1755)) && ((â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$17496), tail$1755), Z) && è°¶Z && è°¶Cons(S(nat$17496), tail$1755) && â†“list_sorted_insert(tail$1755, S(Z)) && â†“list_sorted_insert(tail$1755, Z) && è°¶S(nat$17496)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(S(nat$17496), tail$1755))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$17496), rec$764) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(Z), tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(Z), tail$36)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$36))] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                              Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                                                val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                (â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true
[[34m  Info  [0m]                                              Ï† !list_sorted(Cons(S(Z), tail$36)) && content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /4,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(Z), tail$36))] - âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                  !list_sorted(Cons(S(Z), tail$36)) && ((â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                                Ï† content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(Z), tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(Z), tail$36)) && ((â†“list_sorted_insert(Cons(S(Z), tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(S(Z), tail$36), nat$2) && è°¶Cons(S(Z), tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶S(Z) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(S(Z), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$2), Cons(S(Z), tail$36)) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$8915), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$8915), tail$36)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                                                     Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                                                       val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                       val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                       (â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true
[[34m  Info  [0m]                                                     Ï† !list_sorted(Cons(S(nat$8915), tail$36)) && content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                     x out
[[34m  Info  [0m]                                                   âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$8915), tail$36))] - âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                                                       Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                                                         val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                         val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                         !list_sorted(Cons(S(nat$8915), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true)
[[34m  Info  [0m]                                                       Ï† content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$8915, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$8915), tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$8915), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$8915), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$8915), tail$36), Z) && è°¶Cons(S(nat$8915), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶S(nat$8915) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(S(nat$8915), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$8915), rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                                 (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$15)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                               (rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                                 (rec$254 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$254 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$254 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                               (rec$255 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                                 (rec$255 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$255 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$255 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && è°¶Nil && inactive(rec$255)) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                            (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(S(nat$18813), tail$36)) || list_sorted(out)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(S(nat$18813), tail$36)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                              (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$18813), tail$36))] âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                                                      Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                                                        val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                        val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                        (â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true
[[34m  Info  [0m]                                                      Ï† !list_sorted(Cons(S(nat$18813), tail$36)) && content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                      x out
[[34m  Info  [0m]                                                    âŸ§ /2,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$18813), tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(S(nat$18813), tail$36))] - âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                                                        Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                                                          val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                                          val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                                          !list_sorted(Cons(S(nat$18813), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true)
[[34m  Info  [0m]                                                        Ï† content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                        x out
[[34m  Info  [0m]                                                      âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$18813, tail$36
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(S(nat$18813), tail$36), Z)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(Z))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, Z)
[[34m  Info  [0m]                                  !list_sorted(Cons(S(nat$18813), tail$36)) && ((â†“list_sorted_insert(Cons(S(nat$18813), tail$36), S(Z)) && è°¶S(Z) && â†“list_sorted_insert(Cons(S(nat$18813), tail$36), Z) && è°¶Cons(S(nat$18813), tail$36) && â†“list_sorted_insert(tail$36, S(Z)) && â†“list_sorted_insert(tail$36, Z) && è°¶Z && è°¶S(nat$18813)) && true)
[[34m  Info  [0m]                                Ï† content(Cons(S(Z), Cons(S(nat$18813), tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(S(nat$18813), rec$254) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, Nil)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                               val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                               val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                               (rec$15 == Nil) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true)
[[34m  Info  [0m]                                             Ï† !list_sorted(Cons(head$36, Nil)) && content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /5,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, Nil))] - âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                               Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                                 val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                                 val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                                 (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                                               Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, Nil), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(Nil, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(Nil, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && (!list_sorted(Cons(head$36, Nil)) && ((â†“list_sorted_insert(Cons(head$36, Nil), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, Nil), nat$2) && è°¶Cons(head$36, Nil) && â†“list_sorted_insert(Nil, S(nat$2)) && â†“list_sorted_insert(Nil, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil) && true))
[[34m  Info  [0m]                          Ï† content(Cons(S(nat$2), Cons(head$36, Nil))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                            val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                            val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                            (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                          Ï† (!list_sorted(Cons(head$36, tail$36)) || list_sorted(out)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                            Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                              val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                              val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                              (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                            Ï† list_sorted(out) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                 Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                   val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                   val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                   (rec$15 == Nil) && ((rec$254 == Nil) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true))
[[34m  Info  [0m]                                                 Ï† !list_sorted(Cons(head$36, tail$36)) && content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /10,0/
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] Decomposed into:
[[34m  Info  [0m] [Assert !list_sorted(Cons(head$36, tail$36))] - âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                                   Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                                     val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                                     val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                                     (rec$15 == Nil) && ((rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true)))
[[34m  Info  [0m]                                                   Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                                   x out
[[34m  Info  [0m]                                                 âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$36, tail$36, nat$2
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_sorted_insert(Cons(head$36, tail$36), nat$2)
[[34m  Info  [0m]                                  val rec$254: NatList = list_sorted_insert(tail$36, S(nat$2))
[[34m  Info  [0m]                                  val rec$255: NatList = list_sorted_insert(tail$36, nat$2)
[[34m  Info  [0m]                                  (rec$15 == Nil) && ((rec$254 == Nil) && (!list_sorted(Cons(head$36, tail$36)) && ((â†“list_sorted_insert(Cons(head$36, tail$36), S(nat$2)) && è°¶S(nat$2) && â†“list_sorted_insert(Cons(head$36, tail$36), nat$2) && è°¶Cons(head$36, tail$36) && â†“list_sorted_insert(tail$36, S(nat$2)) && â†“list_sorted_insert(tail$36, nat$2) && è°¶Nil && inactive(rec$15) && è°¶Nil && inactive(rec$254)) && true)))
[[34m  Info  [0m]                                Ï† content(Cons(S(nat$2), Cons(head$36, tail$36))).subsetOf(content(out))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/