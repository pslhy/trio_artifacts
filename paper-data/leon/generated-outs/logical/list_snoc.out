[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] =========================== Synthesizing 'list_snoc' ===========================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs, n
[[34m  Info  [0m]                                Î  â†“list_snoc(xs, n) && true
[[34m  Info  [0m]                                Ï† len(out) == S(len(xs)) && tl(out) == n
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /24,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_snoc(xs, n) && true
[[34m  Info  [0m]                          Ï† len(out) == S(len(xs)) && tl(out) == n
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_snoc(xs, n) && true
[[34m  Info  [0m]                          Ï† len(out) == S(len(xs)) && tl(out) == n
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  (â†“list_snoc(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† len(out) == S(len(xs)) && tl(out) == Z
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  (â†“list_snoc(xs, S(nat$2)) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                            Ï† len(out) == S(len(xs)) && tl(out) == S(nat$2)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  (â†“list_snoc(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† len(out) == S(len(xs)) && tl(out) == Z
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± xs
[[34m  Info  [0m]                          Î  (â†“list_snoc(xs, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† len(out) == S(len(xs)) && tl(out) == Z
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± xs, n
[[34m  Info  [0m]                          Î  â†“list_snoc(xs, n) && true
[[34m  Info  [0m]                          Ï† len(out) == S(len(xs)) && tl(out) == n
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /24,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“list_snoc(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† len(out) == S(len(Nil)) && tl(out) == n
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  (â†“list_snoc(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                            Ï† len(out) == S(len(Cons(head$12, tail$17))) && tl(out) == n
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“list_snoc(Nil, n) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† len(out) == S(len(Nil)) && tl(out) == n
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, Nil) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_snoc$0(tail$17, n$0)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                               Î  (â†“list_snoc(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                                               Ï† len(out) == S(len(Cons(head$12, tail$17))) && tl(out) == n
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /19,0/
[[34m  Info  [0m] [Introduce calls list_snoc$0(tail$17, n$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_snoc$0(tail$17, n$0)] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                 Î  val rec$11: NatList = list_snoc(tail$17, n)
[[34m  Info  [0m]                                                   (â†“list_snoc(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_snoc(tail$17, n)) && true
[[34m  Info  [0m]                                                 Ï† len(out) == S(len(Cons(head$12, tail$17))) && tl(out) == n
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$11: NatList = list_snoc(tail$17, n)
[[34m  Info  [0m]                                  (â†“list_snoc(Cons(head$12, tail$17), n) && è°¶Cons(head$12, tail$17) && â†“list_snoc(tail$17, n)) && true
[[34m  Info  [0m]                                Ï† len(out) == S(len(Cons(head$12, tail$17))) && tl(out) == n
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /19,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] Finished in 11818ms
[[34m  Info  [0m] ================================== list_snoc ==================================
[[34m  Info  [0m] def list_snoc(xs : NatList, n : Nat): NatList =  {
[[34m  Info  [0m]   xs match {
[[34m  Info  [0m]     case Nil =>
[[34m  Info  [0m]       Cons(n, Nil)
[[34m  Info  [0m]     case Cons(head, tail) =>
[[34m  Info  [0m]       Cons(n, list_snoc(tail, n))
[[34m  Info  [0m]   }
[[34m  Info  [0m] } ensuring {
[[34m  Info  [0m]   (out : NatList) => len(out) == S(len(xs)) && tl(out) == n
[[34m  Info  [0m] }
[[34m  Info  [0m] 