[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] ====================== Synthesizing 'tree_nodes_at_level' ======================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± t, n
[[34m  Info  [0m]                                Î  â†“tree_nodes_at_level(t, n) && true
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /27,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± t, n
[[34m  Info  [0m]                          Î  â†“tree_nodes_at_level(t, n) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /27,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± t, n
[[34m  Info  [0m]                          Î  â†“tree_nodes_at_level(t, n) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /27,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± t
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† t match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /18,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                            Ï† t match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± t
[[34m  Info  [0m]                                Î  (â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /18,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± t
[[34m  Info  [0m]                          Î  (â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /18,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 't'    ] âŸ¦ Î± t, n
[[34m  Info  [0m]                          Î  â†“tree_nodes_at_level(t, n) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /27,0/
[[34m  Info  [0m] [ADT Split on 't'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Leaf match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Leaf match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Z âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 't'    ] âŸ¦ Î± t
[[34m  Info  [0m]                          Î  (â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /18,0/
[[34m  Info  [0m] [ADT Split on 't'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± ()
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Leaf match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /1,0/
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± left$26, n$2356, right$26
[[34m  Info  [0m]                            Î  (â†“tree_nodes_at_level(Node(left$26, n$2356, right$26), Z) && è°¶Z && è°¶Node(left$26, n$2356, right$26)) && true
[[34m  Info  [0m]                            Ï† Node(left$26, n$2356, right$26) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [Ground              ] âŸ¦ Î± ()
[[34m  Info  [0m]                          Î  (â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Leaf match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /1,0/
[[34m  Info  [0m] [Ground              ] Solved  with:  âŸ¨ true |  Z âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$19, n$1), tree_nodes_at_level$0(right$19, n$1)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                                                                               Î  (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19)) && true
[[34m  Info  [0m]                                                                                               Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                                                                                   case Leaf =>
[[34m  Info  [0m]                                                                                                     out == Z
[[34m  Info  [0m]                                                                                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                     n match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                     n match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case S(Z) =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                     n match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case S(Z) =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case _ =>
[[34m  Info  [0m]                                                                                                     true
[[34m  Info  [0m]                                                                                                 }
[[34m  Info  [0m]                                                                                               x out
[[34m  Info  [0m]                                                                                             âŸ§ /23,0/
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$19, n$1), tree_nodes_at_level$0(right$19, n$1)] Decomposed into:
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$19, n$1), tree_nodes_at_level$0(right$19, n$1)] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                                                                                 Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                                                                                   val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                                                                                   (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                                                                                                 Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                                                                                     case Leaf =>
[[34m  Info  [0m]                                                                                                       out == Z
[[34m  Info  [0m]                                                                                                     case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                       n match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                       n match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case S(Z) =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                       n match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case S(Z) =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case _ =>
[[34m  Info  [0m]                                                                                                       true
[[34m  Info  [0m]                                                                                                   }
[[34m  Info  [0m]                                                                                                 x out
[[34m  Info  [0m]                                                                                               âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, T, right$19), n) && è°¶Node(left$19, T, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶T) && true
[[34m  Info  [0m]                            Ï† Node(left$19, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$16, left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$16))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$16))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$16)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$16)) && â†“tree_nodes_at_level(right$19, S(nat$16)) && è°¶S(nat$16)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$16) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$16) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$16) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$17: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶S(nat$17) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$18: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶S(nat$18) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$26, Z$0), tree_nodes_at_level$0(right$26, Z$0)] âŸ¦ Î± left$26, n$2356, right$26
[[34m  Info  [0m]                                                                                               Î  (â†“tree_nodes_at_level(Node(left$26, n$2356, right$26), Z) && è°¶Z && è°¶Node(left$26, n$2356, right$26)) && true
[[34m  Info  [0m]                                                                                               Ï† Node(left$26, n$2356, right$26) match {
[[34m  Info  [0m]                                                                                                   case Leaf =>
[[34m  Info  [0m]                                                                                                     out == Z
[[34m  Info  [0m]                                                                                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                     Z match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                     Z match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case S(Z) =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                     Z match {
[[34m  Info  [0m]                                                                                                       case Z =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case S(Z) =>
[[34m  Info  [0m]                                                                                                         out == S(Z)
[[34m  Info  [0m]                                                                                                       case _ =>
[[34m  Info  [0m]                                                                                                         out == Z
[[34m  Info  [0m]                                                                                                     }
[[34m  Info  [0m]                                                                                                   case _ =>
[[34m  Info  [0m]                                                                                                     true
[[34m  Info  [0m]                                                                                                 }
[[34m  Info  [0m]                                                                                               x out
[[34m  Info  [0m]                                                                                             âŸ§ /17,0/
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$26, Z$0), tree_nodes_at_level$0(right$26, Z$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(left$26, Z$0), tree_nodes_at_level$0(right$26, Z$0)] - âŸ¦ Î± left$26, n$2356, right$26
[[34m  Info  [0m]                                                                                                 Î  val rec$13: Nat = tree_nodes_at_level(left$26, Z)
[[34m  Info  [0m]                                                                                                   val rec$14: Nat = tree_nodes_at_level(right$26, Z)
[[34m  Info  [0m]                                                                                                   (â†“tree_nodes_at_level(Node(left$26, n$2356, right$26), Z) && è°¶Z && è°¶Node(left$26, n$2356, right$26) && â†“tree_nodes_at_level(left$26, Z) && â†“tree_nodes_at_level(right$26, Z)) && true
[[34m  Info  [0m]                                                                                                 Ï† Node(left$26, n$2356, right$26) match {
[[34m  Info  [0m]                                                                                                     case Leaf =>
[[34m  Info  [0m]                                                                                                       out == Z
[[34m  Info  [0m]                                                                                                     case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                       Z match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                       Z match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case S(Z) =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                       Z match {
[[34m  Info  [0m]                                                                                                         case Z =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case S(Z) =>
[[34m  Info  [0m]                                                                                                           out == S(Z)
[[34m  Info  [0m]                                                                                                         case _ =>
[[34m  Info  [0m]                                                                                                           out == Z
[[34m  Info  [0m]                                                                                                       }
[[34m  Info  [0m]                                                                                                     case _ =>
[[34m  Info  [0m]                                                                                                       true
[[34m  Info  [0m]                                                                                                   }
[[34m  Info  [0m]                                                                                                 x out
[[34m  Info  [0m]                                                                                               âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$26, n$2356, right$26
[[34m  Info  [0m]                                Î  val rec$13: Nat = tree_nodes_at_level(left$26, Z)
[[34m  Info  [0m]                                  val rec$14: Nat = tree_nodes_at_level(right$26, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$26, n$2356, right$26), Z) && è°¶Z && è°¶Node(left$26, n$2356, right$26) && â†“tree_nodes_at_level(left$26, Z) && â†“tree_nodes_at_level(right$26, Z)) && true
[[34m  Info  [0m]                                Ï† Node(left$26, n$2356, right$26) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$26, n$2356, right$26
[[34m  Info  [0m]                          Î  val rec$13: Nat = tree_nodes_at_level(left$26, Z)
[[34m  Info  [0m]                            val rec$14: Nat = tree_nodes_at_level(right$26, Z)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$26, n$2356, right$26), Z) && è°¶Z && è°¶Node(left$26, n$2356, right$26) && â†“tree_nodes_at_level(left$26, Z) && â†“tree_nodes_at_level(right$26, Z)) && true
[[34m  Info  [0m]                          Ï† Node(left$26, n$2356, right$26) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$36, n$2520, right$36, n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$36, n$2520, right$36), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Node(left$36, n$2520, right$36), n$792, right$19), n) && è°¶Node(Node(left$36, n$2520, right$36), n$792, right$19) && â†“tree_nodes_at_level(Node(left$36, n$2520, right$36), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Node(left$36, n$2520, right$36)) && true
[[34m  Info  [0m]                              Ï† Node(Node(left$36, n$2520, right$36), n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n)) && true
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$37, n$2521, right$37, left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$37, n$2521, right$37), n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Node(left$37, n$2521, right$37)), n) && è°¶Node(left$19, n$792, Node(left$37, n$2521, right$37)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$37, n$2521, right$37), n) && è°¶Node(left$37, n$2521, right$37)) && true
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Node(left$37, n$2521, right$37)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$24, left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$24))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$24))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, right$19), S(nat$24)) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, S(nat$24)) && â†“tree_nodes_at_level(right$19, S(nat$24)) && è°¶F && è°¶S(nat$24)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$24) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$24) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$24) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /11,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$25: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶S(nat$25) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$26: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶S(nat$26) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, right$19), n) && è°¶Node(left$19, T, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, right$19), n) && è°¶Node(left$19, T, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(t$0, nat$2)] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                                                       Î  (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                                                       Ï† t match {
[[34m  Info  [0m]                                                           case Leaf =>
[[34m  Info  [0m]                                                             out == Z
[[34m  Info  [0m]                                                           case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                             S(nat$2) match {
[[34m  Info  [0m]                                                               case Z =>
[[34m  Info  [0m]                                                                 out == S(Z)
[[34m  Info  [0m]                                                               case _ =>
[[34m  Info  [0m]                                                                 out == Z
[[34m  Info  [0m]                                                             }
[[34m  Info  [0m]                                                           case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                             S(nat$2) match {
[[34m  Info  [0m]                                                               case Z =>
[[34m  Info  [0m]                                                                 out == S(Z)
[[34m  Info  [0m]                                                               case S(Z) =>
[[34m  Info  [0m]                                                                 out == S(Z)
[[34m  Info  [0m]                                                               case _ =>
[[34m  Info  [0m]                                                                 out == Z
[[34m  Info  [0m]                                                             }
[[34m  Info  [0m]                                                           case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                             S(nat$2) match {
[[34m  Info  [0m]                                                               case Z =>
[[34m  Info  [0m]                                                                 out == S(Z)
[[34m  Info  [0m]                                                               case S(Z) =>
[[34m  Info  [0m]                                                                 out == S(Z)
[[34m  Info  [0m]                                                               case _ =>
[[34m  Info  [0m]                                                                 out == Z
[[34m  Info  [0m]                                                             }
[[34m  Info  [0m]                                                           case _ =>
[[34m  Info  [0m]                                                             true
[[34m  Info  [0m]                                                         }
[[34m  Info  [0m]                                                       x out
[[34m  Info  [0m]                                                     âŸ§ /9,0/
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(t$0, nat$2)] Decomposed into:
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(t$0, nat$2)] - âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                                                         Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                                           (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                                                         Ï† t match {
[[34m  Info  [0m]                                                             case Leaf =>
[[34m  Info  [0m]                                                               out == Z
[[34m  Info  [0m]                                                             case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                               S(nat$2) match {
[[34m  Info  [0m]                                                                 case Z =>
[[34m  Info  [0m]                                                                   out == S(Z)
[[34m  Info  [0m]                                                                 case _ =>
[[34m  Info  [0m]                                                                   out == Z
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                               S(nat$2) match {
[[34m  Info  [0m]                                                                 case Z =>
[[34m  Info  [0m]                                                                   out == S(Z)
[[34m  Info  [0m]                                                                 case S(Z) =>
[[34m  Info  [0m]                                                                   out == S(Z)
[[34m  Info  [0m]                                                                 case _ =>
[[34m  Info  [0m]                                                                   out == Z
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                               S(nat$2) match {
[[34m  Info  [0m]                                                                 case Z =>
[[34m  Info  [0m]                                                                   out == S(Z)
[[34m  Info  [0m]                                                                 case S(Z) =>
[[34m  Info  [0m]                                                                   out == S(Z)
[[34m  Info  [0m]                                                                 case _ =>
[[34m  Info  [0m]                                                                   out == Z
[[34m  Info  [0m]                                                               }
[[34m  Info  [0m]                                                             case _ =>
[[34m  Info  [0m]                                                               true
[[34m  Info  [0m]                                                           }
[[34m  Info  [0m]                                                         x out
[[34m  Info  [0m]                                                       âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                                Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                          Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$38, left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$38))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$38))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$38)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$38)) && â†“tree_nodes_at_level(right$19, S(nat$38)) && è°¶Z && inactive(rec$11) && è°¶S(nat$38)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$38) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$38) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$38) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$39: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶S(nat$39) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$141, left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$141))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$141))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$141)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$141)) && â†“tree_nodes_at_level(right$19, S(nat$141)) && è°¶Z && inactive(rec$12) && è°¶S(nat$141)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$141) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$141) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$141) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$142: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶S(nat$142) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /23,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, T, right$19), n) && è°¶Node(Leaf, T, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶T) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                              Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$1661, n$5762, right$1661, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$1661, n$5762, right$1661), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Node(left$1661, n$5762, right$1661), F, right$19), n) && è°¶Node(Node(left$1661, n$5762, right$1661), F, right$19) && â†“tree_nodes_at_level(Node(left$1661, n$5762, right$1661), n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Node(left$1661, n$5762, right$1661)) && true
[[34m  Info  [0m]                              Ï† Node(Node(left$1661, n$5762, right$1661), F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F) && true
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                               Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$1662, n$5763, right$1662, left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$1662, n$5763, right$1662), n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Node(left$1662, n$5763, right$1662)), n) && è°¶Node(left$19, F, Node(left$1662, n$5763, right$1662)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$1662, n$5763, right$1662), n) && è°¶F && è°¶Node(left$1662, n$5763, right$1662)) && true
[[34m  Info  [0m]                               Ï† Node(left$19, F, Node(left$1662, n$5763, right$1662)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, T, Leaf), n) && è°¶Node(left$19, T, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶T) && true
[[34m  Info  [0m]                            Ï† Node(left$19, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$246, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$246))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$246))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), S(nat$246)) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$246)) && â†“tree_nodes_at_level(right$19, S(nat$246)) && è°¶Leaf && è°¶S(nat$246)) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$246) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$246) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$246) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$247: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶S(nat$247) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$248: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶S(nat$248) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$254, left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$254))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$254))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), S(nat$254)) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$254)) && â†“tree_nodes_at_level(Leaf, S(nat$254)) && è°¶Leaf && è°¶S(nat$254)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$254) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$254) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$254) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$12) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$255: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶S(nat$255) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$256: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶S(nat$256) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$3619, n$7720, right$3619, n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$3619, n$7720, right$3619), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$3619, n$7720, right$3619), n$792, right$19), n) && è°¶Node(Node(left$3619, n$7720, right$3619), n$792, right$19) && â†“tree_nodes_at_level(Node(left$3619, n$7720, right$3619), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Node(left$3619, n$7720, right$3619)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$3619, n$7720, right$3619), n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$3620, n$7721, right$3620, left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$3620, n$7721, right$3620), n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Node(left$3620, n$7721, right$3620)), n) && è°¶Node(left$19, n$792, Node(left$3620, n$7721, right$3620)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$3620, n$7721, right$3620), n) && è°¶Z && inactive(rec$11) && è°¶Node(left$3620, n$7721, right$3620)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Node(left$3620, n$7721, right$3620)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$6584, n$13258, right$5084, n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$6584, n$13258, right$5084), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$6584, n$13258, right$5084), n$792, right$19), n) && è°¶Node(Node(left$6584, n$13258, right$5084), n$792, right$19) && â†“tree_nodes_at_level(Node(left$6584, n$13258, right$5084), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Node(left$6584, n$13258, right$5084)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$6584, n$13258, right$5084), n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$6585, n$13259, right$5085, left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$6585, n$13259, right$5085), n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Node(left$6585, n$13259, right$5085)), n) && è°¶Node(left$19, n$792, Node(left$6585, n$13259, right$5085)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$6585, n$13259, right$5085), n) && è°¶Z && inactive(rec$12) && è°¶Node(left$6585, n$13259, right$5085)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Node(left$6585, n$13259, right$5085)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf) && true
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$8382, n$19129, right$8382, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$8382, n$19129, right$8382), n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Node(left$8382, n$19129, right$8382)), n) && è°¶Node(Leaf, n$792, Node(left$8382, n$19129, right$8382)) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Node(left$8382, n$19129, right$8382), n) && è°¶Leaf && è°¶Node(left$8382, n$19129, right$8382)) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Node(left$8382, n$19129, right$8382)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$8389, n$22370, right$10006, n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$8389, n$22370, right$10006), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Node(left$8389, n$22370, right$10006), n$792, Leaf), n) && è°¶Node(Node(left$8389, n$22370, right$10006), n$792, Leaf) && â†“tree_nodes_at_level(Node(left$8389, n$22370, right$10006), n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Node(left$8389, n$22370, right$10006)) && true
[[34m  Info  [0m]                              Ï† Node(Node(left$8389, n$22370, right$10006), n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$268, left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$268))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$268))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), S(nat$268)) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, S(nat$268)) && â†“tree_nodes_at_level(right$19, S(nat$268)) && è°¶F && è°¶Z && inactive(rec$11) && è°¶S(nat$268)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$268) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$268) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$268) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /11,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$269: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶S(nat$269) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$371, left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$371))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$371))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), S(nat$371)) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, S(nat$371)) && â†“tree_nodes_at_level(right$19, S(nat$371)) && è°¶F && è°¶Z && inactive(rec$12) && è°¶S(nat$371)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$371) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$371) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$371) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /11,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$372: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶S(nat$372) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$473, left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$473))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$473))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), S(nat$473)) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, S(nat$473)) && â†“tree_nodes_at_level(right$19, S(nat$473)) && è°¶Z && inactive(rec$11) && è°¶F && è°¶S(nat$473)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$473) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$473) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$473) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /11,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$474: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶S(nat$474) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶F) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, right$19), n) && è°¶Node(left$19, T, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶T) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶F) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶F) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$574, left$19, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$574))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$574))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), S(nat$574)) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, S(nat$574)) && â†“tree_nodes_at_level(right$19, S(nat$574)) && è°¶Z && inactive(rec$12) && è°¶F && è°¶S(nat$574)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$574) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$574) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$574) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), Z) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /11,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$575: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶S(nat$575) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶F) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, right$19), n) && è°¶Node(left$19, T, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶T) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶F) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /15,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶F) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /15,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'nat$2'] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                          Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± t
[[34m  Info  [0m]                            Î  val rec$1696: Nat = tree_nodes_at_level(t, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(t, S(Z)) && è°¶S(Z) && â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† t match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(Z) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(Z) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(Z) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'nat$2'] - âŸ¦ Î± nat$673, t
[[34m  Info  [0m]                            Î  val rec$1696: Nat = tree_nodes_at_level(t, S(nat$673))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(t, S(S(nat$673))) && è°¶S(S(nat$673)) && â†“tree_nodes_at_level(t, S(nat$673)) && è°¶S(nat$673)) && true
[[34m  Info  [0m]                            Ï† t match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(S(nat$673)) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(S(nat$673)) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(S(nat$673)) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± t
[[34m  Info  [0m]                                Î  val rec$1696: Nat = tree_nodes_at_level(t, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(t, S(Z)) && è°¶S(Z) && â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(Z) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(Z) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(Z) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± t
[[34m  Info  [0m]                          Î  val rec$1696: Nat = tree_nodes_at_level(t, Z)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(t, S(Z)) && è°¶S(Z) && â†“tree_nodes_at_level(t, Z) && è°¶Z) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                S(Z) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                S(Z) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                S(Z) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$1696'] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                             Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                             Ï† t match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   S(nat$2) match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   S(nat$2) match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   S(nat$2) match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$1696'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$1696'] - âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                               Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                 (rec$1696 == Z) && ((â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2) && è°¶Z && inactive(rec$1696)) && true)
[[34m  Info  [0m]                               Ï† t match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 'rec$1696'] - âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                               Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                 rec$1696.isInstanceOf[S] && {
[[34m  Info  [0m]                                   val nat$674: Nat = rec$1696.nat
[[34m  Info  [0m]                                   (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2) && è°¶S(nat$674) && inactive(rec$1696)) && true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               Ï† t match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     S(nat$2) match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                                Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                  (rec$1696 == Z) && ((â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2) && è°¶Z && inactive(rec$1696)) && true)
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Z âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                                Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                                  rec$1696.isInstanceOf[S] && {
[[34m  Info  [0m]                                    val nat$674: Nat = rec$1696.nat
[[34m  Info  [0m]                                    (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2) && è°¶S(nat$674) && inactive(rec$1696)) && true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                Ï† t match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                          Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                            rec$1696.isInstanceOf[S] && {
[[34m  Info  [0m]                              val nat$674: Nat = rec$1696.nat
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2) && è°¶S(nat$674) && inactive(rec$1696)) && true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2570, left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$2570))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$2570))
[[34m  Info  [0m]                              (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$2570)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$2570)) && â†“tree_nodes_at_level(right$19, S(nat$2570)) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶S(nat$2570)) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2570) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2570) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$2570) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Z) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /17,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2961, left$19, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$2961))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$2961))
[[34m  Info  [0m]                              (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$2961)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$2961)) && â†“tree_nodes_at_level(right$19, S(nat$2961)) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶S(nat$2961)) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2961) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2961) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$2961) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Z) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /17,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), Z) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Z) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /17,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, right$19), Z) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3151, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$3151))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$3151))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, right$19), S(nat$3151)) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$3151)) && â†“tree_nodes_at_level(right$19, S(nat$3151)) && è°¶Leaf && è°¶F && è°¶S(nat$3151)) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3151) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3151) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3151) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, right$19), Z) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3152: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶S(nat$3152) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3153: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶S(nat$3153) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, T, right$19), n) && è°¶Node(Leaf, T, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, T, right$19), n) && è°¶Node(Leaf, T, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, right$19), Z) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3159, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$3159))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$3159))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, right$19), S(nat$3159)) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$3159)) && â†“tree_nodes_at_level(right$19, S(nat$3159)) && è°¶F && è°¶Leaf && è°¶S(nat$3159)) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3159) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3159) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3159) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, right$19), Z) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶F && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3160: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶S(nat$3160) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3161: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶S(nat$3161) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), Z) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶F && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3167, left$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$3167))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$3167))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), S(nat$3167)) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$3167)) && â†“tree_nodes_at_level(Leaf, S(nat$3167)) && è°¶F && è°¶Leaf && è°¶S(nat$3167)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3167) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3167) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3167) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, Leaf), Z) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶F && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$12) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3168: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶S(nat$3168) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3169: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶S(nat$3169) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$10346, n$25616, right$10346, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$10346, n$25616, right$10346), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$10346, n$25616, right$10346), F, right$19), n) && è°¶Node(Node(left$10346, n$25616, right$10346), F, right$19) && â†“tree_nodes_at_level(Node(left$10346, n$25616, right$10346), n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Node(left$10346, n$25616, right$10346)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$10346, n$25616, right$10346), F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$10347, n$25617, right$10347, left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$10347, n$25617, right$10347), n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Node(left$10347, n$25617, right$10347)), n) && è°¶Node(left$19, F, Node(left$10347, n$25617, right$10347)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$10347, n$25617, right$10347), n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Node(left$10347, n$25617, right$10347)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Node(left$10347, n$25617, right$10347)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$13560, n$30144, right$11907, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$13560, n$30144, right$11907), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$13560, n$30144, right$11907), F, right$19), n) && è°¶Node(Node(left$13560, n$30144, right$11907), F, right$19) && â†“tree_nodes_at_level(Node(left$13560, n$30144, right$11907), n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Node(left$13560, n$30144, right$11907)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$13560, n$30144, right$11907), F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$13561, n$30145, right$11908, left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$13561, n$30145, right$11908), n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Node(left$13561, n$30145, right$11908)), n) && è°¶Node(left$19, F, Node(left$13561, n$30145, right$11908)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$13561, n$30145, right$11908), n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Node(left$13561, n$30145, right$11908)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Node(left$13561, n$30145, right$11908)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), Z) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3175, left$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$3175))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$3175))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), S(nat$3175)) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$3175)) && â†“tree_nodes_at_level(Leaf, S(nat$3175)) && è°¶Leaf && è°¶F && è°¶S(nat$3175)) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3175) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3175) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3175) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, F, Leaf), Z) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶F && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$12) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3176: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶S(nat$3176) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                           Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3177: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶S(nat$3177) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, Leaf), n) && è°¶Node(left$19, T, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, Leaf), n) && è°¶Node(left$19, T, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, T, right$19), n) && è°¶Node(Leaf, T, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$14769, n$34141, right$14762, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$14769, n$34141, right$14762), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$14769, n$34141, right$14762), F, right$19), n) && è°¶Node(Node(left$14769, n$34141, right$14762), F, right$19) && â†“tree_nodes_at_level(Node(left$14769, n$34141, right$14762), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Node(left$14769, n$34141, right$14762)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$14769, n$34141, right$14762), F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶F) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$14770, n$34142, right$14763, left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$14770, n$34142, right$14763), n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Node(left$14770, n$34142, right$14763)), n) && è°¶Node(left$19, F, Node(left$14770, n$34142, right$14763)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$14770, n$34142, right$14763), n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Node(left$14770, n$34142, right$14763)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Node(left$14770, n$34142, right$14763)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, Leaf), n) && è°¶Node(left$19, T, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, T, right$19), n) && è°¶Node(Leaf, T, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, T, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$17161, n$37502, right$15735, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$17161, n$37502, right$15735), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$17161, n$37502, right$15735), F, right$19), n) && è°¶Node(Node(left$17161, n$37502, right$15735), F, right$19) && â†“tree_nodes_at_level(Node(left$17161, n$37502, right$15735), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Node(left$17161, n$37502, right$15735)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$17161, n$37502, right$15735), F, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /8,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, right$19), n) && è°¶Node(left$19, F, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶F) && true)
[[34m  Info  [0m]                             Ï† Node(left$19, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /15,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$17162, n$37503, right$15736, left$19, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$17162, n$37503, right$15736), n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Node(left$17162, n$37503, right$15736)), n) && è°¶Node(left$19, F, Node(left$17162, n$37503, right$15736)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$17162, n$37503, right$15736), n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Node(left$17162, n$37503, right$15736)) && true)
[[34m  Info  [0m]                               Ï† Node(left$19, F, Node(left$17162, n$37503, right$15736)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /9,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶F && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, T, Leaf), n) && è°¶Node(left$19, T, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶T) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /4,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶F) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /6,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 't'    ] âŸ¦ Î± nat$2, t
[[34m  Info  [0m]                          Î  val rec$1696: Nat = tree_nodes_at_level(t, nat$2)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(t, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(t, nat$2)) && true
[[34m  Info  [0m]                          Ï† t match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                S(nat$2) match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /9,0/
[[34m  Info  [0m] [ADT Split on 't'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± nat$2
[[34m  Info  [0m]                            Î  val rec$1696: Nat = tree_nodes_at_level(Leaf, nat$2)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Leaf, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(Leaf, nat$2) && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Leaf match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 't'    ] - âŸ¦ Î± left$18134, n$40863, right$18127, nat$2
[[34m  Info  [0m]                            Î  val rec$1696: Nat = tree_nodes_at_level(Node(left$18134, n$40863, right$18127), nat$2)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$18134, n$40863, right$18127), S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(Node(left$18134, n$40863, right$18127), nat$2) && è°¶Node(left$18134, n$40863, right$18127)) && true
[[34m  Info  [0m]                            Ï† Node(left$18134, n$40863, right$18127) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$2) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2
[[34m  Info  [0m]                                Î  val rec$1696: Nat = tree_nodes_at_level(Leaf, nat$2)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Leaf, S(nat$2)) && è°¶S(nat$2) && â†“tree_nodes_at_level(Leaf, nat$2) && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Leaf match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(nat$2) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Z âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3291, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$3291))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$3291))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), S(nat$3291)) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$3291)) && â†“tree_nodes_at_level(right$19, S(nat$3291)) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶S(nat$3291)) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3291) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3291) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3291) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3292: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶S(nat$3292) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3394, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$3394))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$3394))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), S(nat$3394)) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$3394)) && â†“tree_nodes_at_level(right$19, S(nat$3394)) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶S(nat$3394)) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3394) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3394) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3394) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3395: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶S(nat$3395) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3599, left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$3599))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$3599))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), S(nat$3599)) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$3599)) && â†“tree_nodes_at_level(Leaf, S(nat$3599)) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶S(nat$3599)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3599) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3599) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3599) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$12) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3600: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶S(nat$3600) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3702, left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$3702))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$3702))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), S(nat$3702)) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$3702)) && â†“tree_nodes_at_level(Leaf, S(nat$3702)) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶S(nat$3702)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3702) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3702) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3702) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3703: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶S(nat$3703) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3805, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$3805))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$3805))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), S(nat$3805)) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$3805)) && â†“tree_nodes_at_level(right$19, S(nat$3805)) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶S(nat$3805)) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3805) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3805) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3805) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3806: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶S(nat$3806) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$3908, left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$3908))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$3908))
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), S(nat$3908)) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$3908)) && â†“tree_nodes_at_level(Leaf, S(nat$3908)) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶S(nat$3908)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3908) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$3908) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$3908) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$12) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && (rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$3909: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶S(nat$3909) && inactive(rec$12)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$21063, n$42454, right$20572, n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$21063, n$42454, right$20572), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$21063, n$42454, right$20572), n$792, right$19), n) && è°¶Node(Node(left$21063, n$42454, right$20572), n$792, right$19) && â†“tree_nodes_at_level(Node(left$21063, n$42454, right$20572), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Node(left$21063, n$42454, right$20572)) && true))
[[34m  Info  [0m]                              Ï† Node(Node(left$21063, n$42454, right$20572), n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$21064, n$42455, right$20573, left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$21064, n$42455, right$20573), n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Node(left$21064, n$42455, right$20573)), n) && è°¶Node(left$19, n$792, Node(left$21064, n$42455, right$20573)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$21064, n$42455, right$20573), n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Node(left$21064, n$42455, right$20573)) && true))
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Node(left$21064, n$42455, right$20573)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$11) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4011, n$792, right$19
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$4011))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$4011))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), S(nat$4011)) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, S(nat$4011)) && â†“tree_nodes_at_level(right$19, S(nat$4011)) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶S(nat$4011)) && true)
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4011) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4011) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$4011) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), Z) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(right$19, Z) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4012: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶S(nat$4012) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /7,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4114, left$19, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$4114))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$4114))
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), S(nat$4114)) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, S(nat$4114)) && â†“tree_nodes_at_level(Leaf, S(nat$4114)) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶S(nat$4114)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4114) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4114) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$4114) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /7,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, Z)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), Z) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z) && true)
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                Z match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /7,0/
[[34m  Info  [0m] [Optimistic Ground   ] Solved  with:  âŸ¨ true |  S(Z) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                           Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && (rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4115: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶S(nat$4115) && inactive(rec$11)) && true
[[34m  Info  [0m]                               })
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$25934, n$49643, right$25927, n$792, right$19, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$25934, n$49643, right$25927), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$25934, n$49643, right$25927), n$792, right$19), n) && è°¶Node(Node(left$25934, n$49643, right$25927), n$792, right$19) && â†“tree_nodes_at_level(Node(left$25934, n$49643, right$25927), n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Node(left$25934, n$49643, right$25927)) && true))
[[34m  Info  [0m]                              Ï† Node(Node(left$25934, n$49643, right$25927), n$792, right$19) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /13,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± left$19, n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, right$19), n) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11)) && true))
[[34m  Info  [0m]                             Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /23,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$25935, n$49644, right$25928, left$19, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$25935, n$49644, right$25928), n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Node(left$25935, n$49644, right$25928)), n) && è°¶Node(left$19, n$792, Node(left$25935, n$49644, right$25928)) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Node(left$25935, n$49644, right$25928), n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Node(left$25935, n$49644, right$25928)) && true))
[[34m  Info  [0m]                               Ï† Node(left$19, n$792, Node(left$25935, n$49644, right$25928)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /13,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /10,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Z && inactive(rec$12) && è°¶Z && inactive(rec$11) && è°¶Leaf) && true))
[[34m  Info  [0m]                          Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /10,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$28367, n$55248, right$28360, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$28367, n$55248, right$28360), n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, Node(left$28367, n$55248, right$28360)), n) && è°¶Node(Leaf, F, Node(left$28367, n$55248, right$28360)) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Node(left$28367, n$55248, right$28360), n) && è°¶Leaf && è°¶F && è°¶Node(left$28367, n$55248, right$28360)) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, F, Node(left$28367, n$55248, right$28360)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, T, Leaf), n) && è°¶Node(Leaf, T, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶T) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (â†“tree_nodes_at_level(Node(Leaf, F, right$19), n) && è°¶Node(Leaf, F, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                             Ï† Node(Leaf, F, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /8,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$28374, n$56872, right$29984, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$28374, n$56872, right$29984), n)
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, F, Node(left$28374, n$56872, right$29984)), n) && è°¶Node(Leaf, F, Node(left$28374, n$56872, right$29984)) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Node(left$28374, n$56872, right$29984), n) && è°¶F && è°¶Leaf && è°¶Node(left$28374, n$56872, right$29984)) && true
[[34m  Info  [0m]                               Ï† Node(Leaf, F, Node(left$28374, n$56872, right$29984)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                              Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$28381, n$58496, right$31608, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$28381, n$58496, right$31608), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Node(left$28381, n$58496, right$31608), F, Leaf), n) && è°¶Node(Node(left$28381, n$58496, right$31608), F, Leaf) && â†“tree_nodes_at_level(Node(left$28381, n$58496, right$31608), n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Node(left$28381, n$58496, right$31608)) && true
[[34m  Info  [0m]                              Ï† Node(Node(left$28381, n$58496, right$31608), F, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶F && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n$792'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'n$792'] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, T, Leaf), n) && è°¶Node(Leaf, T, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶T) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, T, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(left$19, F, Leaf), n) && è°¶Node(left$19, F, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F) && true
[[34m  Info  [0m]                            Ï† Node(left$19, F, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /6,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                              Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$30005, n$60120, right$31615, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$30005, n$60120, right$31615), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (â†“tree_nodes_at_level(Node(Node(left$30005, n$60120, right$31615), F, Leaf), n) && è°¶Node(Node(left$30005, n$60120, right$31615), F, Leaf) && â†“tree_nodes_at_level(Node(left$30005, n$60120, right$31615), n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Node(left$30005, n$60120, right$31615)) && true
[[34m  Info  [0m]                              Ï† Node(Node(left$30005, n$60120, right$31615), F, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, F, Leaf), n) && è°¶Node(Leaf, F, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶F && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, F, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /3,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), Z) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4215, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$4215))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$4215))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), S(nat$4215)) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, S(nat$4215)) && â†“tree_nodes_at_level(Leaf, S(nat$4215)) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4215)) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4215) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4215) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$4215) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), Z) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4216: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4216) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4217: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4217) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$31957, n$62598, right$32114, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$31957, n$62598, right$32114), n)
[[34m  Info  [0m]                                 (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Node(left$31957, n$62598, right$32114)), n) && è°¶Node(Leaf, n$792, Node(left$31957, n$62598, right$32114)) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Node(left$31957, n$62598, right$32114), n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Node(left$31957, n$62598, right$32114)) && true)
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Node(left$31957, n$62598, right$32114)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'right$19'] âŸ¦ Î± n$792, right$19, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(right$19, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, right$19), n) && è°¶Node(Leaf, n$792, right$19) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(right$19, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, right$19) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /13,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'right$19'] - âŸ¦ Î± left$32282, n$68633, right$33762, n$792, n
[[34m  Info  [0m]                               Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                 val rec$12: Nat = tree_nodes_at_level(Node(left$32282, n$68633, right$33762), n)
[[34m  Info  [0m]                                 (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Node(left$32282, n$68633, right$33762)), n) && è°¶Node(Leaf, n$792, Node(left$32282, n$68633, right$33762)) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Node(left$32282, n$68633, right$33762), n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Node(left$32282, n$68633, right$33762)) && true)
[[34m  Info  [0m]                               Ï† Node(Leaf, n$792, Node(left$32282, n$68633, right$33762)) match {
[[34m  Info  [0m]                                   case Leaf =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                   case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                     n match {
[[34m  Info  [0m]                                       case Z =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case S(Z) =>
[[34m  Info  [0m]                                         out == S(Z)
[[34m  Info  [0m]                                       case _ =>
[[34m  Info  [0m]                                         out == Z
[[34m  Info  [0m]                                     }
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     true
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               x out
[[34m  Info  [0m]                             âŸ§ /8,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), Z) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  Z match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /2,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$4223, n$792
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(Leaf, S(nat$4223))
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, S(nat$4223))
[[34m  Info  [0m]                              (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), S(nat$4223)) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, S(nat$4223)) && â†“tree_nodes_at_level(Leaf, S(nat$4223)) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4223)) && true
[[34m  Info  [0m]                            Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4223) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  S(nat$4223) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  S(nat$4223) match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /3,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, Z)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), Z) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, Z) && â†“tree_nodes_at_level(Leaf, Z) && è°¶Leaf && è°¶Leaf && è°¶Z) && true
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      Z match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /2,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  S(rec$11) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'rec$11'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$11'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$11.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4224: Nat = rec$11.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4224) && inactive(rec$11)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'rec$12'] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                           Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                             (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf) && true
[[34m  Info  [0m]                           Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                               case Leaf =>
[[34m  Info  [0m]                                 out == Z
[[34m  Info  [0m]                               case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                 n match {
[[34m  Info  [0m]                                   case Z =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case S(Z) =>
[[34m  Info  [0m]                                     out == S(Z)
[[34m  Info  [0m]                                   case _ =>
[[34m  Info  [0m]                                     out == Z
[[34m  Info  [0m]                                 }
[[34m  Info  [0m]                               case _ =>
[[34m  Info  [0m]                                 true
[[34m  Info  [0m]                             }
[[34m  Info  [0m]                           x out
[[34m  Info  [0m]                         âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'rec$12'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                             Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                               rec$12.isInstanceOf[S] && {
[[34m  Info  [0m]                                 val nat$4225: Nat = rec$12.nat
[[34m  Info  [0m]                                 (â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶S(nat$4225) && inactive(rec$12)) && true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                 case Leaf =>
[[34m  Info  [0m]                                   out == Z
[[34m  Info  [0m]                                 case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                   n match {
[[34m  Info  [0m]                                     case Z =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case S(Z) =>
[[34m  Info  [0m]                                       out == S(Z)
[[34m  Info  [0m]                                     case _ =>
[[34m  Info  [0m]                                       out == Z
[[34m  Info  [0m]                                   }
[[34m  Info  [0m]                                 case _ =>
[[34m  Info  [0m]                                   true
[[34m  Info  [0m]                               }
[[34m  Info  [0m]                             x out
[[34m  Info  [0m]                           âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$33099, n$75554, right$37498, n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$33099, n$75554, right$37498), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$33099, n$75554, right$37498), n$792, Leaf), n) && è°¶Node(Node(left$33099, n$75554, right$37498), n$792, Leaf) && â†“tree_nodes_at_level(Node(left$33099, n$75554, right$37498), n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Node(left$33099, n$75554, right$37498)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$33099, n$75554, right$37498), n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$11 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$11) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'left$19'] âŸ¦ Î± left$19, n$792, n
[[34m  Info  [0m]                            Î  val rec$11: Nat = tree_nodes_at_level(left$19, n)
[[34m  Info  [0m]                              val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                              (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(left$19, n$792, Leaf), n) && è°¶Node(left$19, n$792, Leaf) && â†“tree_nodes_at_level(left$19, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12)) && true)
[[34m  Info  [0m]                            Ï† Node(left$19, n$792, Leaf) match {
[[34m  Info  [0m]                                case Leaf =>
[[34m  Info  [0m]                                  out == Z
[[34m  Info  [0m]                                case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                  n match {
[[34m  Info  [0m]                                    case Z =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case S(Z) =>
[[34m  Info  [0m]                                      out == S(Z)
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                case _ =>
[[34m  Info  [0m]                                  true
[[34m  Info  [0m]                              }
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /10,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                              Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'left$19'] - âŸ¦ Î± left$36507, n$81621, right$37823, n$792, n
[[34m  Info  [0m]                              Î  val rec$11: Nat = tree_nodes_at_level(Node(left$36507, n$81621, right$37823), n)
[[34m  Info  [0m]                                val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Node(left$36507, n$81621, right$37823), n$792, Leaf), n) && è°¶Node(Node(left$36507, n$81621, right$37823), n$792, Leaf) && â†“tree_nodes_at_level(Node(left$36507, n$81621, right$37823), n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Node(left$36507, n$81621, right$37823)) && true)
[[34m  Info  [0m]                              Ï† Node(Node(left$36507, n$81621, right$37823), n$792, Leaf) match {
[[34m  Info  [0m]                                  case Leaf =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                  case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                    n match {
[[34m  Info  [0m]                                      case Z =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case S(Z) =>
[[34m  Info  [0m]                                        out == S(Z)
[[34m  Info  [0m]                                      case _ =>
[[34m  Info  [0m]                                        out == Z
[[34m  Info  [0m]                                    }
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    true
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              x out
[[34m  Info  [0m]                            âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                                  (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                                Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      n match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n$792, n
[[34m  Info  [0m]                          Î  val rec$11: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            val rec$12: Nat = tree_nodes_at_level(Leaf, n)
[[34m  Info  [0m]                            (rec$12 == Z) && ((â†“tree_nodes_at_level(Node(Leaf, n$792, Leaf), n) && è°¶Node(Leaf, n$792, Leaf) && â†“tree_nodes_at_level(Leaf, n) && â†“tree_nodes_at_level(Leaf, n) && è°¶Leaf && è°¶Z && inactive(rec$12) && è°¶Leaf) && true)
[[34m  Info  [0m]                          Ï† Node(Leaf, n$792, Leaf) match {
[[34m  Info  [0m]                              case Leaf =>
[[34m  Info  [0m]                                out == Z
[[34m  Info  [0m]                              case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                n match {
[[34m  Info  [0m]                                  case Z =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case S(Z) =>
[[34m  Info  [0m]                                    out == S(Z)
[[34m  Info  [0m]                                  case _ =>
[[34m  Info  [0m]                                    out == Z
[[34m  Info  [0m]                                }
[[34m  Info  [0m]                              case _ =>
[[34m  Info  [0m]                                true
[[34m  Info  [0m]                            }
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(Node$0(left$19, n$792, right$19), nat$16), tree_nodes_at_level$0(left$19, nat$16), tree_nodes_at_level$0(right$19, nat$16)] âŸ¦ Î± nat$16, left$19, n$792, right$19
[[34m  Info  [0m]                                                                                                                                                                      Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$16))
[[34m  Info  [0m]                                                                                                                                                                        val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$16))
[[34m  Info  [0m]                                                                                                                                                                        (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$16)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$16)) && â†“tree_nodes_at_level(right$19, S(nat$16)) && è°¶S(nat$16)) && true
[[34m  Info  [0m]                                                                                                                                                                      Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                                                                                                                                                          case Leaf =>
[[34m  Info  [0m]                                                                                                                                                                            out == Z
[[34m  Info  [0m]                                                                                                                                                                          case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                                                                                            S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                              case Z =>
[[34m  Info  [0m]                                                                                                                                                                                out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                              case _ =>
[[34m  Info  [0m]                                                                                                                                                                                out == Z
[[34m  Info  [0m]                                                                                                                                                                            }
[[34m  Info  [0m]                                                                                                                                                                          case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                                                                                            S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                              case Z =>
[[34m  Info  [0m]                                                                                                                                                                                out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                              case S(Z) =>
[[34m  Info  [0m]                                                                                                                                                                                out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                              case _ =>
[[34m  Info  [0m]                                                                                                                                                                                out == Z
[[34m  Info  [0m]                                                                                                                                                                            }
[[34m  Info  [0m]                                                                                                                                                                          case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                                                                                            S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                              case Z =>
[[34m  Info  [0m]                                                                                                                                                                                out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                              case S(Z) =>
[[34m  Info  [0m]                                                                                                                                                                                out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                              case _ =>
[[34m  Info  [0m]                                                                                                                                                                                out == Z
[[34m  Info  [0m]                                                                                                                                                                            }
[[34m  Info  [0m]                                                                                                                                                                          case _ =>
[[34m  Info  [0m]                                                                                                                                                                            true
[[34m  Info  [0m]                                                                                                                                                                        }
[[34m  Info  [0m]                                                                                                                                                                      x out
[[34m  Info  [0m]                                                                                                                                                                    âŸ§ /6,0/
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(Node$0(left$19, n$792, right$19), nat$16), tree_nodes_at_level$0(left$19, nat$16), tree_nodes_at_level$0(right$19, nat$16)] Decomposed into:
[[34m  Info  [0m] [Introduce calls tree_nodes_at_level$0(Node$0(left$19, n$792, right$19), nat$16), tree_nodes_at_level$0(left$19, nat$16), tree_nodes_at_level$0(right$19, nat$16)] - âŸ¦ Î± nat$16, left$19, n$792, right$19
[[34m  Info  [0m]                                                                                                                                                                        Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$16))
[[34m  Info  [0m]                                                                                                                                                                          val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$16))
[[34m  Info  [0m]                                                                                                                                                                          val rec$1693: Nat = tree_nodes_at_level(Node(left$19, n$792, right$19), nat$16)
[[34m  Info  [0m]                                                                                                                                                                          val rec$1694: Nat = tree_nodes_at_level(left$19, nat$16)
[[34m  Info  [0m]                                                                                                                                                                          val rec$1695: Nat = tree_nodes_at_level(right$19, nat$16)
[[34m  Info  [0m]                                                                                                                                                                          (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$16)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$16)) && â†“tree_nodes_at_level(right$19, S(nat$16)) && è°¶S(nat$16) && â†“tree_nodes_at_level(Node(left$19, n$792, right$19), nat$16) && â†“tree_nodes_at_level(left$19, nat$16) && â†“tree_nodes_at_level(right$19, nat$16)) && true
[[34m  Info  [0m]                                                                                                                                                                        Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                                                                                                                                                            case Leaf =>
[[34m  Info  [0m]                                                                                                                                                                              out == Z
[[34m  Info  [0m]                                                                                                                                                                            case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                                                                                                                                                              S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                                case Z =>
[[34m  Info  [0m]                                                                                                                                                                                  out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                                case _ =>
[[34m  Info  [0m]                                                                                                                                                                                  out == Z
[[34m  Info  [0m]                                                                                                                                                                              }
[[34m  Info  [0m]                                                                                                                                                                            case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                                                                                                                                                              S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                                case Z =>
[[34m  Info  [0m]                                                                                                                                                                                  out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                                case S(Z) =>
[[34m  Info  [0m]                                                                                                                                                                                  out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                                case _ =>
[[34m  Info  [0m]                                                                                                                                                                                  out == Z
[[34m  Info  [0m]                                                                                                                                                                              }
[[34m  Info  [0m]                                                                                                                                                                            case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                                                                                                                                                              S(nat$16) match {
[[34m  Info  [0m]                                                                                                                                                                                case Z =>
[[34m  Info  [0m]                                                                                                                                                                                  out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                                case S(Z) =>
[[34m  Info  [0m]                                                                                                                                                                                  out == S(Z)
[[34m  Info  [0m]                                                                                                                                                                                case _ =>
[[34m  Info  [0m]                                                                                                                                                                                  out == Z
[[34m  Info  [0m]                                                                                                                                                                              }
[[34m  Info  [0m]                                                                                                                                                                            case _ =>
[[34m  Info  [0m]                                                                                                                                                                              true
[[34m  Info  [0m]                                                                                                                                                                          }
[[34m  Info  [0m]                                                                                                                                                                        x out
[[34m  Info  [0m]                                                                                                                                                                      âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$16, left$19, n$792, right$19
[[34m  Info  [0m]                                Î  val rec$11: Nat = tree_nodes_at_level(left$19, S(nat$16))
[[34m  Info  [0m]                                  val rec$12: Nat = tree_nodes_at_level(right$19, S(nat$16))
[[34m  Info  [0m]                                  val rec$1693: Nat = tree_nodes_at_level(Node(left$19, n$792, right$19), nat$16)
[[34m  Info  [0m]                                  val rec$1694: Nat = tree_nodes_at_level(left$19, nat$16)
[[34m  Info  [0m]                                  val rec$1695: Nat = tree_nodes_at_level(right$19, nat$16)
[[34m  Info  [0m]                                  (â†“tree_nodes_at_level(Node(left$19, n$792, right$19), S(nat$16)) && è°¶Node(left$19, n$792, right$19) && â†“tree_nodes_at_level(left$19, S(nat$16)) && â†“tree_nodes_at_level(right$19, S(nat$16)) && è°¶S(nat$16) && â†“tree_nodes_at_level(Node(left$19, n$792, right$19), nat$16) && â†“tree_nodes_at_level(left$19, nat$16) && â†“tree_nodes_at_level(right$19, nat$16)) && true
[[34m  Info  [0m]                                Ï† Node(left$19, n$792, right$19) match {
[[34m  Info  [0m]                                    case Leaf =>
[[34m  Info  [0m]                                      out == Z
[[34m  Info  [0m]                                    case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$16) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]                                      S(nat$16) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]                                      S(nat$16) match {
[[34m  Info  [0m]                                        case Z =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case S(Z) =>
[[34m  Info  [0m]                                          out == S(Z)
[[34m  Info  [0m]                                        case _ =>
[[34m  Info  [0m]                                          out == Z
[[34m  Info  [0m]                                      }
[[34m  Info  [0m]                                    case _ =>
[[34m  Info  [0m]                                      true
[[34m  Info  [0m]                                  }
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /6,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  nat_add(rec$1694, rec$1695) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] Finished in 455532ms
[[34m  Info  [0m] ============================= tree_nodes_at_level =============================
[[34m  Info  [0m] def tree_nodes_at_level(t : BooleanTree, n : Nat): Nat =  {
[[34m  Info  [0m]   t match {
[[34m  Info  [0m]     case Leaf =>
[[34m  Info  [0m]       Z
[[34m  Info  [0m]     case Node(left, n, right) =>
[[34m  Info  [0m]       n match {
[[34m  Info  [0m]         case Z =>
[[34m  Info  [0m]           S(Z)
[[34m  Info  [0m]         case S(nat) =>
[[34m  Info  [0m]           nat_add(tree_nodes_at_level(left, nat), tree_nodes_at_level(right, nat))
[[34m  Info  [0m]       }
[[34m  Info  [0m]   }
[[34m  Info  [0m] } ensuring {
[[34m  Info  [0m]   (out : Nat) => t match {
[[34m  Info  [0m]     case Leaf =>
[[34m  Info  [0m]       out == Z
[[34m  Info  [0m]     case Node(Leaf, _, Leaf) =>
[[34m  Info  [0m]       n match {
[[34m  Info  [0m]         case Z =>
[[34m  Info  [0m]           out == S(Z)
[[34m  Info  [0m]         case _ =>
[[34m  Info  [0m]           out == Z
[[34m  Info  [0m]       }
[[34m  Info  [0m]     case Node(Node(Leaf, _, Leaf), _, Leaf) =>
[[34m  Info  [0m]       n match {
[[34m  Info  [0m]         case Z =>
[[34m  Info  [0m]           out == S(Z)
[[34m  Info  [0m]         case S(Z) =>
[[34m  Info  [0m]           out == S(Z)
[[34m  Info  [0m]         case _ =>
[[34m  Info  [0m]           out == Z
[[34m  Info  [0m]       }
[[34m  Info  [0m]     case Node(Leaf, _, Node(Leaf, _, Leaf)) =>
[[34m  Info  [0m]       n match {
[[34m  Info  [0m]         case Z =>
[[34m  Info  [0m]           out == S(Z)
[[34m  Info  [0m]         case S(Z) =>
[[34m  Info  [0m]           out == S(Z)
[[34m  Info  [0m]         case _ =>
[[34m  Info  [0m]           out == Z
[[34m  Info  [0m]       }
[[34m  Info  [0m]     case _ =>
[[34m  Info  [0m]       true
[[34m  Info  [0m]   }
[[34m  Info  [0m] }
[[34m  Info  [0m] 