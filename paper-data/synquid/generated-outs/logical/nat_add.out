nat_add :: in1:Nat -> in2:Nat -> {Nat|(dec _v >= dec in1 && dec _v >= dec in2) && (in1 == (S ((S (Z)))) && in2 == (S ((S (Z)))) ==> _v == (S ((S ((S ((S (Z)))))))))}
benchmarks/postconditional/nat_add.sq:16: Error:
  Cannot find sufficiently strong refinements
  when checking Z ::
  {Nat|dec _v >= 0 && dec _v < dec in1}
  in
  \in1 . \in2 . 
      match nat_add Z ?? with
