fun (x:(nat -> nat) * list) ->
  (fun (x1:) ->
     (fun (fixf:) -> fixf)
       (fix (fixf : ) =
          fun (x0:) ->
            match x0 with
              | Nil y1 -> Nil
              | Cons y1 -> Cons (x1 (y1 . 0), fixf (y1 . 1))))
    (x . 0) (x . 1)
;
0.
;
0.
;
0.
;
0.
;
0.
;
0.
;
0.
;
0.
;
0.
;
0.
;
0