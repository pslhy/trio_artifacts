synthesizer :burst
prog : testcases/basic/bool_always_false.mls
fix (f : bool -> bool) = fun (x:bool) -> False
Size: 4
Iter: 0

Time(s): 0.01 
Mem(Kb): 14200


synthesizer :burst
prog : testcases/basic/bool_always_true.mls
fix (f : bool -> bool) = fun (x:bool) -> True
Size: 4
Iter: 0

Time(s): 0.01 
Mem(Kb): 14732


synthesizer :burst
prog : testcases/basic/bool_band.mls
fix (f : bool * bool -> bool) =
  fun (x:bool * bool) -> match x . 0 with
                           | False _ -> x . 0
                           | True _ -> x . 1
Size: 14
Iter: 0

Time(s): 0.02 
Mem(Kb): 16308


synthesizer :burst
prog : testcases/basic/bool_bor.mls
fix (f : bool * bool -> bool) =
  fun (x:bool * bool) -> match x . 1 with
                           | False _ -> x . 0
                           | True _ -> x . 1
Size: 14
Iter: 0

Time(s): 0.02 
Mem(Kb): 16308


synthesizer :burst
prog : testcases/basic/bool_impl.mls
fix (f : bool * bool -> bool) =
  fun (x:bool * bool) -> match x . 0 with
                           | False _ -> True
                           | True _ -> x . 1
Size: 13
Iter: 0

Time(s): 0.02 
Mem(Kb): 16344


synthesizer :burst
prog : testcases/basic/bool_neg.mls
fix (f : bool -> bool) =
  fun (x:bool) -> match x with
                    | False _ -> True
                    | True _ -> False
Size: 8
Iter: 0

Time(s): 0.01 
Mem(Kb): 14792


synthesizer :burst
prog : testcases/basic/bool_xor.mls
fix (f : bool * bool -> bool) =
  fun (x:bool * bool) ->
    match x . 1 with
      | False _ -> x . 0
      | True _ -> (match x . 0 with
                     | False _ -> x . 1
                     | True _ -> False)
Size: 20
Iter: 0

Time(s): 0.02 
Mem(Kb): 16312


synthesizer :burst
prog : testcases/basic/list_append.mls
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))
Size: 31
Iter: 0

Time(s): 0.15 
Mem(Kb): 20700


synthesizer :burst
prog : testcases/basic/list_compress.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> (match f (Un_Cons x . 1) with
                     | Nil _ -> x
                     | Cons _ -> (match compare (Un_Cons (Un_Cons x . 1) . 0)
                                          (Un_Cons x . 0) with
                                    | LT _ -> Cons (Un_Cons x . 0,
                                                     f (Un_Cons x . 1))
                                    | EQ _ -> f (Un_Cons x . 1)
                                    | GT _ -> Cons (Un_Cons x . 0,
                                                     f (Un_Cons x . 1))))
Size: 58
Iter: 0

Time(s): 0.85 
Mem(Kb): 33656


synthesizer :burst
prog : testcases/basic/list_concat.mls
fix (f : llist -> list) =
  fun (x:llist) ->
    match x with
      | LNil _ -> Nil
      | LCons _ -> append (Un_LCons x . 0) (f (Un_LCons x . 1))
Size: 19
Iter: 0

Time(s): 0.03 
Mem(Kb): 17064


synthesizer :burst
prog : testcases/basic/list_drop.mls
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1))
Size: 24
Iter: 0

Time(s): 1.52 
Mem(Kb): 52732


synthesizer :burst
prog : testcases/basic/list_even_parity.mls
fix (f : list -> bool) =
  fun (x:list) ->
    match x with
      | Nil _ -> True
      | Cons _ -> (match f (Un_Cons x . 1) with
                     | True _ -> bnot (Un_Cons x . 0)
                     | False _ -> Un_Cons x . 0)
Size: 23
Iter: 0

Time(s): 0.03 
Mem(Kb): 17452


synthesizer :burst
prog : testcases/basic/list_filter.mls
fix (f : (nat -> bool) * list -> list) =
  fun (x:(nat -> bool) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> (match x . 0 (Un_Cons (x . 1) . 0) with
                     | True _ -> x . 1
                     | False _ -> (match Un_Cons (x . 1) . 0 with
                                     | O _ -> Un_Cons (x . 1) . 1
                                     | S _ -> Cons (0, Nil)))
Size: 46
Iter: 0

Time(s): 0.33 
Mem(Kb): 24596


synthesizer :burst
prog : testcases/basic/list_fold.mls
fix (f : (nat -> nat -> nat) * nat * list -> nat) =
  fun (x:(nat -> nat -> nat) * nat * list) ->
    match x . 2 with
      | Nil _ -> x . 1
      | Cons _ -> x . 0 Un_S (Un_Cons (x . 2) . 0)
                    (count_odd (Un_Cons (x . 2) . 0) (Un_Cons (x . 2) . 0))
Size: 43
Iter: 0

Time(s): 0.13 
Mem(Kb): 21468


synthesizer :burst
prog : testcases/basic/list_hd.mls
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> Un_Cons x . 0
Size: 10
Iter: 0

Time(s): 0.02 
Mem(Kb): 16384


synthesizer :burst
prog : testcases/basic/list_inc.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (S (Un_Cons x . 0), f (Un_Cons x . 1))
Size: 18
Iter: 0

Time(s): 0.02 
Mem(Kb): 16864


synthesizer :burst
prog : testcases/basic/list_last.mls
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> Some (Un_Cons x . 0)
                     | Cons _ -> f (Un_Cons x . 1))
Size: 22
Iter: 0

Time(s): 0.03 
Mem(Kb): 17000


synthesizer :burst
prog : testcases/basic/list_length.mls
fix (f : list -> nat) =
  fun (x:list) -> match x with
                    | Nil _ -> 0
                    | Cons _ -> S (f (Un_Cons x . 1))
Size: 13
Iter: 0

Time(s): 0.02 
Mem(Kb): 16496


synthesizer :burst
prog : testcases/basic/list_map.mls
fix (f : (nat -> nat) * list -> list) =
  fun (x:(nat -> nat) * list) ->
    match x . 1 with
      | Nil _ -> x . 1
      | Cons _ -> Cons (x . 0 (Un_Cons (x . 1) . 0),
                         f (x . 0, Un_Cons (x . 1) . 1))
Size: 37
Iter: 0

Time(s): 0.03 
Mem(Kb): 17308


synthesizer :burst
prog : testcases/basic/list_nth.mls
fix (f : list * nat -> nat) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> 0
      | Cons _ -> (match x . 1 with
                     | O _ -> Un_Cons (x . 0) . 0
                     | S _ -> f (Un_Cons (x . 0) . 1, Un_S (x . 1)))
Size: 33
Iter: 0

Time(s): 1.93 
Mem(Kb): 58428


synthesizer :burst
prog : testcases/basic/list_pairwise_swap.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> (match f (Un_Cons x . 1) with
                     | Nil _ -> (match Un_Cons x . 1 with
                                   | Nil _ -> Un_Cons x . 1
                                   | Cons _ -> Cons (Un_Cons (Un_Cons x . 1)
                                                       . 0,
                                                      Cons (Un_Cons x . 0,
                                                             f
                                                               (Un_Cons (
                                                                  Un_Cons x .
                                                                    1)
                                                                  . 1))))
                     | Cons _ -> Nil)
Size: 47
Iter: 0

Time(s): 0.80 
Mem(Kb): 53880


synthesizer :burst
prog : testcases/basic/list_rev_append.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> append (f (Un_Cons x . 1)) Cons (Un_Cons x . 0, Nil)
Size: 22
Iter: 0

Time(s): 1.03 
Mem(Kb): 29504


synthesizer :burst
prog : testcases/basic/list_rev_fold.mls
fix (f : list -> list) = fun (x:list) -> fold snoc Nil x
Size: 10
Iter: 0

Time(s): 0.03 
Mem(Kb): 16932


synthesizer :burst
prog : testcases/basic/list_rev_snoc.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> snoc (f (Un_Cons x . 1)) (Un_Cons x . 0)
Size: 18
Iter: 0

Time(s): 1.33 
Mem(Kb): 114092


synthesizer :burst
prog : testcases/basic/list_rev_tailcall.mls
fix (f : list * list -> list) =
  fun (x:list * list) ->
    match x . 0 with
      | Nil _ -> x . 0
      | Cons _ -> (match Un_Cons (x . 0) . 1 with
                     | Nil _ -> x . 0
                     | Cons _ -> Cons (Un_Cons (Un_Cons (x . 0) . 1) . 0,
                                        Cons (Un_Cons (x . 0) . 0, x . 1)))
Size: 43
Iter: 0

Time(s): 0.18 
Mem(Kb): 20672


synthesizer :burst
prog : testcases/basic/list_snoc.mls
fix (f : list * nat -> list) =
  fun (x:list * nat) ->
    match x . 0 with
      | Nil _ -> Cons (x . 1, x . 0)
      | Cons _ -> Cons (Un_Cons (x . 0) . 0, f (Un_Cons (x . 0) . 1, x . 1))
Size: 36
Iter: 0

Time(s): 1.93 
Mem(Kb): 64656


synthesizer :burst
prog : testcases/basic/list_sort_sorted_insert.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> insert (f (Un_Cons x . 1)) (Un_Cons x . 0)
Size: 18
Iter: 0

Time(s): 0.07 
Mem(Kb): 20280


synthesizer :burst
prog : testcases/basic/list_sorted_insert.mls

Command exited with non-zero status 124
Time(s): 120.21 
Mem(Kb): 4345028


synthesizer :burst
prog : testcases/basic/list_stutter.mls
fix (f : list -> list) =
  fun (x:list) ->
    match x with
      | Nil _ -> x
      | Cons _ -> Cons (Un_Cons x . 0,
                         Cons (Un_Cons x . 0, f (Un_Cons x . 1)))
Size: 23
Iter: 0

Time(s): 3.45 
Mem(Kb): 34080


synthesizer :burst
prog : testcases/basic/list_sum.mls
fix (f : list -> nat) = fun (x:list) -> fold add 0 x
Size: 10
Iter: 0

Time(s): 0.07 
Mem(Kb): 18816


synthesizer :burst
prog : testcases/basic/list_take.mls

Command exited with non-zero status 124
Time(s): 120.07 
Mem(Kb): 2170292


synthesizer :burst
prog : testcases/basic/list_tl.mls
fix (f : list -> list) =
  fun (x:list) -> match x with
                    | Nil _ -> x
                    | Cons _ -> Un_Cons x . 1
Size: 9
Iter: 0

Time(s): 0.02 
Mem(Kb): 16636


synthesizer :burst
prog : testcases/basic/nat_add.mls
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> S (f (x . 0, Un_S (x . 1)))
Size: 22
Iter: 0

Time(s): 0.03 
Mem(Kb): 17576


synthesizer :burst
prog : testcases/basic/nat_iseven.mls
fix (f : nat -> bool) =
  fun (x:nat) ->
    match x with
      | O _ -> True
      | S _ -> (match Un_S x with
                  | O _ -> False
                  | S _ -> f Un_S (Un_S x))
Size: 16
Iter: 0

Time(s): 0.03 
Mem(Kb): 17152


synthesizer :burst
prog : testcases/basic/nat_max.mls
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match compare (x . 1) (x . 0) with
      | LT _ -> x . 0
      | EQ _ -> x . 0
      | GT _ -> x . 1
Size: 23
Iter: 0

Time(s): 0.18 
Mem(Kb): 25836


synthesizer :burst
prog : testcases/basic/nat_pred.mls
fix (f : nat -> nat) = fun (x:nat) -> match x with
                                        | O _ -> x
                                        | S _ -> Un_S x
Size: 7
Iter: 0

Time(s): 0.02 
Mem(Kb): 16300


synthesizer :burst
prog : testcases/basic/tree_binsert.mls
fix (f : tree * nat -> tree) =
  fun (x:tree * nat) ->
    match x . 0 with
      | Leaf _ -> Node (x . 0, x . 1, x . 0)
      | Node _ -> (match comp_nat (x . 1) (Un_Node (x . 0) . 1) with
                     | CEq _ -> x . 0
                     | CGt _ -> Node (Un_Node (x . 0) . 0,
                                       Un_Node (x . 0) . 1,
                                       f (Un_Node (x . 0) . 2, x . 1))
                     | CLt _ -> Node (f (Un_Node (x . 0) . 0, x . 1),
                                       Un_Node (x . 0) . 1,
                                       Un_Node (x . 0) . 2))
Size: 87
Iter: 0

Time(s): 2.44 
Mem(Kb): 81044


synthesizer :burst
prog : testcases/basic/tree_collect_leaves.mls
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))
Size: 27
Iter: 0

Time(s): 0.45 
Mem(Kb): 38416


synthesizer :burst
prog : testcases/basic/tree_count_leaves.mls
fix (f : tree -> nat) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> 1
      | Node _ -> sum (f (Un_Node x . 2)) (f (Un_Node x . 0))
Size: 22
Iter: 0

Time(s): 0.18 
Mem(Kb): 23428


synthesizer :burst
prog : testcases/basic/tree_count_nodes.mls
fix (f : tree -> nat) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> 0
      | Node _ -> sum S (f (Un_Node x . 0)) (f (Un_Node x . 2))
Size: 22
Iter: 0

Time(s): 0.07 
Mem(Kb): 20152


synthesizer :burst
prog : testcases/basic/tree_inorder.mls
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (f (Un_Node x . 0))
                    Cons (Un_Node x . 1, f (Un_Node x . 2))
Size: 27
Iter: 0

Time(s): 7.89 
Mem(Kb): 292072


synthesizer :burst
prog : testcases/basic/tree_map.mls
fix (f : (nat -> nat) * tree -> tree) =
  fun (x:(nat -> nat) * tree) ->
    match x . 1 with
      | Leaf _ -> x . 1
      | Node _ -> Node (f (x . 0, Un_Node (x . 1) . 0),
                         x . 0 (Un_Node (x . 1) . 1),
                         f (x . 0, Un_Node (x . 1) . 2))
Size: 49
Iter: 0

Time(s): 0.40 
Mem(Kb): 26052


synthesizer :burst
prog : testcases/basic/tree_nodes_at_level.mls
fix (f : tree * nat -> nat) =
  fun (x:tree * nat) ->
    match x . 0 with
      | Leaf _ -> 0
      | Node _ -> (match x . 1 with
                     | O _ -> S (x . 1)
                     | S _ -> sum (f (Un_Node (x . 0) . 2, Un_S (x . 1)))
                                (f (Un_Node (x . 0) . 0, Un_S (x . 1))))
Size: 47
Iter: 0

Time(s): 32.63 
Mem(Kb): 824408


synthesizer :burst
prog : testcases/basic/tree_postorder.mls
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> append (append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
                    Cons (Un_Node x . 1, Nil)
Size: 32
Iter: 0

Time(s): 2.86 
Mem(Kb): 131540


synthesizer :burst
prog : testcases/basic/tree_preorder.mls
fix (f : tree -> list) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> Nil
      | Node _ -> Cons (Un_Node x . 1,
                         append (f (Un_Node x . 0)) (f (Un_Node x . 2)))
Size: 27
Iter: 0

Time(s): 0.10 
Mem(Kb): 20028


synthesizer :burst
prog : testcases/new/expr_b.mls
fix (f : formula -> bool) =
  fun (x:formula) ->
    match x with
      | BOOL _ -> Un_BOOL x
      | NOT _ -> bnot Un_BOOL (Un_NOT x)
      | ANDALSO _ -> band Un_BOOL (Un_ANDALSO x . 0)
                       Un_BOOL (Un_ANDALSO x . 1)
      | ORELSE _ -> bor Un_BOOL (Un_ORELSE x . 1) Un_BOOL (Un_ORELSE x . 0)
      | IMPLY _ -> bor (bnot Un_BOOL (Un_IMPLY x . 0))
                     Un_BOOL (Un_IMPLY x . 1)
Size: 52
Iter: 0

Time(s): 0.61 
Mem(Kb): 24640


synthesizer :burst
prog : testcases/new/expr.mls

Command exited with non-zero status 124
Time(s): 120.15 
Mem(Kb): 2759476


synthesizer :burst
prog : testcases/new/expr_sub.mls

Command exited with non-zero status 124
Time(s): 120.17 
Mem(Kb): 3373312


synthesizer :burst
prog : testcases/new/expr_div.mls

Command exited with non-zero status 124
Time(s): 120.28 
Mem(Kb): 4444464


synthesizer :burst
prog : testcases/new/list_dropeven.mls

Command exited with non-zero status 124
Time(s): 120.11 
Mem(Kb): 2204968


synthesizer :burst
prog : testcases/new/list_last2.mls
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> None
                     | Cons _ -> (match f (Un_Cons x . 1) with
                                    | None _ -> Some (Un_Cons x . 0,
                                                       Un_Cons (Un_Cons x . 1)
                                                         . 0)
                                    | Some _ -> f (Un_Cons x . 1)))
Size: 39
Iter: 0

Time(s): 0.10 
Mem(Kb): 20000


synthesizer :burst
prog : testcases/new/list_make.mls
fix (f : nat -> list) =
  fun (x:nat) -> match x with
                   | O _ -> Nil
                   | S _ -> Cons (0, f Un_S x)
Size: 14
Iter: 0

Time(s): 0.83 
Mem(Kb): 23360


synthesizer :burst
prog : testcases/new/list_range.mls

Command exited with non-zero status 124
Time(s): 120.24 
Mem(Kb): 3970952


synthesizer :burst
prog : testcases/new/nat_mul.mls

Command exited with non-zero status 124
Time(s): 120.13 
Mem(Kb): 2891696


synthesizer :burst
prog : testcases/new/nat_sub.mls
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | O _ -> x . 0
                  | S _ -> f (Un_S (x . 0), Un_S (x . 1)))
Size: 29
Iter: 0

Time(s): 7.78 
Mem(Kb): 223668


synthesizer :burst
prog : testcases/new/tree_balanced.mls

Command exited with non-zero status 124
Time(s): 120.04 
Mem(Kb): 502116


synthesizer :burst
prog : testcases/new/tree_height.mls

Command exited with non-zero status 124
Time(s): 120.03 
Mem(Kb): 715616


synthesizer :burst
prog : testcases/new/tree_lastleft.mls
fix (f : tree -> nat) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> 0
      | Node _ -> (match Un_Node x . 1 with
                     | Leaf _ -> Un_Node x . 0
                     | Node _ -> f (Un_Node x . 1))
Size: 21
Iter: 0

Time(s): 0.03 
Mem(Kb): 17132


synthesizer :burst
prog : testcases/new/tree_notexist.mls
fix (f : nat * tree -> bool) =
  fun (x:nat * tree) ->
    match x . 1 with
      | Leaf _ -> True
      | Node _ -> (match compare (x . 0) (Un_Node (x . 1) . 0) with
                     | LT _ -> band (f (x . 0, Un_Node (x . 1) . 1))
                                 (f (x . 0, Un_Node (x . 1) . 2))
                     | EQ _ -> False
                     | GT _ -> band (f (x . 0, Un_Node (x . 1) . 1))
                                 (f (x . 0, Un_Node (x . 1) . 2)))
Size: 79
Iter: 0

Time(s): 0.78 
Mem(Kb): 37472


synthesizer :burst
prog : testcases/new/tree_sum.mls
fix (f : tree -> nat) =
  fun (x:tree) ->
    match x with
      | Leaf _ -> 0
      | Node _ -> add (f (Un_Node x . 1))
                    (add (f (Un_Node x . 2)) (Un_Node x . 0))
Size: 28
Iter: 0

Time(s): 34.01 
Mem(Kb): 1422768


synthesizer :burst
prog : testcases/new/expr_b.mls
fix (f : formula -> bool) =
  fun (x:formula) ->
    match x with
      | BOOL _ -> Un_BOOL x
      | NOT _ -> bnot Un_BOOL (Un_NOT x)
      | ANDALSO _ -> band Un_BOOL (Un_ANDALSO x . 0)
                       Un_BOOL (Un_ANDALSO x . 1)
      | ORELSE _ -> bor Un_BOOL (Un_ORELSE x . 1) Un_BOOL (Un_ORELSE x . 0)
      | IMPLY _ -> bor (bnot Un_BOOL (Un_IMPLY x . 0))
                     Un_BOOL (Un_IMPLY x . 1)
Size: 52
Iter: 0

Time(s): 0.52 
Mem(Kb): 24644


synthesizer :burst
prog : testcases/new/expr.mls

Command exited with non-zero status 124
Time(s): 120.14 
Mem(Kb): 2823812


synthesizer :burst
prog : testcases/new/expr_sub.mls

Command exited with non-zero status 124
Time(s): 120.18 
Mem(Kb): 3782760


synthesizer :burst
prog : testcases/new/expr_div.mls

Command exited with non-zero status 124
Time(s): 120.27 
Mem(Kb): 4922100


synthesizer :burst
prog : testcases/new/list_dropeven.mls

Command exited with non-zero status 124
Time(s): 120.13 
Mem(Kb): 3171520


synthesizer :burst
prog : testcases/new/list_last2.mls
fix (f : list -> natopt) =
  fun (x:list) ->
    match x with
      | Nil _ -> None
      | Cons _ -> (match Un_Cons x . 1 with
                     | Nil _ -> None
                     | Cons _ -> (match f (Un_Cons x . 1) with
                                    | None _ -> Some (Un_Cons x . 0,
                                                       Un_Cons (Un_Cons x . 1)
                                                         . 0)
                                    | Some _ -> f (Un_Cons x . 1)))
Size: 39
Iter: 0

Time(s): 0.09 
Mem(Kb): 20000


synthesizer :burst
prog : testcases/new/list_make.mls
fix (f : nat -> list) =
  fun (x:nat) -> match x with
                   | O _ -> Nil
                   | S _ -> Cons (0, f Un_S x)
Size: 14
Iter: 0

Time(s): 0.71 
Mem(Kb): 23368


synthesizer :burst
prog : testcases/new/list_range.mls

Command exited with non-zero status 124
Time(s): 120.28 
Mem(Kb): 5810132


synthesizer :burst
prog : testcases/new/nat_mul.mls

Command exited with non-zero status 124
Time(s): 120.16 
Mem(Kb): 3501356


synthesizer :burst
prog : testcases/new/nat_sub.mls
fix (f : nat * nat -> nat) =
  fun (x:nat * nat) ->
    match x . 1 with
      | O _ -> x . 0
      | S _ -> (match x . 0 with
                  | O _ -> x . 0
                  | S _ -> f (Un_S (x . 0), Un_S (x . 1)))
Size: 29
Iter: 0

Time(s): 7.72 
Mem(Kb): 216612


synthesizer :burst
prog : testcases/new/tree_balanced.mls

Command exited with non-zero status 124
Time(s): 120.02 
Mem(Kb): 570148


