synthesizer :smyth
prog : testcases/basic/bool_always_false.mls
fix (f : ) = fun (x0:) -> False
Size: 4
Iter: 0

Time(s): 0.02 
Mem(Kb): 14652


synthesizer :smyth
prog : testcases/basic/bool_always_true.mls
fix (f : ) = fun (x0:) -> True
Size: 4
Iter: 0

Time(s): 0.01 
Mem(Kb): 14648


synthesizer :smyth
prog : testcases/basic/bool_band.mls
fun (x:bool * bool) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) -> match x0 with
                      | True y1 -> x1
                      | False y1 -> False)
    (x . 0) (x . 1)
Size: 23
Iter: 0

Time(s): 0.03 
Mem(Kb): 15860


synthesizer :smyth
prog : testcases/basic/bool_bor.mls
fun (x:bool * bool) ->
  (fix (f : ) =
     fun (x1:) -> fun (x0:) -> match x0 with
                                 | True y1 -> True
                                 | False y1 -> x1)
    (x . 0) (x . 1)
Size: 23
Iter: 0

Time(s): 0.02 
Mem(Kb): 15840


synthesizer :smyth
prog : testcases/basic/bool_impl.mls
fun (x:bool * bool) ->
  (fix (f : ) =
     fun (x1:) -> fun (x0:) -> match x1 with
                                 | True y1 -> x0
                                 | False y1 -> True)
    (x . 0) (x . 1)
Size: 23
Iter: 0

Time(s): 0.02 
Mem(Kb): 15848


synthesizer :smyth
prog : testcases/basic/bool_neg.mls
fix (f : ) = fun (x0:) -> match x0 with
                            | True y1 -> False
                            | False y1 -> True
Size: 8
Iter: 0

Time(s): 0.02 
Mem(Kb): 15028


synthesizer :smyth
prog : testcases/basic/bool_xor.mls
fun (x:bool * bool) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | True y1 -> (match x1 with
                           | True y2 -> False
                           | False y2 -> True)
           | False y1 -> x1)
    (x . 0) (x . 1)
Size: 27
Iter: 0

Time(s): 0.02 
Mem(Kb): 15944


synthesizer :smyth
prog : testcases/basic/list_append.mls
fun (x:list * list) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> x0
           | Cons y1 -> Cons (y1 . 0, f (y1 . 1) x0))
    (x . 0) (x . 1)
Size: 33
Iter: 0

Time(s): 0.03 
Mem(Kb): 15968


synthesizer :smyth
prog : testcases/basic/list_compress.mls

Command exited with non-zero status 124
Time(s): 120.00 
Mem(Kb): 43448


synthesizer :smyth
prog : testcases/basic/list_concat.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | LNil y1 -> Nil
      | LCons y1 -> append (y1 . 0) (f (y1 . 1))
Size: 17
Iter: 0

Time(s): 0.02 
Mem(Kb): 15944


synthesizer :smyth
prog : testcases/basic/list_drop.mls
fun (x:list * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> Nil
           | Cons y1 -> (match x0 with
                           | S y2 -> f (y1 . 1) y2
                           | O y2 -> x1))
    (x . 0) (x . 1)
Size: 32
Iter: 0

Time(s): 0.04 
Mem(Kb): 16272


synthesizer :smyth
prog : testcases/basic/list_even_parity.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> True
      | Cons y1 -> (match y1 . 0 with
                      | True y2 -> bnot (f (y1 . 1))
                      | False y2 -> f (y1 . 1))
Size: 22
Iter: 0

Time(s): 0.03 
Mem(Kb): 17800


synthesizer :smyth
prog : testcases/basic/list_filter.mls
fun (x:(nat -> bool) * list) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 0 with
           | True y1 -> (match x0 with
                           | Nil y2 -> Nil
                           | Cons y2 -> (match is_even (y2 . 0) with
                                           | True y3 -> x0
                                           | False y3 -> Cons (0, Nil)))
           | False y1 -> Nil)
    (x . 0) (x . 1)
Size: 44
Iter: 0

Time(s): 0.07 
Mem(Kb): 17056


synthesizer :smyth
prog : testcases/basic/list_fold.mls
fun (x:(nat -> nat -> nat) * nat * list) ->
  (fix (f : ) =
     fun (x2:) ->
       fun (x1:) ->
         fun (x0:) ->
           match x0 with
             | Nil y1 -> 0
             | Cons y1 -> S (count_odd (count_odd (y1 . 0) (y1 . 0)) (y1 . 0)))
    (x . 0) (x . 1) (x . 2)
Size: 49
Iter: 0

Time(s): 1.24 
Mem(Kb): 27964


synthesizer :smyth
prog : testcases/basic/list_hd.mls
fix (f : ) = fun (x0:) -> match x0 with
                            | Nil y1 -> 0
                            | Cons y1 -> y1 . 0
Size: 9
Iter: 0

Time(s): 0.02 
Mem(Kb): 15824


synthesizer :smyth
prog : testcases/basic/list_inc.mls
fix (f : ) = fun (x0:) -> map x0 (fix (f1 : ) = fun (x1:) -> S x1)
Size: 12
Iter: 0

Time(s): 0.03 
Mem(Kb): 16092


synthesizer :smyth
prog : testcases/basic/list_last.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> None
      | Cons y1 -> (match y1 . 1 with
                      | Nil y2 -> Some (y1 . 0)
                      | Cons y2 -> f (y1 . 1))
Size: 19
Iter: 0

Time(s): 0.02 
Mem(Kb): 15944


synthesizer :smyth
prog : testcases/basic/list_length.mls
fix (f : ) =
  fun (x0:) -> match x0 with
                 | Nil y1 -> 0
                 | Cons y1 -> S (f (y1 . 1))
Size: 12
Iter: 0

Time(s): 0.02 
Mem(Kb): 15816


synthesizer :smyth
prog : testcases/basic/list_map.mls
fun (x:(nat -> nat) * list) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | Nil y1 -> Nil
           | Cons y1 -> (match y1 . 1 with
                           | Nil y2 -> Cons (1, Nil)
                           | Cons y2 -> Cons (x1 (y1 . 0),
                                               Cons (x1 (y1 . 0), Nil))))
    (x . 0) (x . 1)
Size: 51
Iter: 0

Time(s): 0.38 
Mem(Kb): 24712


synthesizer :smyth
prog : testcases/basic/list_nth.mls
fun (x:list * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> 0
           | Cons y1 -> (match x0 with
                           | S y2 -> f (y1 . 1) y2
                           | O y2 -> y1 . 0))
    (x . 0) (x . 1)
Size: 34
Iter: 0

Time(s): 0.04 
Mem(Kb): 16876


synthesizer :smyth
prog : testcases/basic/list_pairwise_swap.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> Nil
      | Cons y1 -> (match y1 . 1 with
                      | Nil y2 -> Nil
                      | Cons y2 -> (match f (y1 . 1) with
                                      | Nil y3 -> Cons (y2 . 0,
                                                         Cons (y1 . 0,
                                                                f (y2 . 1)))
                                      | Cons y3 -> Nil))
Size: 35
Iter: 0

Time(s): 0.21 
Mem(Kb): 20996


synthesizer :smyth
prog : testcases/basic/list_rev_append.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> x0
      | Cons y1 -> append (f (y1 . 1)) Cons (y1 . 0, Nil)
Size: 20
Iter: 0

Time(s): 0.05 
Mem(Kb): 17116


synthesizer :smyth
prog : testcases/basic/list_rev_fold.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> Nil
      | Cons y1 -> snoc (y1 . 1) (y1 . 0)
Size: 15
Iter: 0

Time(s): 0.04 
Mem(Kb): 16380


synthesizer :smyth
prog : testcases/basic/list_rev_snoc.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> x0
      | Cons y1 -> snoc (f (y1 . 1)) (y1 . 0)
Size: 16
Iter: 0

Time(s): 0.02 
Mem(Kb): 15984


synthesizer :smyth
prog : testcases/basic/list_rev_tailcall.mls
fun (x:list * list) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> x0
           | Cons y1 -> f (y1 . 1) Cons (y1 . 0, x0))
    (x . 0) (x . 1)
Size: 33
Iter: 0

Time(s): 0.02 
Mem(Kb): 15908


synthesizer :smyth
prog : testcases/basic/list_snoc.mls
fun (x:list * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> Cons (x0, Nil)
           | Cons y1 -> Cons (y1 . 0, f (y1 . 1) x0))
    (x . 0) (x . 1)
Size: 37
Iter: 0

Time(s): 0.03 
Mem(Kb): 16160


synthesizer :smyth
prog : testcases/basic/list_sort_sorted_insert.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> x0
      | Cons y1 -> insert (f (y1 . 1)) (y1 . 0)
Size: 16
Iter: 0

Time(s): 0.02 
Mem(Kb): 16036


synthesizer :smyth
prog : testcases/basic/list_sorted_insert.mls
fun (x:list * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x1 with
           | Nil y1 -> Cons (x0, Nil)
           | Cons y1 -> (match compare x0 (y1 . 0) with
                           | LT y2 -> Cons (x0, x1)
                           | GT y2 -> Cons (y1 . 0, f (y1 . 1) x0)
                           | EQ y2 -> Cons (x0, y1 . 1)))
    (x . 0) (x . 1)
Size: 55
Iter: 0

Time(s): 1.44 
Mem(Kb): 19560


synthesizer :smyth
prog : testcases/basic/list_stutter.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> Nil
      | Cons y1 -> Cons (y1 . 0, Cons (y1 . 0, f (y1 . 1)))
Size: 21
Iter: 0

Time(s): 0.02 
Mem(Kb): 15860


synthesizer :smyth
prog : testcases/basic/list_sum.mls
fix (f : ) = fun (x0:) -> fold add 0 x0
Size: 10
Iter: 0

Time(s): 0.03 
Mem(Kb): 16252


synthesizer :smyth
prog : testcases/basic/list_take.mls
fun (x:nat * list) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | Nil y1 -> Nil
           | Cons y1 -> (match x1 with
                           | S y2 -> Cons (y1 . 0, f y2 (y1 . 1))
                           | O y2 -> Nil))
    (x . 0) (x . 1)
Size: 38
Iter: 0

Time(s): 0.03 
Mem(Kb): 16292


synthesizer :smyth
prog : testcases/basic/list_tl.mls
fix (f : ) = fun (x0:) -> match x0 with
                            | Nil y1 -> Nil
                            | Cons y1 -> y1 . 1
Size: 9
Iter: 0

Time(s): 0.02 
Mem(Kb): 15816


synthesizer :smyth
prog : testcases/basic/nat_add.mls
fun (x:nat * nat) ->
  (fix (f : ) =
     fun (x1:) -> fun (x0:) -> match x1 with
                                 | S y1 -> S (f y1 x0)
                                 | O y1 -> x0)
    (x . 0) (x . 1)
Size: 27
Iter: 0

Time(s): 0.02 
Mem(Kb): 15864


synthesizer :smyth
prog : testcases/basic/nat_iseven.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | S y1 -> (match y1 with
                   | S y2 -> f y2
                   | O y2 -> False)
      | O y1 -> True
Size: 13
Iter: 0

Time(s): 0.02 
Mem(Kb): 15816


synthesizer :smyth
prog : testcases/basic/nat_max.mls
fun (x:nat * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | S y1 -> (match x1 with
                        | S y2 -> S (f y2 y1)
                        | O y2 -> x0)
           | O y1 -> (match x1 with
                        | S y2 -> x1
                        | O y2 -> 0))
    (x . 0) (x . 1)
Size: 34
Iter: 0

Time(s): 0.06 
Mem(Kb): 17144


synthesizer :smyth
prog : testcases/basic/nat_pred.mls
fix (f : ) = fun (x0:) -> match x0 with
                            | S y1 -> y1
                            | O y1 -> 0
Size: 7
Iter: 0

Time(s): 0.02 
Mem(Kb): 15372


synthesizer :smyth
prog : testcases/basic/tree_binsert.mls

Uncaught exception:
  
  Stack overflow

Raised at file "src/exn.ml" (inlined), line 102, characters 6-10
Called from file "src/exn.ml" (inlined), line 122, characters 33-77
Called from file "src/command.ml" (inlined), line 29, characters 11-41
Called from file "src/command.ml" (inlined), line 2931, characters 4-659
Called from file "app/BurstCmdLine.ml", line 424, characters 2-28
Command exited with non-zero status 1
Time(s): 20.66 
Mem(Kb): 1247392


synthesizer :smyth
prog : testcases/basic/tree_collect_leaves.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> append (f (y1 . 0)) Cons (y1 . 1, f (y1 . 2))
      | Leaf y1 -> Nil
Size: 24
Iter: 0

Time(s): 0.04 
Mem(Kb): 16312


synthesizer :smyth
prog : testcases/basic/tree_count_leaves.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> sum (f (y1 . 0)) (f (y1 . 2))
      | Leaf y1 -> sum O y1 1
Size: 25
Iter: 0

Time(s): 0.46 
Mem(Kb): 17400


synthesizer :smyth
prog : testcases/basic/tree_count_nodes.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> S (sum (f (y1 . 0)) (f (y1 . 2)))
      | Leaf y1 -> 0
Size: 20
Iter: 0

Time(s): 0.16 
Mem(Kb): 17252


synthesizer :smyth
prog : testcases/basic/tree_inorder.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> append (f (y1 . 0)) Cons (y1 . 1, f (y1 . 2))
      | Leaf y1 -> Nil
Size: 24
Iter: 0

Time(s): 0.06 
Mem(Kb): 16648


synthesizer :smyth
prog : testcases/basic/tree_map.mls
fun (x:(nat -> nat) * tree) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | Node y1 -> Node (match y1 . 0 with
                                | Node y2 -> Node (Leaf, 1, Leaf)
                                | Leaf y2 -> Leaf,
                               x1 (y1 . 1),
                               match y1 . 2 with
                                 | Node y2 -> Node (Leaf, 1, Leaf)
                                 | Leaf y2 -> Leaf)
           | Leaf y1 -> Leaf)
    (x . 0) (x . 1)
Size: 61
Iter: 0

Time(s): 0.92 
Mem(Kb): 20284


synthesizer :smyth
prog : testcases/basic/tree_nodes_at_level.mls

Command exited with non-zero status 124
Time(s): 120.01 
Mem(Kb): 57688


synthesizer :smyth
prog : testcases/basic/tree_postorder.mls

Command exited with non-zero status 124
Time(s): 120.00 
Mem(Kb): 31448


synthesizer :smyth
prog : testcases/basic/tree_preorder.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> Cons (y1 . 1, append (f (y1 . 0)) (f (y1 . 2)))
      | Leaf y1 -> Nil
Size: 24
Iter: 0

Time(s): 0.09 
Mem(Kb): 16912


synthesizer :smyth
prog : testcases/new/expr_b.mls

Uncaught exception:
  
  Stack overflow

Raised at file "src/exn.ml" (inlined), line 102, characters 6-10
Called from file "src/exn.ml" (inlined), line 122, characters 33-77
Called from file "src/command.ml" (inlined), line 29, characters 11-41
Called from file "src/command.ml" (inlined), line 2931, characters 4-659
Called from file "app/BurstCmdLine.ml", line 424, characters 2-28
Command exited with non-zero status 1
Time(s): 0.53 
Mem(Kb): 90528


synthesizer :smyth
prog : testcases/new/expr.mls

Command exited with non-zero status 124
Time(s): 120.01 
Mem(Kb): 22340


synthesizer :smyth
prog : testcases/new/expr_sub.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | SUB y1 -> S (sub 4 (f (y1 . 1)))
      | MUL y1 -> S (S (S (S (S (S (sub (f (y1 . 0)) 4))))))
      | INT y1 -> S (sub (mul y1 y1) y1)
      | ADD y1 -> 7
Size: 58
Iter: 0

Time(s): 10.79 
Mem(Kb): 35504


synthesizer :smyth
prog : testcases/new/expr_div.mls

Command exited with non-zero status 124
Time(s): 120.00 
Mem(Kb): 65012


synthesizer :smyth
prog : testcases/new/list_dropeven.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> Nil
      | Cons y1 -> (match is_even (y1 . 0) with
                      | True y2 -> y1 . 1
                      | False y2 -> Cons (y1 . 0, f (y1 . 1)))
Size: 25
Iter: 0

Time(s): 0.03 
Mem(Kb): 16356


synthesizer :smyth
prog : testcases/new/list_last2.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Nil y1 -> None
      | Cons y1 -> (match y1 . 1 with
                      | Nil y2 -> None
                      | Cons y2 -> (match y2 . 1 with
                                      | Nil y3 -> Some (y1 . 0, y2 . 0)
                                      | Cons y3 -> f (y1 . 1)))
Size: 29
Iter: 0

Time(s): 0.07 
Mem(Kb): 17832


synthesizer :smyth
prog : testcases/new/list_make.mls
fix (f : ) = fun (x0:) -> match x0 with
                            | S y1 -> Cons (0, f y1)
                            | O y1 -> Nil
Size: 13
Iter: 0

Time(s): 0.01 
Mem(Kb): 15816


synthesizer :smyth
prog : testcases/new/list_range.mls

Command exited with non-zero status 124
Time(s): 120.01 
Mem(Kb): 19536


synthesizer :smyth
prog : testcases/new/nat_mul.mls
fun (x:nat * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) -> match x1 with
                      | S y1 -> add (f y1 x0) x0
                      | O y1 -> 0)
    (x . 0) (x . 1)
Size: 31
Iter: 0

Time(s): 105.53 
Mem(Kb): 21292


synthesizer :smyth
prog : testcases/new/nat_sub.mls
fun (x:nat * nat) ->
  (fix (f : ) =
     fun (x1:) ->
       fun (x0:) ->
         match x0 with
           | S y1 -> (match x1 with
                        | S y2 -> f y2 y1
                        | O y2 -> 0)
           | O y1 -> x1)
    (x . 0) (x . 1)
Size: 30
Iter: 0

Time(s): 0.04 
Mem(Kb): 16732


synthesizer :smyth
prog : testcases/new/tree_balanced.mls
(Endpoint.TypeError
   ((Lang.EProj (100000, 2, (Lang.EVar "y"))),
    (Type.ProjectionLengthMismatch
       (Lang.TTuple
          [(Lang.TData ("nat", [])); (Lang.TData ("tree", []));
            (Lang.TData ("tree", []))]))))

Uncaught exception:
  
  (Failure ah)

Raised at file "stdlib.ml" (inlined), line 29, characters 17-33
Called from file "app/SmythSynthesizer.ml", line 140, characters 8-21
Called from file "app/BurstCmdLine.ml", line 141, characters 6-58
Called from file "app/BurstCmdLine.ml", line 233, characters 8-240
Called from file "app/BurstCmdLine.ml", line 363, characters 6-227
Called from file "app/BurstCmdLine.ml", line 406, characters 8-326
Called from file "src/command.ml" (inlined), line 1294, characters 18-33
Called from file "src/command.ml" (inlined), line 2819, characters 6-70
Called from file "src/command.ml" (inlined), line 2937, characters 8-205
Called from file "src/exn.ml" (inlined), line 102, characters 6-10
Called from file "src/exn.ml" (inlined), line 122, characters 33-77
Called from file "src/command.ml" (inlined), line 29, characters 11-41
Called from file "src/command.ml" (inlined), line 2931, characters 4-659
Called from file "app/BurstCmdLine.ml", line 424, characters 2-28
Re-raised at file "src/exn.ml" (inlined), line 102, characters 6-10
Called from file "src/exn.ml" (inlined), line 122, characters 33-77
Called from file "src/command.ml" (inlined), line 29, characters 11-41
Called from file "src/command.ml" (inlined), line 2931, characters 4-659
Called from file "app/BurstCmdLine.ml", line 424, characters 2-28
Command exited with non-zero status 1
Time(s): 0.02 
Mem(Kb): 14440


synthesizer :smyth
prog : testcases/new/tree_height.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> S (match y1 . 2 with
                        | Node y2 -> S (max (f (y2 . 2)) S (y1 . 0))
                        | Leaf y2 -> f (y1 . 1))
      | Leaf y1 -> 0
Size: 29
Iter: 0

Time(s): 96.62 
Mem(Kb): 18392


synthesizer :smyth
prog : testcases/new/tree_lastleft.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> (match y1 . 1 with
                      | Node y2 -> f (y1 . 1)
                      | Leaf y2 -> y1 . 0)
      | Leaf y1 -> 0
Size: 18
Iter: 0

Time(s): 0.02 
Mem(Kb): 16356


synthesizer :smyth
prog : testcases/new/tree_notexist.mls

Command exited with non-zero status 124
Time(s): 120.01 
Mem(Kb): 36384


synthesizer :smyth
prog : testcases/new/tree_sum.mls
fix (f : ) =
  fun (x0:) ->
    match x0 with
      | Node y1 -> add (add (f (y1 . 1)) (f (y1 . 2))) (y1 . 0)
      | Leaf y1 -> 0
Size: 25
Iter: 0

Time(s): 0.44 
Mem(Kb): 17888


