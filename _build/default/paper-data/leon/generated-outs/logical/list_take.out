[[33mWarning [0m] Refusing to inline recursive function 'listWebElementToWebTree'!
[[33mWarning [0m] The Z3 native interface is not available, falling back to smt-cvc4.
[[34m  Info  [0m] =========================== Synthesizing 'list_take' ===========================
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                                Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(n)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                    Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                                    Ï† len(xs) < nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                                    x out
[[34m  Info  [0m]                                  âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(n)] Decomposed into:
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(n)] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                                      Î  len(xs) < nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                      Ï† len(xs) >= nat_to_int(n) || len(out) == len(xs)
[[34m  Info  [0m]                                      x out
[[34m  Info  [0m]                                    âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  len(xs) < nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                Ï† len(xs) >= nat_to_int(n) || len(out) == len(xs)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  xs âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(xs) >= nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(out) == len(xs)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                     Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                                     Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(xs) >= nat_to_int(n)
[[34m  Info  [0m]                                     x out
[[34m  Info  [0m]                                   âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] Decomposed into:
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                                       Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                       Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                                       x out
[[34m  Info  [0m]                                     âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  (â†“list_take(Z, xs) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(Z) || len(out) == nat_to_int(Z)) && (len(xs) >= nat_to_int(Z) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  (â†“list_take(S(nat$2), xs) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  (â†“list_take(Z, xs) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† (len(xs) < nat_to_int(Z) || len(out) == nat_to_int(Z)) && (len(xs) >= nat_to_int(Z) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  Nil âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“list_take(n, Nil) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† (len(Nil) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Nil) >= nat_to_int(n) || len(out) == len(Nil))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                            Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“list_take(n, Nil) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† (len(Nil) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Nil) >= nat_to_int(n) || len(out) == len(Nil))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  Nil âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Introduce calls list_take$0(nat$2, xs$0)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                              Î  (â†“list_take(S(nat$2), xs) && è°¶S(nat$2)) && true
[[34m  Info  [0m]                                              Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /14,0/
[[34m  Info  [0m] [Introduce calls list_take$0(nat$2, xs$0)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_take$0(nat$2, xs$0)] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                                Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                                  (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                                                Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                                                x out
[[34m  Info  [0m]                                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                  (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                                Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                            (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && len(xs) >= nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && len(out) == len(xs)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                     Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                                     Ï† len(out) == nat_to_int(n) && len(xs) >= nat_to_int(n)
[[34m  Info  [0m]                                     x out
[[34m  Info  [0m]                                   âŸ§ /25,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] Decomposed into:
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(n)] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                                       Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                       Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                                       x out
[[34m  Info  [0m]                                     âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Split top-level Or  ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Split top-level Or  ] Decomposed into:
[[34m  Info  [0m] [Split top-level Or  ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Split top-level Or  ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Unconst. out out    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(xs) < nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Unconst. out out    ] Decomposed into:
[[34m  Info  [0m] [Unconst. out out    ] - âŸ¦ Î± n, xs
[[34m  Info  [0m]                            Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(n)
[[34m  Info  [0m]                            x ()
[[34m  Info  [0m]                          âŸ§ /25,0/
[[34m  Info  [0m] [Solve: âŸ¨ len(xs) < nat_to_int(n) |  () âŸ©] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                              Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                              Ï† len(xs) < nat_to_int(n)
[[34m  Info  [0m]                                              x ()
[[34m  Info  [0m]                                            âŸ§ /25,0/
[[34m  Info  [0m] [Solve: âŸ¨ len(xs) < nat_to_int(n) |  () âŸ©] Solved  with:  âŸ¨ len(xs) < nat_to_int(n) |  () âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n, xs
[[34m  Info  [0m]                                Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /25,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Introduce calls list_take$0(n$0, tail$17)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                               Î  (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17)) && true
[[34m  Info  [0m]                                               Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                                               x out
[[34m  Info  [0m]                                             âŸ§ /20,0/
[[34m  Info  [0m] [Introduce calls list_take$0(n$0, tail$17)] Decomposed into:
[[34m  Info  [0m] [Introduce calls list_take$0(n$0, tail$17)] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                 Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                                   (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                                                 Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                                                 x out
[[34m  Info  [0m]                                               âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                  (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                                Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                            (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                          Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /20,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                            (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                              (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(S(nat$2)) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                              (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(S(nat$2)) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(S(nat$2))] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                           Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                             (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                                           Ï† len(xs) < nat_to_int(S(nat$2)) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                                           x out
[[34m  Info  [0m]                                         âŸ§ /14,0/
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(S(nat$2))] Decomposed into:
[[34m  Info  [0m] [Assert len(xs) < nat_to_int(S(nat$2))] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                             Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                               len(xs) < nat_to_int(S(nat$2)) && ((â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true)
[[34m  Info  [0m]                                             Ï† len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs)
[[34m  Info  [0m]                                             x out
[[34m  Info  [0m]                                           âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                  len(xs) < nat_to_int(S(nat$2)) && ((â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true)
[[34m  Info  [0m]                                Ï† len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  xs âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                  (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(S(nat$2)) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                            (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(S(nat$2)) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                          Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                            (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                          Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && (len(xs) >= nat_to_int(S(nat$2)) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                              (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && len(xs) >= nat_to_int(S(nat$2))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                            Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                              (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                            Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && len(out) == len(xs)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(S(nat$2))] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                            Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                              (â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true
[[34m  Info  [0m]                                            Ï† (len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))) && len(xs) >= nat_to_int(S(nat$2))
[[34m  Info  [0m]                                            x out
[[34m  Info  [0m]                                          âŸ§ /14,0/
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(S(nat$2))] Decomposed into:
[[34m  Info  [0m] [Assert len(xs) >= nat_to_int(S(nat$2))] - âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                              Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                                len(xs) >= nat_to_int(S(nat$2)) && ((â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true)
[[34m  Info  [0m]                                              Ï† len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))
[[34m  Info  [0m]                                              x out
[[34m  Info  [0m]                                            âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± nat$2, xs
[[34m  Info  [0m]                                Î  val rec$15: NatList = list_take(nat$2, xs)
[[34m  Info  [0m]                                  len(xs) >= nat_to_int(S(nat$2)) && ((â†“list_take(S(nat$2), xs) && è°¶S(nat$2) && â†“list_take(nat$2, xs)) && true)
[[34m  Info  [0m]                                Ï† len(xs) < nat_to_int(S(nat$2)) || len(out) == nat_to_int(S(nat$2))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /14,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 2 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  Cons(nat$2, rec$15) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  (â†“list_take(Z, xs) && è°¶Z) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(Z) && (len(xs) >= nat_to_int(Z) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$9, xs
[[34m  Info  [0m]                            Î  (â†“list_take(S(nat$9), xs) && è°¶S(nat$9)) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(S(nat$9)) && (len(xs) >= nat_to_int(S(nat$9)) || len(out) == len(xs))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  (â†“list_take(Z, xs) && è°¶Z) && true
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(Z) && (len(xs) >= nat_to_int(Z) || len(out) == len(xs))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] STE could not prove the validity of the resulting expression
[[34m  Info  [0m] STE could not prove the validity of the resulting 1 expression(s)
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved (untrusted) with:  âŸ¨ true |  Nil âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [ADT Split on 'n'    ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± xs
[[34m  Info  [0m]                            Î  len(xs) >= nat_to_int(Z) && ((â†“list_take(Z, xs) && è°¶Z) && true)
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(Z) || len(out) == nat_to_int(Z)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /11,0/
[[34m  Info  [0m] [ADT Split on 'n'    ] - âŸ¦ Î± nat$14, xs
[[34m  Info  [0m]                            Î  len(xs) >= nat_to_int(S(nat$14)) && ((â†“list_take(S(nat$14), xs) && è°¶S(nat$14)) && true)
[[34m  Info  [0m]                            Ï† len(xs) < nat_to_int(S(nat$14)) || len(out) == nat_to_int(S(nat$14))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /14,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± xs
[[34m  Info  [0m]                                Î  len(xs) >= nat_to_int(Z) && ((â†“list_take(Z, xs) && è°¶Z) && true)
[[34m  Info  [0m]                                Ï† len(xs) < nat_to_int(Z) || len(out) == nat_to_int(Z)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /11,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Nil âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                            (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                          Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /20,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                              (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                            Ï† len(Cons(head$12, tail$17)) < nat_to_int(n) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                              (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) < nat_to_int(n)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                        Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                                          (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                                                        Ï† len(Cons(head$12, tail$17)) < nat_to_int(n) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                                                        x out
[[34m  Info  [0m]                                                      âŸ§ /20,0/
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) < nat_to_int(n)] Decomposed into:
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) < nat_to_int(n)] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                          Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                                            len(Cons(head$12, tail$17)) < nat_to_int(n) && ((â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true)
[[34m  Info  [0m]                                                          Ï† len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17))
[[34m  Info  [0m]                                                          x out
[[34m  Info  [0m]                                                        âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                  len(Cons(head$12, tail$17)) < nat_to_int(n) && ((â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true)
[[34m  Info  [0m]                                Ï† len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Solved  with:  âŸ¨ true |  Cons(n, tail$17) âŸ©
[[34m  Info  [0m] 
[[34m  Info  [0m] [Inner case-split    ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                            (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                          Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && (len(Cons(head$12, tail$17)) >= nat_to_int(n) || len(out) == len(Cons(head$12, tail$17)))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /20,0/
[[34m  Info  [0m] [Inner case-split    ] Decomposed into:
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                              (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                            Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(Cons(head$12, tail$17)) >= nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Inner case-split    ] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                            Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                              (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                            Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(out) == len(Cons(head$12, tail$17))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) >= nat_to_int(n)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                         Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                                           (â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true
[[34m  Info  [0m]                                                         Ï† (len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)) && len(Cons(head$12, tail$17)) >= nat_to_int(n)
[[34m  Info  [0m]                                                         x out
[[34m  Info  [0m]                                                       âŸ§ /20,0/
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) >= nat_to_int(n)] Decomposed into:
[[34m  Info  [0m] [Assert len(Cons(head$12, tail$17)) >= nat_to_int(n)] - âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                                           Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                                             len(Cons(head$12, tail$17)) >= nat_to_int(n) && ((â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true)
[[34m  Info  [0m]                                                           Ï† len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                                                           x out
[[34m  Info  [0m]                                                         âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                                Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                                  len(Cons(head$12, tail$17)) >= nat_to_int(n) && ((â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true)
[[34m  Info  [0m]                                Ï† len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± head$12, tail$17, n
[[34m  Info  [0m]                          Î  val rec$18: NatList = list_take(n, tail$17)
[[34m  Info  [0m]                            len(Cons(head$12, tail$17)) >= nat_to_int(n) && ((â†“list_take(n, Cons(head$12, tail$17)) && è°¶Cons(head$12, tail$17) && â†“list_take(n, tail$17)) && true)
[[34m  Info  [0m]                          Ï† len(Cons(head$12, tail$17)) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /20,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  â†“list_take(n, xs) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n) && (len(xs) >= nat_to_int(n) || len(out) == len(xs))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  (â†“list_take(n, Nil) && è°¶Nil) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && (len(Nil) >= nat_to_int(n) || len(out) == len(Nil))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$23, tail$26, n
[[34m  Info  [0m]                            Î  (â†“list_take(n, Cons(head$23, tail$26)) && è°¶Cons(head$23, tail$26)) && true
[[34m  Info  [0m]                            Ï† len(out) == nat_to_int(n) && (len(Cons(head$23, tail$26)) >= nat_to_int(n) || len(out) == len(Cons(head$23, tail$26)))
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  (â†“list_take(n, Nil) && è°¶Nil) && true
[[34m  Info  [0m]                                Ï† len(out) == nat_to_int(n) && (len(Nil) >= nat_to_int(n) || len(out) == len(Nil))
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] Failed
[[34m  Info  [0m] [Optimistic Ground   ] âŸ¦ Î± n
[[34m  Info  [0m]                          Î  (â†“list_take(n, Nil) && è°¶Nil) && true
[[34m  Info  [0m]                          Ï† len(out) == nat_to_int(n) && (len(Nil) >= nat_to_int(n) || len(out) == len(Nil))
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /5,0/
[[34m  Info  [0m] [Optimistic Ground   ] Failed
[[34m  Info  [0m] [ADT Split on 'xs'   ] âŸ¦ Î± n, xs
[[34m  Info  [0m]                          Î  len(xs) >= nat_to_int(n) && (â†“list_take(n, xs) && true)
[[34m  Info  [0m]                          Ï† len(xs) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                          x out
[[34m  Info  [0m]                        âŸ§ /25,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] Decomposed into:
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± n
[[34m  Info  [0m]                            Î  len(Nil) >= nat_to_int(n) && ((â†“list_take(n, Nil) && è°¶Nil) && true)
[[34m  Info  [0m]                            Ï† len(Nil) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /5,0/
[[34m  Info  [0m] [ADT Split on 'xs'   ] - âŸ¦ Î± head$30, tail$32, n
[[34m  Info  [0m]                            Î  len(Cons(head$30, tail$32)) >= nat_to_int(n) && ((â†“list_take(n, Cons(head$30, tail$32)) && è°¶Cons(head$30, tail$32)) && true)
[[34m  Info  [0m]                            Ï† len(Cons(head$30, tail$32)) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                            x out
[[34m  Info  [0m]                          âŸ§ /20,0/
[[34m  Info  [0m] [Symbolic Term Expl. (1->7)] âŸ¦ Î± n
[[34m  Info  [0m]                                Î  len(Nil) >= nat_to_int(n) && ((â†“list_take(n, Nil) && è°¶Nil) && true)
[[34m  Info  [0m]                                Ï† len(Nil) < nat_to_int(n) || len(out) == nat_to_int(n)
[[34m  Info  [0m]                                x out
[[34m  Info  [0m]                              âŸ§ /5,0/