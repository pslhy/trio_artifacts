[[33mWarning [0m] warning: there were two feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st1)))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st2)))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st1))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st2))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(m, n, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m, n, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call levDist-mem$3(a$180, a$179, st@))' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call levDist-mem$3(a$182, j, dres$1._2 ++ Set ...)' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call levDist-mem$3(i, a$183, dres$2._2 ++ Set ...)' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for levDist-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call levDist-mem$3(i, j, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i - BigInt(1), j, st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i - BigInt(1), n, st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i, j - BigInt(1), st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, res._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m - BigInt(1), n, n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, tail$18._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m, j - BigInt(1), n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, tail$17._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomUpPost$5(m, j, n, x$4$7._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m - BigInt(1), n, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsLem$5(m - BigInt(1), j + BigInt(1),  ...)' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m, j, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsLem$5(m, BigInt(0), m, j, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for levDistSols$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m, n, n, st@))' VC for levDistSols$5 @?:?...
[[34m  Info  [0m]  => VALID
  ????????????????????????
??? Verification Summary ???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? ????????????????????????                                                                                                                         ?
? LevenshteinDistance.bottomUpPost$5  postcondition                                                        ?:?  valid  U:orb-smt-z3          0.044 ?
? LevenshteinDistance.bottomUpPost$5  precond. (call deps$5(m - BigInt(1), n, st@))                        ?:?  valid  U:orb-smt-z3          0.043 ?
? LevenshteinDistance.bottomUpPost$5  precond. (call deps$5(m, j, st@))                                    ?:?  valid  U:orb-smt-z3          0.041 ?
? LevenshteinDistance.bottomUpPost$5  precond. (call depsLem$5(m - BigInt(1), j + BigInt(1),  ...)         ?:?  valid  U:orb-smt-z3          0.040 ?
? LevenshteinDistance.bottomUpPost$5  precond. (call depsLem$5(m, BigInt(0), m, j, st@))                   ?:?  valid  U:orb-smt-z3          0.045 ?
? LevenshteinDistance.bottomup$5      postcondition                                                        ?:?  valid  U:orb-smt-z3          0.318 ?
? LevenshteinDistance.bottomup$5      precond. (call bottomUpPost$5(m, j, n, x$4$7._2))                    ?:?  valid  U:orb-smt-z3          0.083 ?
? LevenshteinDistance.bottomup$5      precond. (call bottomup$5(m - BigInt(1), n, n, st@))                 ?:?  valid  U:orb-smt-z3          0.037 ?
? LevenshteinDistance.bottomup$5      precond. (call bottomup$5(m, j - BigInt(1), n, st@))                 ?:?  valid  U:orb-smt-z3          0.041 ?
? LevenshteinDistance.bottomup$5      precond. (call invoke$5(m, j, n, st@))                               ?:?  valid  U:orb-smt-z3          0.048 ?
? LevenshteinDistance.bottomup$5      precond. (call invoke$5(m, j, n, tail$17._2))                        ?:?  valid  U:orb-smt-z3          1.135 ?
? LevenshteinDistance.bottomup$5      precond. (call invoke$5(m, j, n, tail$18._2))                        ?:?  valid  U:orb-smt-z3          0.756 ?
? LevenshteinDistance.deps$5          postcondition                                                        ?:?  valid  U:orb-smt-orb-cvc4    0.262 ?
? LevenshteinDistance.deps$5          precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-orb-cvc4    0.037 ?
? LevenshteinDistance.deps$5          precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.039 ?
? LevenshteinDistance.deps$5          precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-orb-cvc4    0.039 ?
? LevenshteinDistance.deps$5          precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.055 ?
? LevenshteinDistance.depsLem$5       precond. (call deps$5(i, j, st@))                                    ?:?  valid  U:orb-smt-z3          0.058 ?
? LevenshteinDistance.depsLem$5       precond. (call deps$5(m, n, st@))                                    ?:?  valid  U:orb-smt-orb-cvc4    0.054 ?
? LevenshteinDistance.depsLem$5       tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.145 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call deps$5(i, j, st@)))                             ?:?  valid  U:orb-smt-z3          0.060 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call deps$5(m, n, st@)))                             ?:?  valid  U:orb-smt-z3          0.063 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))  ?:?  valid  U:orb-smt-z3          0.043 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))  ?:?  valid  U:orb-smt-z3          0.045 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))  ?:?  valid  U:orb-smt-z3          0.051 ?
? LevenshteinDistance.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))  ?:?  valid  U:orb-smt-z3          0.037 ?
? LevenshteinDistance.depsMono$5      precond. (call deps$5(i, j, st1))                                    ?:?  valid  U:orb-smt-z3          0.032 ?
? LevenshteinDistance.depsMono$5      precond. (call deps$5(i, j, st2))                                    ?:?  valid  U:orb-smt-z3          0.041 ?
? LevenshteinDistance.depsMono$5      tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.195 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call deps$5(i, j, st1)))                             ?:?  valid  U:orb-smt-z3          0.056 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call deps$5(i, j, st2)))                             ?:?  valid  U:orb-smt-z3          0.062 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))  ?:?  valid  U:orb-smt-z3          0.034 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))  ?:?  valid  U:orb-smt-z3          0.035 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))  ?:?  valid  U:orb-smt-z3          0.033 ?
? LevenshteinDistance.depsMono$5      tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))  ?:?  valid  U:orb-smt-z3          0.051 ?
? LevenshteinDistance.invoke$5        postcondition                                                        ?:?  valid  U:orb-smt-z3          0.194 ?
? LevenshteinDistance.invoke$5        precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.047 ?
? LevenshteinDistance.invoke$5        precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.103 ?
? LevenshteinDistance.invoke$5        precond. (call deps$5(i, j, res._2))                                 ?:?  valid  U:orb-smt-z3          0.064 ?
? LevenshteinDistance.invoke$5        precond. (call depsMono$5(i - BigInt(1), j, st@, out$1))             ?:?  valid  U:orb-smt-z3          0.076 ?
? LevenshteinDistance.invoke$5        precond. (call depsMono$5(i - BigInt(1), n, st@, out$1))             ?:?  valid  U:orb-smt-z3          0.093 ?
? LevenshteinDistance.invoke$5        precond. (call depsMono$5(i, j - BigInt(1), st@, out$1))             ?:?  valid  U:orb-smt-z3          0.072 ?
? LevenshteinDistance.invoke$5        precond. (call levDist-mem$3(i, j, st@))                             ?:?  valid  U:orb-smt-z3          0.060 ?
? LevenshteinDistance.levDist-mem$3   match exhaustiveness                                                 ?:?  valid  U:orb-smt-z3          0.032 ?
? LevenshteinDistance.levDist-mem$3   postcondition                                                        ?:?  valid  U:orb-smt-z3          0.322 ?
? LevenshteinDistance.levDist-mem$3   precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.035 ?
? LevenshteinDistance.levDist-mem$3   precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.043 ?
? LevenshteinDistance.levDist-mem$3   precond. (call levDist-mem$3(a$180, a$179, st@))                     ?:?  valid  U:orb-smt-z3          0.107 ?
? LevenshteinDistance.levDist-mem$3   precond. (call levDist-mem$3(a$182, j, dres$1._2 ++ Set ...)         ?:?  valid  U:orb-smt-z3          0.305 ?
? LevenshteinDistance.levDist-mem$3   precond. (call levDist-mem$3(i, a$183, dres$2._2 ++ Set ...)         ?:?  valid  U:orb-smt-z3          1.025 ?
? LevenshteinDistance.levDistSols$5   postcondition                                                        ?:?  valid  U:orb-smt-z3          0.109 ?
? LevenshteinDistance.levDistSols$5   precond. (call bottomup$5(m, n, n, st@))                             ?:?  valid  U:orb-smt-z3          0.044 ?
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? total: 52     valid: 52     invalid: 0      unknown 0                                                                                      6.889 ?
????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] - considering function levDist-mem-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.054s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.077s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.087s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.102s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 28 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.199s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 31 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.404s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 99 <= 0
[[34m  Info  [0m] checked VC inst... in 0.088s
[[34m  Info  [0m] Function: levDist-mem-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.375s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDist-mem-alloc-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.414s
[[34m  Info  [0m] - Found inductive invariant: levDist-mem-alloc --> alloc <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function invoke-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$203._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: invoke-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$203._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$203._2 + -1 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: invoke-alloc --> alloc + BigInt(-1) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function bottomup-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + 0 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.028s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + 0 * m) + 1 * x$4$8._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.033s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + 0 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.037s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((-3 * j + 0 * mult(m, n)) + 0 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 25 + 24
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((-3 * j + 0 * mult(m, n)) + -4 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 26 + 49
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + 0 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.061s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 31 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + -7 * m) + 1 * x$4$8._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.048s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 32
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((0 * j + 0 * mult(m, n)) + -7 * m) + 1 * x$4$8._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.038s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 27 + 50
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((-4 * j + 0 * mult(m, n)) + -7 * m) + 1 * x$4$8._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.051s
[[34m  Info  [0m] Function: bottomup-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 35 + 77
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((-3 * j + -4 * mult(m, n)) + -4 * m) + 1 * x$4$8._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-alloc-->(((-2 * j + -2 * mult(m, n)) + -2 * m) + 1 * x$4$8._2) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] - Found inductive invariant: bottomup-alloc --> (((BigInt(-2) * j + BigInt(-2) * (m * n)) + BigInt(-2) * m) + alloc) + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[31m Error  [0m] - Unable to prove or disprove invariant, the invariant is probably true
[[34m  Info  [0m] - considering function levDistSols-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDistSols-alloc-->(((0 * mult(m, n) + 0 * m) + 1 * x$5$6._2) + 0 * n) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: levDistSols-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDistSols-alloc-->(((-2 * mult(m, n) + -3 * m) + 1 * x$5$6._2) + -3 * n) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] levDistSols-alloc-->(((-2 * mult(m, n) + -2 * m) + 1 * x$5$6._2) + -2 * n) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] - Found inductive invariant: levDistSols-alloc --> (((BigInt(-2) * (m * n) + BigInt(-2) * m) + alloc) + BigInt(-2) * n) + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ???????????
??? Summary ??????????????????????????????????????????????????????????????
? ???????????                                                            ?
? bottomup        alloc <= ((2 * (m * n) + 2 * m) + 2 * j) + 3    17.091 ?
? invoke          alloc <= 1                                      0.307  ?
? levDist         alloc <= 0                                      4.261  ?
? levDistSols     alloc <= ((2 * (m * n) + 2 * m) + 2 * n) + 3    0.501  ?
??????????????????????????????????????????????????????????????????????????
? total: 4     inferred: 4     unknown: 0     time: 22.160               ?
??????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] Stats dumped to file: LevenshteinDistance-stats.txt
