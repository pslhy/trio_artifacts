[[33mWarning [0m] warning: there were 10 feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for zeroPrecedesLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for zeroPrecedesLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for zeroPrecedesSuf$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for zeroPrecedesSuf$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for concreteUntil$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concreteUntil$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isConcrete$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedulesProperty$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for strongSchedsProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for strongSchedsProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for pushUntilCarry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for pushUntilCarry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for emptyNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for inc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call incLazy$5(xs, scr._2))' VC for inc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for inc$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazy$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for IncLazyL@incLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for IncLazyL@incLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for IncLazyL@incLazyPre$1 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call inc$5(w.digs, st@))' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call incLazyLemma$5(w.digs, head$23, res$230. ...)' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incNum$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call schedMonotone$5[<untyped>](st@, a$195, r ...)' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixZeroLemma$5[<untyped>](q, head$26, ...)' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for Pay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for incAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call incNum$5(w, st@))' VC for incAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call Pay$5[<untyped>](q$171, x$2$19._1._2, x$ ...)' VC for incAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incAndPay$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for firstDigit$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstDigit$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for firstDigit$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call incLazyLemma$5(rear$34, suf, st@))' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call incLazy$5(xs, a$186._2))' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for incLazyLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call schedMonotone$5[<untyped>](st1, st2, tai ...)' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for schedMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilMonotone$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixDisequality$5[<untyped>](l, suf))' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for properSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixTrans$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixDisequality$5[<untyped>](rear$40,  ...)' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixDisequality$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for suffixCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for suffixCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteUntilIsSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteUntilIsSuffix$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for concUntilExtenLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilConcreteExten$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilConcreteExten$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concUntilCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concUntilCompose$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for zeroPredSufConcreteUntilLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for zeroPredSufConcreteUntilLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for concreteZeroPredLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (match exhaustiveness)' VC for concreteZeroPredLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call suffixZeroLemma$5[<untyped>](tail$28, su ...)' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for suffixZeroLemma$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call thiss.fval-mem$3(uiState$2))' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for getV$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for isCached$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for isCached$6 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call thiss.fval-mem$3(st@))' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for get$11 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for valid$6 @?:?...
[[34m  Info  [0m]  => VALID
  ????????????????????????
??? Verification Summary ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? ????????????????????????                                                                                                                                ?
? LazyNumericalRep.IncLazyL@incLazyPre$1            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.049 ?
? LazyNumericalRep.IncLazyL@incLazyPre$1            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.064 ?
? LazyNumericalRep.IncLazyL@incLazyPre$1            postcondition                                                 ?:?  valid  U:orb-smt-z3          0.287 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.068 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.071 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.275 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.123 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.115 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.063 ?
? LazyNumericalRep.Pay$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.085 ?
? LazyNumericalRep.Pay$5                            postcondition                                                 ?:?  valid  U:orb-smt-z3          0.845 ?
? LazyNumericalRep.Pay$5                            precond. (call schedMonotone$5[<untyped>](st@, a$195, r ...)  ?:?  valid  U:orb-smt-z3          0.415 ?
? LazyNumericalRep.Pay$5                            precond. (call suffixZeroLemma$5[<untyped>](q, head$26, ...)  ?:?  valid  U:orb-smt-z3          0.739 ?
? LazyNumericalRep.concUntilCompose$5               tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.044 ?
? LazyNumericalRep.concUntilCompose$5               tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.210 ?
? LazyNumericalRep.concUntilConcreteExten$5         tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.043 ?
? LazyNumericalRep.concUntilConcreteExten$5         tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.205 ?
? LazyNumericalRep.concUntilExtenLemma$5            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.080 ?
? LazyNumericalRep.concUntilExtenLemma$5            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.036 ?
? LazyNumericalRep.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.052 ?
? LazyNumericalRep.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.054 ?
? LazyNumericalRep.concUntilExtenLemma$5            tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.083 ?
? LazyNumericalRep.concUntilExtenLemma$5            tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.222 ?
? LazyNumericalRep.concUntilMonotone$5              tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.046 ?
? LazyNumericalRep.concUntilMonotone$5              tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.165 ?
? LazyNumericalRep.concreteMonotone$5               tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.044 ?
? LazyNumericalRep.concreteMonotone$5               tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.150 ?
? LazyNumericalRep.concreteUntil$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-orb-cvc4    0.068 ?
? LazyNumericalRep.concreteUntil$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.078 ?
? LazyNumericalRep.concreteUntilIsSuffix$5          tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.052 ?
? LazyNumericalRep.concreteUntilIsSuffix$5          tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.193 ?
? LazyNumericalRep.concreteZeroPredLemma$5          tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.050 ?
? LazyNumericalRep.concreteZeroPredLemma$5          tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.158 ?
? LazyNumericalRep.emptyNum$5                       postcondition                                                 ?:?  valid  U:orb-smt-z3          0.034 ?
? LazyNumericalRep.firstDigit$5                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.028 ?
? LazyNumericalRep.firstDigit$5                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.048 ?
? LazyNumericalRep.firstDigit$5                     postcondition                                                 ?:?  valid  U:orb-smt-z3          0.148 ?
? NumStream.fval-mem$3                              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.055 ?
? NumStream.fval-mem$3                              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.036 ?
? NumStream.fval-mem$3                              postcondition                                                 ?:?  valid  U:orb-smt-z3          0.182 ?
? NumStream.get$11                                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.045 ?
? NumStream.get$11                                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.153 ?
? NumStream.get$11                                  precond. (call thiss.fval-mem$3(st@))                         ?:?  valid  U:orb-smt-z3          0.035 ?
? NumStream.getV$6                                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.038 ?
? NumStream.getV$6                                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.049 ?
? NumStream.getV$6                                  precond. (call thiss.fval-mem$3(uiState$2))                   ?:?  valid  U:orb-smt-z3          0.039 ?
? LazyNumericalRep.inc$5                            match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.068 ?
? LazyNumericalRep.inc$5                            postcondition                                                 ?:?  valid  U:orb-smt-z3          0.601 ?
? LazyNumericalRep.inc$5                            precond. (call incLazy$5(xs, scr._2))                         ?:?  valid  U:orb-smt-z3          0.226 ?
? LazyNumericalRep.incAndPay$5                      match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.029 ?
? LazyNumericalRep.incAndPay$5                      postcondition                                                 ?:?  valid  U:orb-smt-z3          0.909 ?
? LazyNumericalRep.incAndPay$5                      precond. (call Pay$5[<untyped>](q$171, x$2$19._1._2, x$ ...)  ?:?  valid  U:orb-smt-z3          0.524 ?
? LazyNumericalRep.incAndPay$5                      precond. (call incNum$5(w, st@))                              ?:?  valid  U:orb-smt-z3          0.157 ?
? LazyNumericalRep.incLazy$5                        match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.053 ?
? LazyNumericalRep.incLazy$5                        match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.071 ?
? LazyNumericalRep.incLazy$5                        match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.159 ?
? LazyNumericalRep.incLazy$5                        match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.071 ?
? LazyNumericalRep.incLazy$5                        match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.064 ?
? LazyNumericalRep.incLazy$5                        postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.599 ?
? LazyNumericalRep.incLazyLemma$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.059 ?
? LazyNumericalRep.incLazyLemma$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.052 ?
? LazyNumericalRep.incLazyLemma$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.045 ?
? LazyNumericalRep.incLazyLemma$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.054 ?
? LazyNumericalRep.incLazyLemma$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-orb-cvc4    0.853 ?
? LazyNumericalRep.incLazyLemma$5                   postcondition                                                 ?:?  valid  U:orb-smt-z3          0.701 ?
? LazyNumericalRep.incLazyLemma$5                   precond. (call incLazy$5(xs, a$186._2))                       ?:?  valid  U:orb-smt-z3          0.501 ?
? LazyNumericalRep.incLazyLemma$5                   precond. (call incLazyLemma$5(rear$34, suf, st@))             ?:?  valid  U:orb-smt-z3          0.198 ?
? LazyNumericalRep.incNum$5                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.085 ?
? LazyNumericalRep.incNum$5                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.067 ?
? LazyNumericalRep.incNum$5                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.051 ?
? LazyNumericalRep.incNum$5                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.076 ?
? LazyNumericalRep.incNum$5                         postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    1.229 ?
? LazyNumericalRep.incNum$5                         precond. (call inc$5(w.digs, st@))                            ?:?  valid  U:orb-smt-z3          0.192 ?
? LazyNumericalRep.incNum$5                         precond. (call incLazyLemma$5(w.digs, head$23, res$230. ...)  ?:?  valid  U:orb-smt-z3          0.338 ?
? NumStream.isCached$6                              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.033 ?
? NumStream.isCached$6                              postcondition                                                 ?:?  valid  U:orb-smt-z3          0.053 ?
? LazyNumericalRep.isConcrete$5                     match exhaustiveness                                          ?:?  valid  U:orb-smt-orb-cvc4    0.057 ?
? LazyNumericalRep.isConcrete$5                     postcondition                                                 ?:?  valid  U:orb-smt-z3          0.062 ?
? LazyNumericalRep.properSuffix$5                   match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.044 ?
? LazyNumericalRep.properSuffix$5                   postcondition                                                 ?:?  valid  U:orb-smt-z3          0.190 ?
? LazyNumericalRep.properSuffix$5                   precond. (call suffixDisequality$5[<untyped>](l, suf))        ?:?  valid  U:orb-smt-z3          0.180 ?
? LazyNumericalRep.pushUntilCarry$5                 match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.062 ?
? LazyNumericalRep.pushUntilCarry$5                 postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.070 ?
? LazyNumericalRep.schedMonotone$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.048 ?
? LazyNumericalRep.schedMonotone$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.049 ?
? LazyNumericalRep.schedMonotone$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.336 ?
? LazyNumericalRep.schedMonotone$5                  precond. (call schedMonotone$5[<untyped>](st1, st2, tai ...)  ?:?  valid  U:orb-smt-z3          0.320 ?
? LazyNumericalRep.schedulesProperty$5              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.031 ?
? LazyNumericalRep.schedulesProperty$5              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.031 ?
? LazyNumericalRep.schedulesProperty$5              postcondition                                                 ?:?  valid  U:orb-smt-z3          0.067 ?
? LazyNumericalRep.strongSchedsProp$5               match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.041 ?
? LazyNumericalRep.strongSchedsProp$5               postcondition                                                 ?:?  valid  U:orb-smt-z3          0.080 ?
? LazyNumericalRep.suffix$5                         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.070 ?
? LazyNumericalRep.suffix$5                         postcondition                                                 ?:?  valid  U:orb-smt-z3          0.067 ?
? LazyNumericalRep.suffixCompose$5                  tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.048 ?
? LazyNumericalRep.suffixCompose$5                  tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.257 ?
? LazyNumericalRep.suffixDisequality$5              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.048 ?
? LazyNumericalRep.suffixDisequality$5              postcondition                                                 ?:?  valid  U:orb-smt-z3          0.236 ?
? LazyNumericalRep.suffixDisequality$5              precond. (call suffixDisequality$5[<untyped>](rear$40,  ...)  ?:?  valid  U:orb-smt-z3          0.221 ?
? LazyNumericalRep.suffixTrans$5                    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.051 ?
? LazyNumericalRep.suffixTrans$5                    tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.061 ?
? LazyNumericalRep.suffixTrans$5                    tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.065 ?
? LazyNumericalRep.suffixTrans$5                    tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.170 ?
? LazyNumericalRep.suffixZeroLemma$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.059 ?
? LazyNumericalRep.suffixZeroLemma$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.068 ?
? LazyNumericalRep.suffixZeroLemma$5                postcondition                                                 ?:?  valid  U:orb-smt-z3          0.327 ?
? LazyNumericalRep.suffixZeroLemma$5                precond. (call suffixZeroLemma$5[<untyped>](tail$28, su ...)  ?:?  valid  U:orb-smt-z3          0.287 ?
? Number.valid$6                                    postcondition                                                 ?:?  valid  U:orb-smt-z3          0.048 ?
? LazyNumericalRep.zeroPrecedesLazy$5               match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.076 ?
? LazyNumericalRep.zeroPrecedesLazy$5               postcondition                                                 ?:?  valid  U:orb-smt-z3          0.491 ?
? LazyNumericalRep.zeroPrecedesSuf$5                match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.070 ?
? LazyNumericalRep.zeroPrecedesSuf$5                postcondition                                                 ?:?  valid  U:orb-smt-z3          0.075 ?
? LazyNumericalRep.zeroPredSufConcreteUntilLemma$5  tact (match exhaustiveness)                                   ?:?  valid  U:orb-smt-z3          0.049 ?
? LazyNumericalRep.zeroPredSufConcreteUntilLemma$5  tact (postcondition)                                          ?:?  valid  U:orb-smt-z3          0.180 ?
???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? total: 114    valid: 114    invalid: 0      unknown 0                                                                                            18.932 ?
???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] - considering function incLazy-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: incLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: incLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.047s
[[34m  Info  [0m] Function: incLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.341s
[[34m  Info  [0m] Function: incLazy-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.042s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incLazy-alloc-->1 * res$234._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.021s
[[34m  Info  [0m] - Found inductive invariant: incLazy-alloc --> alloc + BigInt(-5) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function fval-mem-alloc...
[[34m  Info  [0m] - considering function get-alloc...
[[34m  Info  [0m] - considering function firstDigit-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.017s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.029s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.025s
[[34m  Info  [0m] Function: firstDigit-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] firstDigit-alloc-->1 * x$4$7._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] - Found inductive invariant: firstDigit-alloc --> alloc + BigInt(-6) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[33mWarning [0m] Unexpected error from orb-cvc4 solver: Parse Error: Illegal argument detected
[[33mWarning [0m] std::vector<CVC4::DatatypeType> CVC4::ExprManager::mkMutualDatatypeTypes(const std::vector<CVC4::Datatype>&, const std::set<CVC4::Type>&)
[[33mWarning [0m] 
[[33mWarning [0m]   `unresolvedTypes' is a bad argument; expected resolver != nameResolutions.end() to hold
[[33mWarning [0m] cannot resolve type `Digit!263'; it's not among the datatypes being defined
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function inc-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.023s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 14
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.067s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.043s
[[34m  Info  [0m] Function: inc-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] inc-alloc-->1 * x$1$31._2 + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] - Found inductive invariant: inc-alloc --> alloc + BigInt(-5) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function incNum-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incNum-alloc-->1 * res$233._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] Function: incNum-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incNum-alloc-->1 * res$233._2 + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incNum-alloc-->1 * res$233._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: incNum-alloc --> alloc + BigInt(-7) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function Pay-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.017s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.03s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: Pay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 15
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] Pay-alloc-->1 * res$231._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] - Found inductive invariant: Pay-alloc --> alloc + BigInt(-7) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function incAndPay-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incAndPay-alloc-->1 * res$235._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: incAndPay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incAndPay-alloc-->1 * res$235._2 + -10 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] Function: incAndPay-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 8
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incAndPay-alloc-->1 * res$235._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] incAndPay-alloc-->1 * res$235._2 + -15 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: incAndPay-alloc --> alloc + BigInt(-15) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ???????????
??? Summary ???????????????????????????????????????????????
? ???????????                                             ?
? Pay             alloc <= 7     0.963                    ?
? firstDigit      alloc <= 6     0.766                    ?
? inc             alloc <= 5     1.086                    ?
? incAndPay       alloc <= 15    1.219                    ?
? incLazy         alloc <= 5     2.539                    ?
? incNum          alloc <= 7     0.435                    ?
???????????????????????????????????????????????????????????
? total: 6     inferred: 6     unknown: 0     time: 7.008 ?
???????????????????????????????????????????????????????????
[[34m  Info  [0m] Stats dumped to file: LazyNumericalRep-stats.txt
