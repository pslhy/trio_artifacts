[[33mWarning [0m] warning: there were four feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for columnsCachedfrom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(K, j, K, st@))' VC for columnsCachedfrom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)' VC for columnsCachedfrom$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for columnCached$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i - BigInt(1), j, K, st@))' VC for columnCached$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnMono-VCTact(i - BigInt(1), j, K, s ...))' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnCached$5(i, j, K, st1)))' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnCached$5(i, j, K, st2)))' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i, j, K, st1))' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i, j, K, st2))' VC for columnMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnLem-VCTact(j - BigInt(1), K, st@)))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnCached$5(K, j, K, st@)))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnsCachedfrom$5(j, K, st@)))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnCached$5(K, j, K, st@)))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call columnsCachedfrom$5(j, K, st@)))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(K, j, K, st@))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j, K, st@))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(K, j, K, st@))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j, K, st@))' VC for columnLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call cachedLem$5(l + BigInt(1), j, K, st@))' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call cachedLem$5(l + BigInt(1), j, K, st@))' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call cachedLem$5(l - BigInt(1), j, K, st@))' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(K, j, K, st@))' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(l, j, K, st@))' VC for cachedLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for columnsCachedfromMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnMono$5(K, j, K, st1, st2))' VC for columnsCachedfromMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfromMono$5(j - BigInt(1), K ...)' VC for columnsCachedfromMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j, K, st1))' VC for columnsCachedfromMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfrom$5(j, K, st2))' VC for columnsCachedfromMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fillEntry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j, K, st@))' VC for fillEntry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call cachedLem$5(l, j - BigInt(1), K, st@))' VC for fillEntry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call viterbi-mem$3(l, a$181, K, st@))' VC for fillEntry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillEntry$5(l + BigInt(1), i, j, K, a$18 ...)' VC for fillEntry$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for viterbi-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j, K, st@))' VC for viterbi-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillEntry$5(BigInt(0), i, j, K, st@))' VC for viterbi-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j, K, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i - BigInt(1), j, K, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call viterbi-mem$3(i, j, K, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfromMono$5(j - BigInt(1), K ...)' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnsCachedfromMono$5(j, K, st@, out$1 ...)' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnMono$5(i - BigInt(1), j, K, st@, o ...)' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i, j, K, res._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j, K, st@))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnCached$5(i - BigInt(1), j, K, st@))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(i, j, K, st@))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(i, j, K, st@))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillColumn$5(i + BigInt(1), j, K, x$416. ...)' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call columnLem$5(j, K, res$216._2))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j + BigInt(1), K, res$216._2))' VC for fillColumn$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(j, K, st@))' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillColumn$5(BigInt(0), j, K, st@))' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillColumn$5(BigInt(0), j, K, st@))' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillTable$5(j + BigInt(1), T, K, x$418._ ...)' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(T + BigInt(1), K, res$217._2))' VC for fillTable$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for viterbiSols$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call fillTable$5(BigInt(0), T, K, st@))' VC for viterbiSols$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(T + BigInt(1), K, res._2))' VC for viterbiSols$5 @?:?...
[[34m  Info  [0m]  => VALID
  ????????????????????????
??? Verification Summary ????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? ????????????????????????                                                                                                                      ?
? Viterbi.cachedLem$5              postcondition                                                        ?:?  valid  U:orb-smt-z3          0.095 ?
? Viterbi.cachedLem$5              precond. (call cachedLem$5(l + BigInt(1), j, K, st@))                ?:?  valid  U:orb-smt-orb-cvc4    0.033 ?
? Viterbi.cachedLem$5              precond. (call cachedLem$5(l + BigInt(1), j, K, st@))                ?:?  valid  U:orb-smt-z3          0.037 ?
? Viterbi.cachedLem$5              precond. (call cachedLem$5(l - BigInt(1), j, K, st@))                ?:?  valid  U:orb-smt-z3          0.041 ?
? Viterbi.cachedLem$5              precond. (call columnCached$5(K, j, K, st@))                         ?:?  valid  U:orb-smt-z3          0.054 ?
? Viterbi.cachedLem$5              precond. (call columnCached$5(l, j, K, st@))                         ?:?  valid  U:orb-smt-z3          0.068 ?
? Viterbi.columnCached$5           postcondition                                                        ?:?  valid  U:orb-smt-z3          0.056 ?
? Viterbi.columnCached$5           precond. (call columnCached$5(i - BigInt(1), j, K, st@))             ?:?  valid  U:orb-smt-z3          0.047 ?
? Viterbi.columnLem$5              precond. (call columnCached$5(K, j, K, st@))                         ?:?  valid  U:orb-smt-z3          0.031 ?
? Viterbi.columnLem$5              precond. (call columnCached$5(K, j, K, st@))                         ?:?  valid  U:orb-smt-z3          0.038 ?
? Viterbi.columnLem$5              precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)         ?:?  valid  U:orb-smt-z3          0.031 ?
? Viterbi.columnLem$5              precond. (call columnsCachedfrom$5(j, K, st@))                       ?:?  valid  U:orb-smt-z3          0.040 ?
? Viterbi.columnLem$5              precond. (call columnsCachedfrom$5(j, K, st@))                       ?:?  valid  U:orb-smt-z3          0.036 ?
? Viterbi.columnLem$5              tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.087 ?
? Viterbi.columnLem$5              tact (precond. (call columnCached$5(K, j, K, st@)))                  ?:?  valid  U:orb-smt-z3          0.043 ?
? Viterbi.columnLem$5              tact (precond. (call columnCached$5(K, j, K, st@)))                  ?:?  valid  U:orb-smt-z3          0.056 ?
? Viterbi.columnLem$5              tact (precond. (call columnLem-VCTact(j - BigInt(1), K, st@)))       ?:?  valid  U:orb-smt-z3          0.036 ?
? Viterbi.columnLem$5              tact (precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...))  ?:?  valid  U:orb-smt-z3          0.042 ?
? Viterbi.columnLem$5              tact (precond. (call columnsCachedfrom$5(j, K, st@)))                ?:?  valid  U:orb-smt-z3          0.045 ?
? Viterbi.columnLem$5              tact (precond. (call columnsCachedfrom$5(j, K, st@)))                ?:?  valid  U:orb-smt-z3          0.047 ?
? Viterbi.columnMono$5             precond. (call columnCached$5(i, j, K, st1))                         ?:?  valid  U:orb-smt-orb-cvc4    0.035 ?
? Viterbi.columnMono$5             precond. (call columnCached$5(i, j, K, st2))                         ?:?  valid  U:orb-smt-orb-cvc4    0.045 ?
? Viterbi.columnMono$5             tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.115 ?
? Viterbi.columnMono$5             tact (precond. (call columnCached$5(i, j, K, st1)))                  ?:?  valid  U:orb-smt-z3          0.046 ?
? Viterbi.columnMono$5             tact (precond. (call columnCached$5(i, j, K, st2)))                  ?:?  valid  U:orb-smt-z3          0.047 ?
? Viterbi.columnMono$5             tact (precond. (call columnMono-VCTact(i - BigInt(1), j, K, s ...))  ?:?  valid  U:orb-smt-z3          0.035 ?
? Viterbi.columnsCachedfrom$5      postcondition                                                        ?:?  valid  U:orb-smt-orb-cvc4    0.053 ?
? Viterbi.columnsCachedfrom$5      precond. (call columnCached$5(K, j, K, st@))                         ?:?  valid  U:orb-smt-z3          0.035 ?
? Viterbi.columnsCachedfrom$5      precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)         ?:?  valid  U:orb-smt-z3          0.053 ?
? Viterbi.columnsCachedfromMono$5  postcondition                                                        ?:?  valid  U:orb-smt-z3          0.089 ?
? Viterbi.columnsCachedfromMono$5  precond. (call columnMono$5(K, j, K, st1, st2))                      ?:?  valid  U:orb-smt-z3          0.032 ?
? Viterbi.columnsCachedfromMono$5  precond. (call columnsCachedfrom$5(j, K, st1))                       ?:?  valid  U:orb-smt-z3          0.045 ?
? Viterbi.columnsCachedfromMono$5  precond. (call columnsCachedfrom$5(j, K, st2))                       ?:?  valid  U:orb-smt-z3          0.046 ?
? Viterbi.columnsCachedfromMono$5  precond. (call columnsCachedfromMono$5(j - BigInt(1), K ...)         ?:?  valid  U:orb-smt-z3          0.042 ?
? Viterbi.deps$5                   postcondition                                                        ?:?  valid  U:orb-smt-z3          0.195 ?
? Viterbi.deps$5                   precond. (call columnsCachedfrom$5(j - BigInt(1), K, st ...)         ?:?  valid  U:orb-smt-z3          0.036 ?
? Viterbi.fillColumn$5             postcondition                                                        ?:?  valid  U:orb-smt-z3          0.173 ?
? Viterbi.fillColumn$5             precond. (call columnCached$5(i - BigInt(1), j, K, st@))             ?:?  valid  U:orb-smt-z3          0.059 ?
? Viterbi.fillColumn$5             precond. (call columnLem$5(j, K, res$216._2))                        ?:?  valid  U:orb-smt-z3          0.072 ?
? Viterbi.fillColumn$5             precond. (call deps$5(j + BigInt(1), K, res$216._2))                 ?:?  valid  U:orb-smt-z3          0.069 ?
? Viterbi.fillColumn$5             precond. (call deps$5(j, K, st@))                                    ?:?  valid  U:orb-smt-z3          0.031 ?
? Viterbi.fillColumn$5             precond. (call fillColumn$5(i + BigInt(1), j, K, x$416. ...)         ?:?  valid  U:orb-smt-z3          0.145 ?
? Viterbi.fillColumn$5             precond. (call invoke$5(i, j, K, st@))                               ?:?  valid  U:orb-smt-z3          0.044 ?
? Viterbi.fillColumn$5             precond. (call invoke$5(i, j, K, st@))                               ?:?  valid  U:orb-smt-z3          0.044 ?
? Viterbi.fillEntry$5              postcondition                                                        ?:?  valid  U:orb-smt-z3          0.187 ?
? Viterbi.fillEntry$5              precond. (call cachedLem$5(l, j - BigInt(1), K, st@))                ?:?  valid  U:orb-smt-z3          0.042 ?
? Viterbi.fillEntry$5              precond. (call deps$5(j, K, st@))                                    ?:?  valid  U:orb-smt-z3          0.034 ?
? Viterbi.fillEntry$5              precond. (call fillEntry$5(l + BigInt(1), i, j, K, a$18 ...)         ?:?  valid  U:orb-smt-z3          0.145 ?
? Viterbi.fillEntry$5              precond. (call viterbi-mem$3(l, a$181, K, st@))                      ?:?  valid  U:orb-smt-z3          0.096 ?
? Viterbi.fillTable$5              postcondition                                                        ?:?  valid  U:orb-smt-z3          0.127 ?
? Viterbi.fillTable$5              precond. (call deps$5(T + BigInt(1), K, res$217._2))                 ?:?  valid  U:orb-smt-z3          0.094 ?
? Viterbi.fillTable$5              precond. (call deps$5(j, K, st@))                                    ?:?  valid  U:orb-smt-z3          0.032 ?
? Viterbi.fillTable$5              precond. (call fillColumn$5(BigInt(0), j, K, st@))                   ?:?  valid  U:orb-smt-z3          0.068 ?
? Viterbi.fillTable$5              precond. (call fillColumn$5(BigInt(0), j, K, st@))                   ?:?  valid  U:orb-smt-z3          0.059 ?
? Viterbi.fillTable$5              precond. (call fillTable$5(j + BigInt(1), T, K, x$418._ ...)         ?:?  valid  U:orb-smt-z3          0.079 ?
? Viterbi.invoke$5                 postcondition                                                        ?:?  valid  U:orb-smt-z3          0.125 ?
? Viterbi.invoke$5                 precond. (call columnCached$5(i - BigInt(1), j, K, st@))             ?:?  valid  U:orb-smt-z3          0.042 ?
? Viterbi.invoke$5                 precond. (call columnCached$5(i, j, K, res._2))                      ?:?  valid  U:orb-smt-z3          0.065 ?
? Viterbi.invoke$5                 precond. (call columnMono$5(i - BigInt(1), j, K, st@, o ...)         ?:?  valid  U:orb-smt-z3          0.062 ?
? Viterbi.invoke$5                 precond. (call columnsCachedfromMono$5(j - BigInt(1), K ...)         ?:?  valid  U:orb-smt-z3          0.067 ?
? Viterbi.invoke$5                 precond. (call columnsCachedfromMono$5(j, K, st@, out$1 ...)         ?:?  valid  U:orb-smt-orb-cvc4    0.064 ?
? Viterbi.invoke$5                 precond. (call deps$5(j, K, st@))                                    ?:?  valid  U:orb-smt-z3          0.031 ?
? Viterbi.invoke$5                 precond. (call viterbi-mem$3(i, j, K, st@))                          ?:?  valid  U:orb-smt-z3          0.046 ?
? Viterbi.viterbi-mem$3            postcondition                                                        ?:?  valid  U:orb-smt-z3          0.078 ?
? Viterbi.viterbi-mem$3            precond. (call deps$5(j, K, st@))                                    ?:?  valid  U:orb-smt-z3          0.030 ?
? Viterbi.viterbi-mem$3            precond. (call fillEntry$5(BigInt(0), i, j, K, st@))                 ?:?  valid  U:orb-smt-z3          0.071 ?
? Viterbi.viterbiSols$5            postcondition                                                        ?:?  valid  U:orb-smt-z3          0.090 ?
? Viterbi.viterbiSols$5            precond. (call deps$5(T + BigInt(1), K, res._2))                     ?:?  valid  U:orb-smt-z3          0.059 ?
? Viterbi.viterbiSols$5            precond. (call fillTable$5(BigInt(0), T, K, st@))                    ?:?  valid  U:orb-smt-z3          0.044 ?
?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
? total: 69     valid: 69     invalid: 0      unknown 0                                                                                   4.386 ?
?????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] - considering function fillEntry-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] checked VC inst... in 0.016s
[[34m  Info  [0m] Function: fillEntry-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 1 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: fillEntry-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 1 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] checked VC inst... in 0.046s
[[34m  Info  [0m] Function: fillEntry-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 1 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] checked VC inst... in 0.018s
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function viterbi-mem-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function invoke-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$219._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: invoke-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$219._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-alloc-->1 * res$219._2 + -1 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: invoke-alloc --> alloc + BigInt(-1) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function fillColumn-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + 0 * K) + 0 * i) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + 0 * K) + 0 * i) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + 0 * K) + 0 * i) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + 0 * K) + 0 * i) + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 19 + 13
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + -4 * K) + 4 * i) + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.006s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + -1 * K) + 1 * i) + -2 <= 0
[[34m  Info  [0m] checked VC inst... in 0.227s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 32
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + -4 * K) + 4 * i) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + -1 * K) + 1 * i) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.234s
[[34m  Info  [0m] Function: fillColumn-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 45
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillColumn-alloc-->((1 * res$220._2 + -2 * K) + 2 * i) + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] - Found inductive invariant: fillColumn-alloc --> ((alloc + BigInt(-2) * K) + BigInt(2) * i) + BigInt(-3) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function fillTable-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((0 * j + 0 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + 0 * T) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((0 * j + 0 * mult(T - j, K)) + 1 * res$218._2) + -4 * K) + 0 * T) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.01s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 16
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((0 * j + 0 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + 0 * T) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.079s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 35 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((0 * j + 0 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + 0 * T) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.123s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 38 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((11 * j + 0 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + -11 * T) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.119s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 40 + 39
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((6 * j + -5 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + -6 * T) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.086s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 20 + 79
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((6 * j + -5 * mult(T - j, K)) + 1 * res$218._2) + 0 * K) + -6 * T) + -8 <= 0
[[34m  Info  [0m] checked VC inst... in 0.073s
[[34m  Info  [0m] Function: fillTable-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 99
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((6 * j + -5 * mult(T - j, K)) + 1 * res$218._2) + -5 * K) + -6 * T) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.021s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] fillTable-alloc-->((((4 * j + -2 * mult(T - j, K)) + 1 * res$218._2) + -2 * K) + -4 * T) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] - Found inductive invariant: fillTable-alloc --> ((((BigInt(4) * j + BigInt(-2) * ((T - j) * K)) + alloc) + BigInt(-2) * K) + BigInt(-4) * T) + BigInt(-5) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function viterbiSols-alloc...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] viterbiSols-alloc-->(((0 * K + 1 * res$222._2) + 0 * T) + 0 * mult(T, K)) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] Function: viterbiSols-alloc--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] viterbiSols-alloc-->(((-3 * K + 1 * res$222._2) + -6 * T) + -2 * mult(T, K)) + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] viterbiSols-alloc-->(((-2 * K + 1 * res$222._2) + -4 * T) + -2 * mult(T, K)) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: viterbiSols-alloc --> (((BigInt(-2) * K + alloc) + BigInt(-4) * T) + BigInt(-2) * (T * K)) + BigInt(-5) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ???????????
??? Summary ?????????????????????????????????????????????????????????????????????????
? ???????????                                                                       ?
? fillColumn      alloc <= 2 * (K - i) + 3                                    1.645 ?
? fillTable       alloc <= ((2 * ((T - j) * K) + 4 * (T - j)) + 2 * K) + 5    2.810 ?
? invoke          alloc <= 1                                                  0.358 ?
? viterbiSols     alloc <= ((2 * (T * K) + 4 * T) + 2 * K) + 5                0.430 ?
?????????????????????????????????????????????????????????????????????????????????????
? total: 4     inferred: 4     unknown: 0     time: 5.243                           ?
?????????????????????????????????????????????????????????????????????????????????????
[[34m  Info  [0m] Stats dumped to file: Viterbi-stats.txt
