[[33mWarning [0m] warning: there were two feature warnings; re-run with -feature for details
[[34m  Info  [0m]  - Now considering 'postcondition' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for deps$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st1)))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st2)))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st1))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st2))' VC for depsMono$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (postcondition)' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(m, n, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'tact (precond. (call deps$5(i, j, st@)))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m, n, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, st@))' VC for depsLem$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lcs-mem$3(a$179, a$178, st@))' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lcs-mem$3(a$175, j, st@))' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lcs-mem$3(i, a$176, dres$0._2 ++ Set[Mem ...)' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for lcs-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i - BigInt(1), j, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j - BigInt(1), st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call lcs-mem$3(i, j, st@))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i - BigInt(1), j, st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i - BigInt(1), n, st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsMono$5(i, j - BigInt(1), st@, out$1))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(i, j, res._2))' VC for invoke$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m - BigInt(1), n, n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, tail$18._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m, j - BigInt(1), n, st@))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call invoke$5(m, j, n, tail$17._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomUpPost$5(m, j, n, x$4$7._2))' VC for bottomup$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m - BigInt(1), n, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsLem$5(m - BigInt(1), j + BigInt(1),  ...)' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call deps$5(m, j, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call depsLem$5(m, BigInt(0), m, j, st@))' VC for bottomUpPost$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for lcsSols$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call bottomup$5(m, n, n, st@))' VC for lcsSols$5 @?:?...
[[34m  Info  [0m]  => VALID
  ┌──────────────────────┐
╔═╡ Verification Summary ╞══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ └──────────────────────┘                                                                                                                              ║
║ LongestCommonSubsequence.bottomUpPost$5  postcondition                                                        ?:?  valid  U:orb-smt-z3          0.051 ║
║ LongestCommonSubsequence.bottomUpPost$5  precond. (call deps$5(m - BigInt(1), n, st@))                        ?:?  valid  U:orb-smt-z3          0.049 ║
║ LongestCommonSubsequence.bottomUpPost$5  precond. (call deps$5(m, j, st@))                                    ?:?  valid  U:orb-smt-z3          0.058 ║
║ LongestCommonSubsequence.bottomUpPost$5  precond. (call depsLem$5(m - BigInt(1), j + BigInt(1),  ...)         ?:?  valid  U:orb-smt-z3          0.067 ║
║ LongestCommonSubsequence.bottomUpPost$5  precond. (call depsLem$5(m, BigInt(0), m, j, st@))                   ?:?  valid  U:orb-smt-z3          0.060 ║
║ LongestCommonSubsequence.bottomup$5      postcondition                                                        ?:?  valid  U:orb-smt-z3          0.264 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call bottomUpPost$5(m, j, n, x$4$7._2))                    ?:?  valid  U:orb-smt-z3          0.079 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call bottomup$5(m - BigInt(1), n, n, st@))                 ?:?  valid  U:orb-smt-z3          0.030 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call bottomup$5(m, j - BigInt(1), n, st@))                 ?:?  valid  U:orb-smt-z3          0.050 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call invoke$5(m, j, n, st@))                               ?:?  valid  U:orb-smt-z3          0.037 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call invoke$5(m, j, n, tail$17._2))                        ?:?  valid  U:orb-smt-z3          0.779 ║
║ LongestCommonSubsequence.bottomup$5      precond. (call invoke$5(m, j, n, tail$18._2))                        ?:?  valid  U:orb-smt-orb-cvc4    1.142 ║
║ LongestCommonSubsequence.deps$5          postcondition                                                        ?:?  valid  U:orb-smt-z3          0.537 ║
║ LongestCommonSubsequence.deps$5          precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.043 ║
║ LongestCommonSubsequence.deps$5          precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.041 ║
║ LongestCommonSubsequence.deps$5          precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.041 ║
║ LongestCommonSubsequence.deps$5          precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.053 ║
║ LongestCommonSubsequence.depsLem$5       precond. (call deps$5(i, j, st@))                                    ?:?  valid  U:orb-smt-z3          0.041 ║
║ LongestCommonSubsequence.depsLem$5       precond. (call deps$5(m, n, st@))                                    ?:?  valid  U:orb-smt-z3          0.031 ║
║ LongestCommonSubsequence.depsLem$5       tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.122 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call deps$5(i, j, st@)))                             ?:?  valid  U:orb-smt-z3          0.059 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call deps$5(m, n, st@)))                             ?:?  valid  U:orb-smt-z3          0.051 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))  ?:?  valid  U:orb-smt-z3          0.037 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m - BigInt(1), n, s ...))  ?:?  valid  U:orb-smt-orb-cvc4    0.031 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))  ?:?  valid  U:orb-smt-z3          0.041 ║
║ LongestCommonSubsequence.depsLem$5       tact (precond. (call depsLem-VCTact(i, j, m, n - BigInt(1), s ...))  ?:?  valid  U:orb-smt-z3          0.033 ║
║ LongestCommonSubsequence.depsMono$5      precond. (call deps$5(i, j, st1))                                    ?:?  valid  U:orb-smt-z3          0.037 ║
║ LongestCommonSubsequence.depsMono$5      precond. (call deps$5(i, j, st2))                                    ?:?  valid  U:orb-smt-z3          0.049 ║
║ LongestCommonSubsequence.depsMono$5      tact (postcondition)                                                 ?:?  valid  U:orb-smt-z3          0.285 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call deps$5(i, j, st1)))                             ?:?  valid  U:orb-smt-z3          0.062 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call deps$5(i, j, st2)))                             ?:?  valid  U:orb-smt-orb-cvc4    0.060 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))  ?:?  valid  U:orb-smt-z3          0.033 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call depsMono-VCTact(i - BigInt(1), j, st1, s ...))  ?:?  valid  U:orb-smt-z3          0.033 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))  ?:?  valid  U:orb-smt-z3          0.052 ║
║ LongestCommonSubsequence.depsMono$5      tact (precond. (call depsMono-VCTact(i, j - BigInt(1), st1, s ...))  ?:?  valid  U:orb-smt-z3          0.033 ║
║ LongestCommonSubsequence.invoke$5        postcondition                                                        ?:?  valid  U:orb-smt-z3          0.173 ║
║ LongestCommonSubsequence.invoke$5        precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.035 ║
║ LongestCommonSubsequence.invoke$5        precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.054 ║
║ LongestCommonSubsequence.invoke$5        precond. (call deps$5(i, j, res._2))                                 ?:?  valid  U:orb-smt-z3          0.057 ║
║ LongestCommonSubsequence.invoke$5        precond. (call depsMono$5(i - BigInt(1), j, st@, out$1))             ?:?  valid  U:orb-smt-z3          0.053 ║
║ LongestCommonSubsequence.invoke$5        precond. (call depsMono$5(i - BigInt(1), n, st@, out$1))             ?:?  valid  U:orb-smt-z3          0.066 ║
║ LongestCommonSubsequence.invoke$5        precond. (call depsMono$5(i, j - BigInt(1), st@, out$1))             ?:?  valid  U:orb-smt-z3          0.060 ║
║ LongestCommonSubsequence.invoke$5        precond. (call lcs-mem$3(i, j, st@))                                 ?:?  valid  U:orb-smt-z3          0.044 ║
║ LongestCommonSubsequence.lcs-mem$3       match exhaustiveness                                                 ?:?  valid  U:orb-smt-z3          0.028 ║
║ LongestCommonSubsequence.lcs-mem$3       postcondition                                                        ?:?  valid  U:orb-smt-z3          0.294 ║
║ LongestCommonSubsequence.lcs-mem$3       precond. (call deps$5(i - BigInt(1), j, st@))                        ?:?  valid  U:orb-smt-z3          0.034 ║
║ LongestCommonSubsequence.lcs-mem$3       precond. (call deps$5(i, j - BigInt(1), st@))                        ?:?  valid  U:orb-smt-z3          0.041 ║
║ LongestCommonSubsequence.lcs-mem$3       precond. (call lcs-mem$3(a$175, j, st@))                             ?:?  valid  U:orb-smt-z3          0.101 ║
║ LongestCommonSubsequence.lcs-mem$3       precond. (call lcs-mem$3(a$179, a$178, st@))                         ?:?  valid  U:orb-smt-z3          0.118 ║
║ LongestCommonSubsequence.lcs-mem$3       precond. (call lcs-mem$3(i, a$176, dres$0._2 ++ Set[Mem ...)         ?:?  valid  U:orb-smt-z3          0.214 ║
║ LongestCommonSubsequence.lcsSols$5       postcondition                                                        ?:?  valid  U:orb-smt-z3          0.134 ║
║ LongestCommonSubsequence.lcsSols$5       precond. (call bottomup$5(m, n, n, st@))                             ?:?  valid  U:orb-smt-z3          0.029 ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 52     valid: 52     invalid: 0      unknown 0                                                                                           6.006 ║
╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] - considering function lcs-mem-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.021s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 14
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.037s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.03s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.044s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 16
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.03s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.026s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.033s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 16
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.051s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 19 + 21
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.044s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.035s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.083s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 21 + 16
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.061s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.052s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 7
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -16 <= 0
[[34m  Info  [0m] checked VC inst... in 0.111s
[[34m  Info  [0m] Function: lcs-mem-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 16
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -18 <= 0
[[34m  Info  [0m] checked VC inst... in 0.208s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcs-mem-steps-->1 * x$3$10._2 + -17 <= 0
[[34m  Info  [0m] checked VC inst... in 0.191s
[[34m  Info  [0m] - Found inductive invariant: lcs-mem-steps --> steps + BigInt(-17) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function invoke-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-steps-->1 * res$203._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: invoke-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-steps-->1 * res$203._2 + -3 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] Function: invoke-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-steps-->1 * res$203._2 + -21 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] invoke-steps-->1 * res$203._2 + -20 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: invoke-steps --> steps + BigInt(-20) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function bottomup-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((0 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.032s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((0 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 13
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((0 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.048s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 23 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.036s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 18 + 24
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + -1 * mult(m, n)) + 0 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.038s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 25 + 42
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + -33 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.041s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 26 + 67
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((0 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.052s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 17 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((0 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.035s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 29 + 18
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + 0 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.034s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 31 + 47
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + 0 * mult(m, n)) + -35 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.035s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 32 + 78
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-32 * j + 1 * x$4$8._2) + -33 * mult(m, n)) + -32 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.012s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-30 * j + 1 * x$4$8._2) + 100 * mult(m, n)) + -160 * m) + -27 <= 0
[[34m  Info  [0m] checked VC inst... in 0.046s
[[34m  Info  [0m] Function: bottomup-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 35 + 110
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-31 * j + 1 * x$4$8._2) + -32 * mult(m, n)) + -31 * m) + -29 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] bottomup-steps-->(((-30 * j + 1 * x$4$8._2) + -30 * mult(m, n)) + -30 * m) + -27 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] - Found inductive invariant: bottomup-steps --> (((BigInt(-30) * j + steps) + BigInt(-30) * (m * n)) + BigInt(-30) * m) + BigInt(-27) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[31m Error  [0m] - Unable to prove or disprove invariant, the invariant is probably true
[[34m  Info  [0m] - considering function lcsSols-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcsSols-steps-->(((0 * n + 0 * m) + 0 * mult(m, n)) + 1 * x$5$6._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: lcsSols-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcsSols-steps-->(((-31 * n + -31 * m) + -30 * mult(m, n)) + 1 * x$5$6._2) + -30 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] lcsSols-steps-->(((-30 * n + -30 * m) + -30 * mult(m, n)) + 1 * x$5$6._2) + -28 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: lcsSols-steps --> (((BigInt(-30) * n + BigInt(-30) * m) + BigInt(-30) * (m * n)) + steps) + BigInt(-28) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ┌─────────┐
╔═╡ Summary ╞════════════════════════════════════════════════════════════════╗
║ └─────────┘                                                                ║
║ bottomup        steps <= ((30 * (m * n) + 30 * m) + 30 * j) + 27    18.101 ║
║ invoke          steps <= 20                                         0.301  ║
║ lcs             steps <= 17                                         3.656  ║
║ lcsSols         steps <= ((30 * (m * n) + 30 * m) + 30 * n) + 28    0.499  ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 4     inferred: 4     unknown: 0     time: 22.557                   ║
╚════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Stats dumped to file: LongestCommonSubsequence-stats.txt
