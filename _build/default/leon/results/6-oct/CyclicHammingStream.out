[[33mWarning [0m] warning: there were three feature warnings; re-run with -feature for details
[[34m  Info  [0m] Output written on leon.out
[[33mWarning [0m] Postcondition of mergeSusp has resource template in conjunctions which cannot be separated!
[[34m  Info  [0m] Output written on leon.out
[[34m  Info  [0m]  - Now considering 'postcondition' VC for map$14 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for map$14 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for mapSusp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mapSusp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for min$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for merge$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for force$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for mergeSusp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for mergeMapProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for argChainedStreamProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainedStreamProp$5(s.tailFun match { ...)' VC for argChainedStreamProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for argChainedStreamProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for argChainingIsTransitive$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainingIsTransitive$5(s.tailFun matc ...)' VC for argChainingIsTransitive$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainedStreamProp$5(s, n))' VC for argChainingIsTransitive$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for argChainingIsTransitive$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for next$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for next$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for next$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for next$7 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainedStreamProp$5(f, n))' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call next$7(f, s, st@))' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call nthElemAfterSecond$5(n - BigInt(1), s, t ...)' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for nthElemAfterSecond$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for hamstream$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for hamGen$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for hamStreamSatisfiesProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainingIsTransitive$5(s$121, n))' VC for hamStreamSatisfiesProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call argChainedStreamProp$5(s$121, n))' VC for hamStreamSatisfiesProp$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for nthHammingNumber$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call hamStreamSatisfiesProp$5(n))' VC for nthHammingNumber$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'precond. (call nthElemAfterSecond$5(n, first$3, second$ ...)' VC for nthHammingNumber$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for nthHammingNumber$5 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'postcondition' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
[[34m  Info  [0m]  - Now considering 'match exhaustiveness' VC for fval-mem$3 @?:?...
[[34m  Info  [0m]  => VALID
  ┌──────────────────────┐
╔═╡ Verification Summary ╞════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ └──────────────────────┘                                                                                                                                ║
║ MergeAndHammingNumbers.argChainedStreamProp$5     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.072 ║
║ MergeAndHammingNumbers.argChainedStreamProp$5     postcondition                                                 ?:?  valid  U:orb-smt-z3          0.067 ║
║ MergeAndHammingNumbers.argChainedStreamProp$5     precond. (call argChainedStreamProp$5(s.tailFun match { ...)  ?:?  valid  U:orb-smt-z3          0.058 ║
║ MergeAndHammingNumbers.argChainingIsTransitive$5  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.060 ║
║ MergeAndHammingNumbers.argChainingIsTransitive$5  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.235 ║
║ MergeAndHammingNumbers.argChainingIsTransitive$5  precond. (call argChainedStreamProp$5(s, n))                  ?:?  valid  U:orb-smt-z3          0.081 ║
║ MergeAndHammingNumbers.argChainingIsTransitive$5  precond. (call argChainingIsTransitive$5(s.tailFun matc ...)  ?:?  valid  U:orb-smt-orb-cvc4    4.997 ║
║ MergeAndHammingNumbers.force$5                    match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.039 ║
║ MergeAndHammingNumbers.force$5                    postcondition                                                 ?:?  valid  U:orb-smt-z3          0.131 ║
║ ValOrSusp.fval-mem$3                              match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.035 ║
║ ValOrSusp.fval-mem$3                              postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.131 ║
║ MergeAndHammingNumbers.hamGen$5                   postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.083 ║
║ MergeAndHammingNumbers.hamStreamSatisfiesProp$5   postcondition                                                 ?:?  valid  U:orb-smt-z3          0.168 ║
║ MergeAndHammingNumbers.hamStreamSatisfiesProp$5   precond. (call argChainedStreamProp$5(s$121, n))              ?:?  valid  U:orb-smt-z3          0.054 ║
║ MergeAndHammingNumbers.hamStreamSatisfiesProp$5   precond. (call argChainingIsTransitive$5(s$121, n))           ?:?  valid  U:orb-smt-z3          0.174 ║
║ MergeAndHammingNumbers.hamstream$5                postcondition                                                 ?:?  valid  U:orb-smt-z3          0.029 ║
║ MergeAndHammingNumbers.map$14                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.033 ║
║ MergeAndHammingNumbers.map$14                     postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.704 ║
║ MergeAndHammingNumbers.mapSusp$5                  match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.039 ║
║ MergeAndHammingNumbers.mapSusp$5                  postcondition                                                 ?:?  valid  U:orb-smt-z3          0.201 ║
║ MergeAndHammingNumbers.merge$5                    postcondition                                                 ?:?  valid  U:orb-smt-z3          0.051 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.066 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.067 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.074 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.081 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.067 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.078 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.077 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.031 ║
║ MergeAndHammingNumbers.mergeMapProp$5             match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.070 ║
║ MergeAndHammingNumbers.mergeMapProp$5             postcondition                                                 ?:?  valid  U:orb-smt-z3          0.111 ║
║ MergeAndHammingNumbers.mergeSusp$5                postcondition                                                 ?:?  valid  U:orb-smt-z3          0.160 ║
║ MergeAndHammingNumbers.min$7                      postcondition                                                 ?:?  valid  U:orb-smt-z3          0.039 ║
║ MergeAndHammingNumbers.next$7                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.059 ║
║ MergeAndHammingNumbers.next$7                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.063 ║
║ MergeAndHammingNumbers.next$7                     match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.031 ║
║ MergeAndHammingNumbers.next$7                     postcondition                                                 ?:?  valid  U:orb-smt-z3          0.184 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.063 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.085 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.042 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       postcondition                                                 ?:?  valid  U:orb-smt-z3          0.253 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       precond. (call argChainedStreamProp$5(f, n))                  ?:?  valid  U:orb-smt-z3          0.081 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       precond. (call next$7(f, s, st@))                             ?:?  valid  U:orb-smt-z3          0.145 ║
║ MergeAndHammingNumbers.nthElemAfterSecond$5       precond. (call nthElemAfterSecond$5(n - BigInt(1), s, t ...)  ?:?  valid  U:orb-smt-z3          0.242 ║
║ MergeAndHammingNumbers.nthHammingNumber$5         match exhaustiveness                                          ?:?  valid  U:orb-smt-z3          0.083 ║
║ MergeAndHammingNumbers.nthHammingNumber$5         postcondition                                                 ?:?  valid  U:orb-smt-orb-cvc4    0.263 ║
║ MergeAndHammingNumbers.nthHammingNumber$5         precond. (call hamStreamSatisfiesProp$5(n))                   ?:?  valid  U:orb-smt-z3          0.033 ║
║ MergeAndHammingNumbers.nthHammingNumber$5         precond. (call nthElemAfterSecond$5(n, first$3, second$ ...)  ?:?  valid  U:orb-smt-z3          0.217 ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 48     valid: 48     invalid: 0      unknown 0                                                                                            10.207 ║
╚═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Output written on leon.out
[[34m  Info  [0m] - considering function map-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] map-steps-->1 * res$218._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.005s
[[34m  Info  [0m] Function: map-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] map-steps-->1 * res$218._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] Function: map-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] map-steps-->1 * res$218._2 + -11 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] map-steps-->1 * res$218._2 + -9 <= 0
[[34m  Info  [0m] checked VC inst... in 0.001s
[[34m  Info  [0m] - Found inductive invariant: map-steps --> steps + BigInt(-9) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - Nothing to solve for min-steps
[[34m  Info  [0m] - considering function merge-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] merge-steps-->1 * x$1$32._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.003s
[[34m  Info  [0m] Function: merge-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] merge-steps-->1 * x$1$32._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: merge-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] merge-steps-->1 * x$1$32._2 + -14 <= 0
[[34m  Info  [0m] checked VC inst... in 0.004s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] merge-steps-->1 * x$1$32._2 + -11 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: merge-steps --> steps + BigInt(-11) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function hamGen-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] hamGen-steps-->1 * x$9$3._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] Function: hamGen-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] hamGen-steps-->1 * x$9$3._2 + -51 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] hamGen-steps-->1 * x$9$3._2 + -49 <= 0
[[34m  Info  [0m] checked VC inst... in 0.002s
[[34m  Info  [0m] - Found inductive invariant: hamGen-steps --> steps + BigInt(-49) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function mapSusp-steps...
[[34m  Info  [0m] - considering function force-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + 0 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.013s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -7 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + 0 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -7 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + 0 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.04s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -7 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.083s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + 0 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.078s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -22 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.102s
[[34m  Info  [0m] Function: force-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 10
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -27 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.009s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] force-steps-->if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       1 * x$2$20._2 + -26 <= 0
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] - Found inductive invariant: force-steps --> if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       st@.contains(Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun))
[[34m  Info  [0m]     }) {
[[34m  Info  [0m]       steps + BigInt(-26) <= BigInt(0)
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function mergeSusp-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.047s
[[34m  Info  [0m] Function: mergeSusp-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 1
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + 0 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.052s
[[34m  Info  [0m] Function: mergeSusp-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + -58 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.031s
[[34m  Info  [0m] Function: mergeSusp-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 15 + 16
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + -84 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.04s
[[34m  Info  [0m] Function: mergeSusp-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 13 + 31
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + -111 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] mergeSusp-steps-->if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun) ∈ st@
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           1 * x$3$10._2 + -110 <= 0
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] checked VC inst... in 0.019s
[[34m  Info  [0m] - Found inductive invariant: mergeSusp-steps --> if (if (a.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]   if (a.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]     if (a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       st@.contains(Fval-memM@(a.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun))
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   false
[[34m  Info  [0m] }) {
[[34m  Info  [0m]   if (if (b.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]     if (b.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]       if (b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         st@.contains(Fval-memM@(b.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun))
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       false
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     false
[[34m  Info  [0m]   }) {
[[34m  Info  [0m]     if (c.tailFun.isInstanceOf[Susp]) {
[[34m  Info  [0m]       if (c.tailFun.asInstanceOf[Susp].fun.isInstanceOf[MapSuspL@]) {
[[34m  Info  [0m]         if (if (c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun.isInstanceOf[Val]) {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           st@.contains(Fval-memM@(c.tailFun.asInstanceOf[Susp].fun.asInstanceOf[MapSuspL@].xs.tailFun))
[[34m  Info  [0m]         }) {
[[34m  Info  [0m]           steps + BigInt(-110) <= BigInt(0)
[[34m  Info  [0m]         } else {
[[34m  Info  [0m]           true
[[34m  Info  [0m]         }
[[34m  Info  [0m]       } else {
[[34m  Info  [0m]         true
[[34m  Info  [0m]       }
[[34m  Info  [0m]     } else {
[[34m  Info  [0m]       true
[[34m  Info  [0m]     }
[[34m  Info  [0m]   } else {
[[34m  Info  [0m]     true
[[34m  Info  [0m]   }
[[34m  Info  [0m] } else {
[[34m  Info  [0m]   true
[[34m  Info  [0m] }
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function fval-mem-steps...
[[34m  Info  [0m] - considering function next-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.014s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 6 + 7
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.084s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + -7 <= 0
[[34m  Info  [0m] checked VC inst... in 0.144s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 7 + 9
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 1.805s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + -117 <= 0
[[34m  Info  [0m] checked VC inst... in 5.927s
[[34m  Info  [0m] Function: next-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 12
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + -122 <= 0
[[34m  Info  [0m] checked VC inst... in 0.075s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] next-steps-->1 * x$4$7._2 + -121 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] - Found inductive invariant: next-steps --> steps + BigInt(-121) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function nthElemAfterSecond-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(0 * n + 1 * x$5$6._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.02s
[[34m  Info  [0m] Function: nthElemAfterSecond-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(-8 * n + 4 * x$5$6._2) + -509 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: nthElemAfterSecond-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 11
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(0 * n + 1 * x$5$6._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.136s
[[34m  Info  [0m] Function: nthElemAfterSecond-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(-8 * n + 4 * x$5$6._2) + -509 <= 0
[[34m  Info  [0m] checked VC inst... in 0.108s
[[34m  Info  [0m] Function: nthElemAfterSecond-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 16 + 11
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(-131 * n + 1 * x$5$6._2) + 131 <= 0
[[34m  Info  [0m] checked VC inst... in 0.007s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthElemAfterSecond-steps-->(-129 * n + 1 * x$5$6._2) + 127 <= 0
[[34m  Info  [0m] checked VC inst... in 0.008s
[[34m  Info  [0m] - Found inductive invariant: nthElemAfterSecond-steps --> (BigInt(-129) * n + steps) + BigInt(127) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
[[34m  Info  [0m] - considering function nthHammingNumber-steps...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.027s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-8 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.022s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 18
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-132 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.044s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 9 + 29
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.022s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-8 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.015s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 10 + 20
[[34m  Info  [0m] - More unrollings for invariant inference
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + 0 <= 0
[[34m  Info  [0m] checked VC inst... in 0.066s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 8 + 1
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(0 * n + 1 * x$10$3._2) + -6 <= 0
[[34m  Info  [0m] checked VC inst... in 0.083s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 12 + 9
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-57 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.094s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 11 + 21
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-112 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.075s
[[34m  Info  [0m] Function: nthHammingNumber-steps--Found candidate invariant is not a real invariant! 
[[34m  Info  [0m] # of atomic predicates: 14 + 32
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-132 * n + 1 * x$10$3._2) + -5 <= 0
[[34m  Info  [0m] checked VC inst... in 0.024s
[[34m  Info  [0m] minimizing...
[[34m  Info  [0m] Candidate invariants
[[34m  Info  [0m] nthHammingNumber-steps-->(-129 * n + 1 * x$10$3._2) + -4 <= 0
[[34m  Info  [0m] checked VC inst... in 0.011s
[[34m  Info  [0m] - Found inductive invariant: nthHammingNumber-steps --> (BigInt(-129) * n + steps) + BigInt(-4) <= BigInt(0)
[[34m  Info  [0m] - Verifying Invariants... 
[[34m  Info  [0m] - Invariant verified
Resource Verification Results: 
. ┌─────────┐
╔═╡ Summary ╞══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║ └─────────┘                                                                                                                                                                                                                                                  ║
║ force           val in = inSt[BigInt]
if (toWithState[Boolean](constTimeArg(a)).in[BigInt](in)) {
  steps <= 26
} else {
  true
}                                                                                                                     1.489  ║
║ hamGen          steps <= 49                                                                                                                                                                                                                           0.303  ║
║ map             steps <= 9                                                                                                                                                                                                                            0.519  ║
║ merge           steps <= 11                                                                                                                                                                                                                           0.330  ║
║ mergeSusp       val in = inSt[BigInt]
if (toWithState[Boolean](constTimeArg(a)).in[BigInt](in) && toWithState[Boolean](constTimeArg(b)).in[BigInt](in) && toWithState[Boolean](constTimeArg(c)).in[BigInt](in)) {
  steps <= 110
} else {
  true
}    1.000  ║
║ next            steps <= 121                                                                                                                                                                                                                          10.826 ║
║ nthElemAfterSe… steps <= 129 * n + -127                                                                                                                                                                                                               1.346  ║
║ nthHammingNumb… steps <= 129 * n + 4                                                                                                                                                                                                                  1.666  ║
╟┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╢
║ total: 8     inferred: 8     unknown: 0     time: 17.479                                                                                                                                                                                                     ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝
[[34m  Info  [0m] Stats dumped to file: CyclicHammingStream-stats.txt
