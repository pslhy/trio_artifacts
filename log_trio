2022-06-27 12:36:12.743940+09:00 Candidate Found: fun (x:list * list) -> Nil
2022-06-27 12:36:12.757319+09:00 CEx Found: (Nil, Cons (0, Nil))
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.757510+09:00 Candidate Found: fix (f : list * list -> list) = fun (x:list * list) -> x . 1
2022-06-27 12:36:12.758648+09:00 CEx Found: (Cons (0, Nil), Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.760767+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) = fun (x:list * list) -> Cons (0, Nil)
2022-06-27 12:36:12.760837+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.772091+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.772163+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.781852+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.781928+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.794723+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.794799+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.805648+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.805765+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.819445+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.819592+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.833015+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.833089+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.846961+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.847037+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.861391+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.862516+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.877119+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.877208+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.891637+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.891718+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.907111+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.907184+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.923304+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.923379+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.939560+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.939638+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.956737+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.956817+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.974813+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.974895+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:12.992598+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:12.992666+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.013833+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.013905+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.034302+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.034376+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.056857+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.056931+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.081174+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.081246+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.103676+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.103800+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.128978+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.129053+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.156004+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.156086+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.181380+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.181457+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.213420+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.213506+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.247626+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.247723+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.284342+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.284420+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.320764+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.320848+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.355678+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.355756+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.389503+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.389580+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.430722+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.430805+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.474079+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.474156+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.518010+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.518096+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.557409+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.557519+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

2022-06-27 12:36:13.598740+09:00 Candidate Found: fix (f : list * list -> list) =
  fun (x:list * list) ->
    fix (f : list * list -> list) =
      fun (x:list * list) ->
        match x . 0 with
          | Nil _ -> x . 1
          | Cons _ -> x . 0
2022-06-27 12:36:13.598839+09:00 CEx Found: (Nil, Nil)
synth_type: (list, list) -> list
 ec: empty
 tc: {f -> ((list, list) -> list),
x -> (list, list)}
 td: {list -> Nil of ()
 | Cons of (nat, list),
nat -> O of ()
 | S of nat}
 vc: {Cons -> (nat, list), list,
Nil -> (), list,
O -> (), nat,
S -> nat, nat}
 spec: [[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Nil([]), Nil([])], Nil([]);[Cons([O([]), Nil([])]), Nil([])], Cons([O([]), Nil([])]);[Nil([]), Cons([O([]), Nil([])])], Cons([O([]), Nil([])])]

